@startuml "PCF Update pushed through EDC"

participant PCF_Client
participant Client_EDC
participant EDC_Discovery_Service
participant Company_EDC
participant Company_DTR
participant Company_API_Wapper
participant Company_PCF_App

Company_PCF_App -> Company_PCF_App: Calculate updated PCF value
Company_PCF_App -> Company_PCF_App: Select reveivers for PCF push update

group Send updated PCF value to already known Client

group Technical user login (not shown in detail here)
end

group Lookup Clients's EDC
Company_PCF_App -> EDC_Discovery_Service: Lookup EDC URL (via BPN)
note right
POST https://portal-backend.some.demo.catena-x.net/api/administration/connectors/discovery
{
   [ <Client's BPNL> ] 
}
end note
EDC_Discovery_Service -> Company_PCF_App: EDC URL
end

group Lookup Clients PCF Receive Asset
Company_PCF_App -> Company_EDC: Lookup Client's Receive Asset\n(via Company's EDC URL)
Company_EDC -> Client_EDC: Lookup Asset in Catalog\n(EDC asset type "data.pcf.exchangeEndpoint")
note right
There could be multiple EDC URLs, but
only one with a PCF Exchange Asset
end note
Client_EDC -> Company_EDC: PCF Asset
Company_EDC -> Company_PCF_App: PCF Asset ID
end

group Push PCF to Client
Company_PCF_App -> Company_API_Wapper: Invoke asset with sender's BPN
note right
PUT https://clientApiWrapperUrl/api/service/722b7ea2-3bc6-4f9e-a106-b8650d206b69/productIds/mat345?providerUrl=https://client.controlplane.url:8384&BPN=<Company's BPN>
{
  ...Updated PCF JSON in Body...
}
end note
Company_API_Wapper -> Company_EDC: Negotiate access to asset and enable proxy transfer
Company_EDC -> Client_EDC: Negotiate access to asset and enable proxy transfer
Client_EDC -> Company_EDC: Agreement & EndpointDataReference
Company_EDC -> Company_API_Wapper: Agreement & EndpointDataReference
Company_API_Wapper -> Company_EDC: PCF endpoint call incl. sender's BPN
Company_EDC -> Client_EDC: PCF endpoint call incl.sender's BPN
note right
Using PCF API through EDC via HTTP Proxy:
PUT https://{someURL}/productIds/mat345?BPN=<Company's BPN>
{ ... }
end note
Client_EDC -> PCF_Client: PCF endpoint call incl. sender's BPN
PCF_Client -> Client_EDC: OK
Client_EDC -> Company_EDC: OK
Company_EDC -> Company_API_Wapper: OK
Company_API_Wapper -> Company_PCF_App: OK
end
end
 
@enduml