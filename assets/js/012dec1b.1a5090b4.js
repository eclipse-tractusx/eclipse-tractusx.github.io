"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[14969],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(96540);const r={},i=s.createContext(r);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:t},e.children)}},41834:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"release/trg-4/trg-4-03","title":"TRG 4.03 - Non-root container","description":"| Status | Created      | Post-History                     |","source":"@site/docs/release/trg-4/trg-4-03.md","sourceDirName":"release/trg-4","slug":"/release/trg-4/trg-4-03","permalink":"/docs/release/trg-4/trg-4-03","draft":false,"unlisted":false,"editUrl":"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io/tree/main/docs/release/trg-4/trg-4-03.md","tags":[],"version":"current","frontMatter":{"title":"TRG 4.03 - Non-root container"},"sidebar":"docs","previous":{"title":"TRG 4.02 - Base Images","permalink":"/docs/release/trg-4/trg-4-02"},"next":{"title":"TRG 4.04 - Image signing","permalink":"/docs/release/trg-4/trg-4-04"}}');var r=n(74848),i=n(28453);const o={title:"TRG 4.03 - Non-root container"},a=void 0,c={},l=[{value:"Why",id:"why",level:2},{value:"Description",id:"description",level:2},{value:"Implementation",id:"implementation",level:3}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Status"}),(0,r.jsx)(t.th,{children:"Created"}),(0,r.jsx)(t.th,{children:"Post-History"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Active"}),(0,r.jsx)(t.td,{children:"04-Jan-2024"}),(0,r.jsx)(t.td,{children:"Adjust user ids"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Active"}),(0,r.jsx)(t.td,{children:"29-Dec-2022"}),(0,r.jsx)(t.td,{children:"Initial Release"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Draft"}),(0,r.jsx)(t.td,{children:"14-Sept-2022"}),(0,r.jsx)(t.td,{children:"Draft"})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"why",children:"Why"}),"\n",(0,r.jsx)(t.p,{children:"Normally containers do not need root permission but if a container image runs as root, a compromised container has potentially root permissions on the underlying node."}),"\n",(0,r.jsxs)(t.p,{children:["For security reasons this is ",(0,r.jsx)(t.strong,{children:"must"})," be followed."]}),"\n",(0,r.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(t.h3,{id:"implementation",children:"Implementation"}),"\n",(0,r.jsxs)(t.p,{children:["The container's ",(0,r.jsx)(t.strong,{children:"Dockerfile"})," and the ",(0,r.jsx)(t.strong,{children:"Pod resource file (yaml)"})," has to be modified to be able to run as a non-root user."]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["First it is recommended to check how the base image is built to see if it\nmight already have a non-root user defined and used. In this case it is enough\nto specify that user in the Dockerfile with the ",(0,r.jsx)(t.code,{children:"USER"})," instruction."]}),"\n",(0,r.jsxs)(t.li,{children:["Otherwise modify the image's Dockerfile with a ",(0,r.jsx)(t.code,{children:"RUN"})," command that adds a non-root user\nand a ",(0,r.jsx)(t.code,{children:"USER"})," command that specifies which user runs the container on startup.\nThe example below can be modified for specific needs/requirements."]}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-Dockerfile",children:"#Pull the base image as Ubuntu\nFROM ubuntu:latest\n\n#Add a user with userid 1000 and name nonroot\nRUN useradd \u2212u 1000 nonroot\n\n#Run Container as nonroot\nUSER nonroot\n"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Modify the ",(0,r.jsx)(t.a,{href:"https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",children:"Pod's or Deployment's configuration"})," by adding ",(0,r.jsx)(t.code,{children:"runAsUser"})," field for both the pod's and container's securityContext section. Also set the ",(0,r.jsx)(t.code,{children:"allowPrivilegeEscalation"})," to ",(0,r.jsx)(t.code,{children:"false"})," on the container's securityContext. See the example below:"]}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: example-pod\nspec:\n  securityContext:\n    runAsUser: 1000 # SPECIFY USER ID HERE\n  containers:\n  - name: example-container\n    image: gcr.io/google-samples/node-hello:1.0\n    securityContext:\n      allowPrivilegeEscalation: false # SET THIS TO FALSE\n"})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);