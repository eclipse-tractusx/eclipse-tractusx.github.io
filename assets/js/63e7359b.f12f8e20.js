"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[7803],{28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>o});var n=i(96540);const a={},s=n.createContext(a);function r(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(s.Provider,{value:t},e.children)}},31002:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"kits/data-trust-and-security-kit/software-development-view/digital-twins","title":"Digital Twins & Storage","description":"Digital Twin Integration, Certification Processes, Implementation Best Practices and Roadmap for Data Trust & Security KIT","source":"@site/docs-kits/kits/data-trust-and-security-kit/software-development-view/digital-twins.md","sourceDirName":"kits/data-trust-and-security-kit/software-development-view","slug":"/kits/data-trust-and-security-kit/software-development-view/digital-twins","permalink":"/docs-kits/next/kits/data-trust-and-security-kit/software-development-view/digital-twins","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"digital-twins","title":"Digital Twins & Storage","description":"Digital Twin Integration, Certification Processes, Implementation Best Practices and Roadmap for Data Trust & Security KIT"},"sidebar":"kits","previous":{"title":"Verifiable Credential Framework","permalink":"/docs-kits/next/kits/data-trust-and-security-kit/software-development-view/verifiable-credentials"},"next":{"title":"Semantic Context Verification","permalink":"/docs-kits/next/kits/data-trust-and-security-kit/software-development-view/semantic-verification"}}');var a=i(74848),s=i(28453);const r={id:"digital-twins",title:"Digital Twins & Storage",description:"Digital Twin Integration, Certification Processes, Implementation Best Practices and Roadmap for Data Trust & Security KIT"},o=void 0,c={},l=[{value:"Connecting with Your Digital Twins",id:"connecting-with-your-digital-twins",level:2},{value:"Using Certificates as Digital Twin Components",id:"using-certificates-as-digital-twin-components",level:3},{value:"How It Works in Practice",id:"how-it-works-in-practice",level:4},{value:"Data Attestation Certificate as Submodel Example",id:"data-attestation-certificate-as-submodel-example",level:4},{value:"Semantic ID Configuration",id:"semantic-id-configuration",level:3},{value:"Future Work",id:"future-work",level:3},{value:"Attestation Processes",id:"attestation-processes",level:2},{value:"Attribute Attestation Creation Process",id:"attribute-attestation-creation-process",level:3},{value:"Self-Issued Data Attestation Credential Creation Process",id:"self-issued-data-attestation-credential-creation-process",level:3},{value:"Third Party Data Attestation Credential Creation Process",id:"third-party-data-attestation-credential-creation-process",level:3},{value:"NOTICE",id:"notice",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Data Trust &amp; Security KIT Icon",src:i(98714).A+""})}),"\n",(0,a.jsx)(t.h2,{id:"connecting-with-your-digital-twins",children:"Connecting with Your Digital Twins"}),"\n",(0,a.jsx)(t.h3,{id:"using-certificates-as-digital-twin-components",children:"Using Certificates as Digital Twin Components"}),"\n",(0,a.jsx)(t.p,{children:"One of the most powerful features of the Data Trust & Security KIT is that you can attach verifiable credentials directly to your digital twins. This means when someone looks up a product or component in your Digital Twin Registry (DTR), they can immediately see the trust certificates associated with it."}),"\n",(0,a.jsxs)(t.p,{children:["Think of it like attaching a quality certificate to a physical product, except this is digital and cryptographically secured. The implementation follows ",(0,a.jsx)(t.strong,{children:(0,a.jsx)(t.a,{href:"/docs-kits/next/kits/digital-twin-kit/adoption-view",children:"Digital Twin KIT"})})," specification for registry integration and ",(0,a.jsx)(t.strong,{children:(0,a.jsx)(t.a,{href:"https://www.w3.org/TR/vc-data-model-2.0/",children:"W3C Verifiable Credentials"})})," format for the credential structure."]}),"\n",(0,a.jsx)(t.h4,{id:"how-it-works-in-practice",children:"How It Works in Practice"}),"\n",(0,a.jsx)(t.p,{children:"When you register a digital twin, you can include submodels as verifiable credentials. Here's what this looks like technically:"}),"\n",(0,a.jsx)(t.h4,{id:"data-attestation-certificate-as-submodel-example",children:"Data Attestation Certificate as Submodel Example"}),"\n",(0,a.jsx)(t.p,{children:"Here\u2019s an example of how a data attestation credential might look as a submodel:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'{\n  "endpoints": [\n      {\n          "interface": "SUBMODEL-3.0",\n          "protocolInformation": {\n              "href": "https://<edc.dataplane>/api/public/data/urn:uuid:a377ff49-6bde-4215-8d38-b8f02c991a35/credential",\n              "endpointProtocol": "HTTP",\n              "endpointProtocolVersion": ["1.1"],\n              "subprotocol": "DSP",\n              "subprotocolBody": "id=urn:uuid:3e4a5957-f226-478a-ab18-79ced49d6195;dspEndpoint=https://edc.controlplane/api/v1/dsp",\n              "subprotocolBodyEncoding": "plain",\n              "securityAttributes": [\n                  {\n                      "type": "NONE",\n                      "key": "NONE", \n                      "value": "NONE"\n                  }\n              ]\n          }\n      }\n  ],\n  "idShort": "pcfDataAttestation",\n  "id": "urn:uuid:a377ff49-6bde-4215-8d38-b8f02c991a35",\n  "semanticId": {\n      "type": "ExternalReference",\n      "keys": [\n          {\n              "type": "Entity",\n              "value": "https://www.w3.org/ns/credentials/v2"\n          },\n          {\n              "type": "DataElement", \n              "value": "https://raw.githubusercontent.com/eclipse-tractusx/tractusx-profiles/refs/heads/main/tx/credentials/schema/context/dac/v1/DataAttestationCredential.jsonld"\n          },\n          {\n              "type": "Submodel",\n              "value": "urn:samm:io.catenax.pcf:7.0.0#Pcf"\n          },\n          {\n              "type": "Operation",\n              "value": "https://w3c.github.io/vc-jws-2020/contexts/v1/"\n          }\n      ]\n  },\n  "description": [\n      {\n          "language": "en",\n          "text": "Verifiable Data Attestation Submodel"\n      }\n  ],\n  "displayName": []\n}\n'})}),"\n",(0,a.jsxs)(t.admonition,{type:"caution",children:[(0,a.jsxs)(t.p,{children:["At the moment, this is technically supported but is not fully compliant with the ",(0,a.jsx)(t.a,{href:"https://app.swaggerhub.com/apis/Plattform_i40/SubmodelServiceSpecification/V3.0_SSP-003",children:"Submodel Service Specification V3.0 READ Profile SSP-003"})," API specification standard from the ",(0,a.jsx)(t.a,{href:"https://industrialdigitaltwin.org/en/",children:"IDTA"}),". Verifiable Credentials submodels are currently not compatible with the ",(0,a.jsx)(t.a,{href:"https://github.com/eclipse-aaspe/package-explorer",children:"AASX format"}),", therefore is specified in the ",(0,a.jsx)(t.code,{children:"href"})," endpoint the path ",(0,a.jsx)(t.code,{children:"/credential"})," to avoid conflicts. This path needs to be supported by a special submodel service, for example a blob storage or a wallet."]}),(0,a.jsxs)(t.p,{children:["The only requirements is that it must be correctly referenced as an asset at the Connector, and then being linked, via the ",(0,a.jsx)(t.code,{children:"assetid"})," in the ",(0,a.jsx)(t.code,{children:"subprotocolBody"})," attribute at the submodel descriptor as described above."]})]}),"\n",(0,a.jsxs)(t.p,{children:["For semantic identification, in order for an application to know that this is a verifiable credential submodel or not, the ",(0,a.jsx)(t.code,{children:"semanticId"})," must specify from top to down the different metadata abstraction levels. Which describe the ",(0,a.jsx)(t.code,{children:"type"})," of data which will be retrieved via the Connector dataplane:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Which ",(0,a.jsx)(t.strong,{children:"version"})," of verifiable credential in the ",(0,a.jsx)(t.code,{children:"Entity"})," key."]}),"\n",(0,a.jsxs)(t.li,{children:["Which ",(0,a.jsx)(t.strong,{children:"type"})," of verifiable credential in the ",(0,a.jsx)(t.code,{children:"DataElement"})," key."]}),"\n",(0,a.jsxs)(t.li,{children:["Which ",(0,a.jsx)(t.strong,{children:"aspect model"})," is fully or partially embedded in the verifiable credential using the standard ",(0,a.jsx)(t.code,{children:"Submodel"})," key"]}),"\n",(0,a.jsxs)(t.li,{children:["Which ",(0,a.jsx)(t.strong,{children:"signature type"})," is used on this verifiable credential in the ",(0,a.jsx)(t.code,{children:"Operation"})," Key"]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Below more details can be found."}),"\n",(0,a.jsx)(t.h3,{id:"semantic-id-configuration",children:"Semantic ID Configuration"}),"\n",(0,a.jsx)(t.p,{children:"For different submodels, different semantic ID structures are used to identify various aspects and content types:"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Type"}),(0,a.jsx)(t.th,{children:"Description"}),(0,a.jsx)(t.th,{children:"Example"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"Entity"})}),(0,a.jsx)(t.td,{children:"Highest abstraction level indicating credential format"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"https://www.w3.org/ns/credentials/v2"})})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"DataElement"})}),(0,a.jsx)(t.td,{children:"Type of verifiable credential/presentation indicated with the uri"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"https://raw.githubusercontent.com/eclipse-tractusx/tractusx-profiles/refs/heads/main/tx/credentials/schema/context/dac/v1/DataAttestationCredential.jsonld"})})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"Submodel"})}),(0,a.jsx)(t.td,{children:"Aspect model type and structure reference"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"urn:samm:io.catenax.pcf:7.0.0#Pcf"})})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"Operation"})}),(0,a.jsx)(t.td,{children:"Signature type context for verification"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"https://w3c.github.io/vc-jws-2020/contexts/v1/"})})]})]})]}),"\n",(0,a.jsxs)(t.admonition,{type:"info",children:[(0,a.jsx)(t.p,{children:"Currently is not defined where to do the hosting JSON-LD @context for the base credentials and the semantic models."}),(0,a.jsxs)(t.p,{children:["For the moment the base credentials are available at this location ",(0,a.jsx)(t.a,{href:"https://raw.githubusercontent.com/eclipse-tractusx/tractusx-profiles/refs/heads/main/tx/credentials/schema/context/dac/v1/DataAttestationCredential.jsonld",children:"eclipse-tractusx/tractusx-profiles/tx/dac/v1/DataAttestationCredential"})," and ",(0,a.jsx)(t.a,{href:"https://raw.githubusercontent.com/eclipse-tractusx/tractusx-profiles/refs/heads/main/tx/credentials/schema/context/aac/v1/AttributeAttestationCredential.jsonld",children:"eclipse-tractusx/tractusx-profiles/tx/aac/v1/AttributeAttestationCredential"}),"."]}),(0,a.jsxs)(t.p,{children:["For the semantic models JSON-LD @contexts are currently stored in ",(0,a.jsx)(t.a,{href:"https://github.com/eclipse-tractusx/sldt-semantic-models",children:"sldt-semantic-models"})," repository at the ",(0,a.jsx)(t.code,{children:"gen"})," folder of the ",(0,a.jsx)(t.a,{href:"https://github.com/eclipse-tractusx/sldt-semantic-models/blob/main/io.catenax.pcf/7.0.0/gen/Pcf-context.jsonld",children:(0,a.jsx)(t.code,{children:"PCF v7.0.0"})}),", ",(0,a.jsx)(t.a,{href:"https://github.com/eclipse-tractusx/sldt-semantic-models/blob/main/io.catenax.generic.digital_product_passport/6.0.0/gen/DigitalProductPassport-context.jsonld",children:(0,a.jsx)(t.code,{children:"DPP v6.0.0"})})," and ",(0,a.jsx)(t.a,{href:"https://github.com/eclipse-tractusx/sldt-semantic-models/blob/main/io.catenax.business_partner_certificate/3.1.0/gen/BusinessPartnerCertificate-context.jsonld",children:(0,a.jsx)(t.code,{children:"CCM 3.1.0"})})," models."]}),(0,a.jsx)(t.p,{children:"More models JSON-LD @contexts can be generated in the future, and also self-hosted. The only condition is that they MUST be available for the public internet and reachable by data consumers."})]}),"\n",(0,a.jsx)(t.h3,{id:"future-work",children:"Future Work"}),"\n",(0,a.jsxs)(t.p,{children:["In the ",(0,a.jsx)(t.strong,{children:"target state"})," it should be resolved with some type of ",(0,a.jsx)(t.strong,{children:"W3C redirection"})," uri like ",(0,a.jsx)(t.code,{children:"https://w3id.org/tractusx/dac/v1/"})," and ",(0,a.jsx)(t.code,{children:"https://w3id.org/tractusx/aac/v1/"})," for the base credentials"]}),"\n",(0,a.jsxs)(t.p,{children:["And for the semantic models it could look like this for example (for Catena-X models): ",(0,a.jsx)(t.code,{children:"https://w3id.org/catenax/vocab/io.catenax.pcf/7.0.0/"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"attestation-processes",children:"Attestation Processes"}),"\n",(0,a.jsx)(t.p,{children:"Let's analyze what role is the Digital Twin playing in the attestation and verifiable credential creation process:"}),"\n",(0,a.jsx)(t.h3,{id:"attribute-attestation-creation-process",children:"Attribute Attestation Creation Process"}),"\n",(0,a.jsx)(t.p,{children:"The attribute certification process enables third-party auditors to verify specific attributes within aspect models:"}),"\n",(0,a.jsx)(t.mermaid,{value:"sequenceDiagram\n    participant DP as Data Provider\n    participant DTR as Digital Twin Registry\n    participant SS as Submodel Service\n    participant DA as Attestation Provider\n    participant AW as Attestation Provider Wallet\n    \n    DP->>DTR: Register Digital Twin\n    DP->>SS: Register Aspect Model\n    DP->>DA: Request Attribute Certification\n    DA->>DTR: Query Digital Twin via Connector\n    DA->>SS: Query Aspect Model via Connector\n    DA->>DA: Validate Attributes\n    DA->>DA: Create Attribute Attestation Payload\n    DA->>AW: Issue Attribute Attestation Credential (AAC)\n    AW->>AW: Sign with private key\n    AW->>AW: Add to revocation list\n    AW->>DA: Issued Verifiable Credential\n    DA->>DP: Return AAC via Connector\n    DP->>DTR: Update Twin with new Verifiable Credential Submodel\n    DP->>SS: Store Verifiable Credential"}),"\n",(0,a.jsx)(t.h3,{id:"self-issued-data-attestation-credential-creation-process",children:"Self-Issued Data Attestation Credential Creation Process"}),"\n",(0,a.jsx)(t.p,{children:"Data providers can self-issue their data by embedding their data into verifiable credentials, and providing this data, at a Digital Twin as any aspect model."}),"\n",(0,a.jsx)(t.mermaid,{value:"sequenceDiagram\n    participant DP as Data Provider\n    participant Wallet as Wallet\n    participant DTR as Digital Twin Registry\n    participant SS as Submodel Service\n    participant C as Connector\n    \n    DP->>DP: Prepare Aspect Model Data & @contexts\n    DP->>Wallet: Issue Data Attestation Credential (DAC)\n    Wallet->>Wallet: Sign with private key\n    Wallet->>DP: Return Issued Verifiable Credential\n    DP->>DTR: Register as Submodel Descriptor in Digital Twin\n    DP->>SS: Store Verifiable Credential Payload\n    DP->>C: Create Asset, Policies & Contracts for the VC access & usage."}),"\n",(0,a.jsx)(t.h3,{id:"third-party-data-attestation-credential-creation-process",children:"Third Party Data Attestation Credential Creation Process"}),"\n",(0,a.jsxs)(t.p,{children:["In this case the verifiable credential would not be issued by the ",(0,a.jsx)(t.strong,{children:"Data Provider"})," but it would be done by the ",(0,a.jsx)(t.strong,{children:"Attestation Provider"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["This process is similar to the ",(0,a.jsx)(t.a,{href:"#attribute-attestation-creation-process",children:"Attribute Credential Creation"}),', the difference is that the "certification" is done for the complete aspect model payload:']}),"\n",(0,a.jsx)(t.mermaid,{value:"sequenceDiagram\n    participant DP as Data Provider\n    participant DTR as Digital Twin Registry\n    participant SS as Submodel Service\n    participant DA as Attestation Provider\n    participant AW as Attestation Provider Wallet\n    \n    DP->>DTR: Register Digital Twin\n    DP->>SS: Register Aspect Model\n    DP->>DA: Request Attribute Certification\n    DA->>DTR: Query Digital Twin via Connector\n    DA->>SS: Query Aspect Model via Connector\n    DA->>DA: Validate Aspect Model (semantic, standard conformance, etc.)\n    DA->>DA: Create Data Attestation Payload\n    DA->>AW: Issue Data Attestation Credential (DAC)\n    AW->>AW: Sign with private key\n    AW->>AW: Add to revocation list\n    AW->>DA: Issued Verifiable Credential\n    DA->>DP: Return DAC via Connector\n    DP->>DTR: Update Twin with new Verifiable Credential Submodel\n    DP->>SS: Store Verifiable Credential"}),"\n",(0,a.jsx)(t.h2,{id:"notice",children:"NOTICE"}),"\n",(0,a.jsxs)(t.p,{children:["This work is licensed under the ",(0,a.jsx)(t.a,{href:"https://creativecommons.org/licenses/by/4.0/legalcode",children:"CC-BY-4.0"}),"."]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"SPDX-License-Identifier: CC-BY-4.0"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2025 Contributors to the Eclipse Foundation"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2025 Fujitsu Limited"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2025 Robert Bosch GmbH"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2025 Spherity GmbH"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2025 Schaeffler AG"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2025 SIEMENS AG"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2025 Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e.V. (represented by Fraunhofer IPK)"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2025 CGI Deutschland B.V. & Co. KG"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2025 T\xdcV S\xdcD Auto Service GmbH"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2025 BASF SE"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2025 BMW AG"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2025 Cofinity-X GmbH"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2025 Henkel AG & Co. KGaA"}),"\n",(0,a.jsxs)(t.li,{children:["Source URL: ",(0,a.jsx)(t.a,{href:"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io",children:"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io"})]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},98714:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/data-trust-and-security-kit-logo-5d0fe5f40ded43523ee26666485b0d3b.svg"}}]);