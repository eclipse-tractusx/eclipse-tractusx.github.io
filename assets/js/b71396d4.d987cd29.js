"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[14744],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,g=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return n?o.createElement(g,i(i({ref:t},p),{},{components:n})):o.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},12174:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var o=n(87462),r=(n(67294),n(3905));const a={},i="Initiation a Contract Negotiation",s={unversionedId:"kits/tractusx-edc/docs/samples/management-api-v2-walkthrough/contract-negotiation",id:"version-23.12/kits/tractusx-edc/docs/samples/management-api-v2-walkthrough/contract-negotiation",title:"Initiation a Contract Negotiation",description:"Old plain JSON Schema",source:"@site/docs-kits_versioned_docs/version-23.12/kits/tractusx-edc/docs/samples/management-api-v2-walkthrough/6-contract-negotiation.md",sourceDirName:"kits/tractusx-edc/docs/samples/management-api-v2-walkthrough",slug:"/kits/tractusx-edc/docs/samples/management-api-v2-walkthrough/contract-negotiation",permalink:"/docs-kits/23.12/kits/tractusx-edc/docs/samples/management-api-v2-walkthrough/contract-negotiation",draft:!1,tags:[],version:"23.12",sidebarPosition:6,frontMatter:{},sidebar:"kits",previous:{title:"Fetching provider's Catalog",permalink:"/docs-kits/23.12/kits/tractusx-edc/docs/samples/management-api-v2-walkthrough/catalog"},next:{title:"Initiation a Transfer Process",permalink:"/docs-kits/23.12/kits/tractusx-edc/docs/samples/management-api-v2-walkthrough/transfer-process"}},c={},l=[{value:"Old plain JSON Schema",id:"old-plain-json-schema",level:2},{value:"New JSON-LD Document",id:"new-json-ld-document",level:2},{value:"Request",id:"request",level:2}],p={toc:l};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"initiation-a-contract-negotiation"},"Initiation a Contract Negotiation"),(0,r.kt)("h2",{id:"old-plain-json-schema"},"Old plain JSON Schema"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "connectorAddress": "provider-dsp-url",\n  "protocol": "dataspace-protocol-http",\n  "connectorId": "<CONNECTOR-ID>",\n  "providerId": "<PROVIDER-ID>",\n  "offer": {\n    "offerId": "<OFFER-ID>",\n    "assetId": "<ASSET-ID>",\n    "policy": {\n      "permissions": [],\n      "prohibition": [],\n      "obligation": []\n    }\n  }\n}\n')),(0,r.kt)("h2",{id:"new-json-ld-document"},"New JSON-LD Document"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Please note: In our samples, properties ",(0,r.kt)("strong",{parentName:"p"},"WILL NOT")," be explicitly namespaced, and internal nodes ",(0,r.kt)("strong",{parentName:"p"},"WILL NOT")," be typed, relying on ",(0,r.kt)("inlineCode",{parentName:"p"},"@vocab")," prefixing and root schema type inheritance respectively.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "@context": {\n    "@vocab": "https://w3id.org/edc/v0.0.1/ns/",\n    "odrl": "http://www.w3.org/ns/odrl/2/"\n  },\n  "@type": "NegotiationInitiateRequestDto",\n  "connectorAddress": "provider-dsp-url",\n  "protocol": "dataspace-protocol-http",\n  "connectorId": "<CONNECTOR-ID>",\n  "providerId": "<PROVIDER-ID>",\n  "offer": {\n    "offerId": "<ODRL-SET-ID>",\n    "assetId": "<ASSET-ID>",\n    "policy": {\n      "@type": "odrl:Set",\n      "odrl:permission": [],\n      "odrl:prohibition": [],\n      "odrl:obligation": [],\n      "odrl:target": "<ASSET-ID>"\n    }\n  }\n}\n')),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"offerId")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"policy")," must be the ",(0,r.kt)("inlineCode",{parentName:"p"},"odrl:Set")," ",(0,r.kt)("inlineCode",{parentName:"p"},"@id")," and content, respectively, of the one you chose to agree with from the ",(0,r.kt)("inlineCode",{parentName:"p"},"dcat:dataset")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"dcat:catalog"),"."),(0,r.kt)("h2",{id:"request"},"Request"),(0,r.kt)("p",null,"In this case we initiate a contract negotiation with the provider."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST "${MANAGEMENT_URL}/v2/contractnegotiations" \\\n    --header \'X-Api-Key: password\' \\\n    --header \'Content-Type: application/json\' \\\n    --data \'{\n  "@context": {\n                  "@vocab": "https://w3id.org/edc/v0.0.1/ns/",\n                  "odrl": "http://www.w3.org/ns/odrl/2/"\n                },\n                "@type": "NegotiationInitiateRequestDto",\n                "connectorAddress": "provider-dsp-url",\n                "protocol": "dataspace-protocol-http",\n                "connectorId": "provider-id",\n                "providerId": "provider-id",\n                "offer": {\n                  "offerId": "offer-id",\n                  "assetId": "asset-id",\n                  "policy": {\n                    "@type": "odrl:Set",\n                    "odrl:permission": {\n                      "odrl:target": "asset-id",\n                      "odrl:action": {\n                        "odrl:type": "USE"\n                      },\n                      "odrl:constraint": {\n                        "odrl:or": {\n                          "odrl:leftOperand": "BusinessPartnerNumber",\n                          "odrl:operator": "EQ",\n                          "odrl:rightOperand": "ANY-BPN"\n                        }\n                      }\n                    },\n                    "odrl:prohibition": [],\n                    "odrl:obligation": [],\n                    "odrl:target": "asset-id"\n                  }\n                }\n              }\' \\\n    -s -o /dev/null -w \'Response Code: %{http_code}\\n\'\n')))}d.isMDXComponent=!0}}]);