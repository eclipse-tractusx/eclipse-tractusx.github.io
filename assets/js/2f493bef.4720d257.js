"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[12511],{3905:(e,t,i)=>{i.d(t,{Zo:()=>p,kt:()=>m});var a=i(67294);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function s(e,t){if(null==e)return{};var i,a,n=function(e,t){if(null==e)return{};var i,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var c=a.createContext({}),l=function(e){var t=a.useContext(c),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},f="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var i=e.components,n=e.mdxType,r=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=l(i),u=n,m=f["".concat(c,".").concat(u)]||f[u]||d[u]||r;return i?a.createElement(m,o(o({ref:t},p),{},{components:i})):a.createElement(m,o({ref:t},p))}));function m(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=i.length,o=new Array(r);o[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[f]="string"==typeof e?e:n,o[1]=s;for(var l=2;l<r;l++)o[l]=i[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,i)}u.displayName="MDXCreateElement"},23322:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>f,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var a=i(87462),n=(i(67294),i(3905));const r={id:"certificate_arc42",title:"Architecture documentation",description:"Architecture documentation",sidebar_position:1},o=void 0,s={unversionedId:"kits/Certificate Management Kit/Documentation Certificate Management/certificate_arc42",id:"kits/Certificate Management Kit/Documentation Certificate Management/certificate_arc42",title:"Architecture documentation",description:"Architecture documentation",source:"@site/docs-kits/kits/Certificate Management Kit/Documentation Certificate Management/certificate-arc42.md",sourceDirName:"kits/Certificate Management Kit/Documentation Certificate Management",slug:"/kits/Certificate Management Kit/Documentation Certificate Management/certificate_arc42",permalink:"/docs-kits/next/kits/Certificate Management Kit/Documentation Certificate Management/certificate_arc42",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"certificate_arc42",title:"Architecture documentation",description:"Architecture documentation",sidebar_position:1},sidebar:"kits",previous:{title:"Documentation",permalink:"/docs-kits/next/category/documentation"},next:{title:"Adoption View",permalink:"/docs-kits/next/kits/Circularity_KIT/page-adoption-view"}},c={},l=[{value:"Certificate Management KIT",id:"certificate-management-kit",level:2},{value:"Introduction and Goals",id:"introduction-and-goals",level:2},{value:"Goals Overview",id:"goals-overview",level:2},{value:"Requirements Overview",id:"requirements-overview",level:2},{value:"Quality Goals",id:"quality-goals",level:2},{value:"Architecture Constraints",id:"architecture-constraints",level:2},{value:"System Scope and Context",id:"system-scope-and-context",level:2},{value:"Business Context",id:"business-context",level:2},{value:"<strong>Master Data Management (Catena-X Member)</strong>",id:"master-data-management-catena-x-member",level:3},{value:"<strong>Catena-X Portal/Marketplace (CX Portal)</strong>",id:"catena-x-portalmarketplace-cx-portal",level:3},{value:"<strong>Catena-X BPDM Certificate Management Application</strong>",id:"catena-x-bpdm-certificate-management-application",level:3},{value:"Solution Strategy (High Level Picture)",id:"solution-strategy-high-level-picture",level:2},{value:"<strong>BPDM Certificate Management</strong>",id:"bpdm-certificate-management",level:3},{value:"Keycloak Authentication &amp; Autorization Flow",id:"keycloak-authentication--autorization-flow",level:2},{value:"Runtime View",id:"runtime-view",level:2},{value:"Upload Business Partner Certificate",id:"upload-business-partner-certificate",level:3},{value:"Query Certificate by Business Partner Number",id:"query-certificate-by-business-partner-number",level:3},{value:"Check Certificate availability by Type and Business Partner Number",id:"check-certificate-availability-by-type-and-business-partner-number",level:3},{value:"Deployment View",id:"deployment-view",level:2},{value:"Applications Deployment without Kubernetes",id:"applications-deployment-without-kubernetes",level:3},{value:"Single Application Kubernetes Deployment",id:"single-application-kubernetes-deployment",level:3},{value:"Crosscutting Concepts",id:"crosscutting-concepts",level:2},{value:"Business Partner Certificate Management Standards",id:"business-partner-certificate-management-standards",level:3},{value:"Logging Behavior",id:"logging-behavior",level:3},{value:"Quality Requirements",id:"quality-requirements",level:2},{value:"Risks and Technical Debts",id:"risks-and-technical-debts",level:2},{value:"<strong>Open EDC Questions</strong>",id:"open-edc-questions",level:3}],p={toc:l};function f(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Certificate Management kit banner",src:i(90696).Z,width:"282",height:"265"})),(0,n.kt)("h2",{id:"certificate-management-kit"},"Certificate Management KIT"),(0,n.kt)("h2",{id:"introduction-and-goals"},"Introduction and Goals"),(0,n.kt)("p",null,"This architecture documentation should foster an understanding on how to utilize the BPDM certificate management KIT effectively. How to integrate the KIT or mainly the API into the application and make use of it."),(0,n.kt)("p",null,"This Kit covers various aspects, starting from how utilize the available API Endpoints, the used data models and how to make them available to the Catena-X network."),(0,n.kt)("p",null,"A solution provider should make the following information available for their customers:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Get all certificates available for a specific BPN - business partner number"),(0,n.kt)("li",{parentName:"ul"},"Get a specific certificate (certificate type - e.g. IATF)  based on the BPN"),(0,n.kt)("li",{parentName:"ul"},"Get just the simple information whether a provided company based on the BPN is certified for a specific certificate type (true or false)"),(0,n.kt)("li",{parentName:"ul"},"Get the certificate document (e.g. the PDF file)"),(0,n.kt)("li",{parentName:"ul"},"Get a list of all available certificate types")),(0,n.kt)("p",null,"A solution provider should be able to receive a certificate by a customer:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Provide certificate data"),(0,n.kt)("li",{parentName:"ul"},"Provide a new certificate type")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Additional Information Material"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Visit BPDM on the official Catena-X Website: ",(0,n.kt)("a",{parentName:"li",href:"https://catena-x.net/en/offers-standards/bpdm"},"bpdm_catenax_website"))),(0,n.kt)("h2",{id:"goals-overview"},"Goals Overview"),(0,n.kt)("p",null,"The following goals have been established for this system:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Priority"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Goal"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"1"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Enable network-based data sharing for business partner certificates to increase overall data quality and reliability")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"2"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Enable also Small and medium-sized Businesses (SMEs) to use the services")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"3"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Provide a change history for business partner certificate data")))),(0,n.kt)("h2",{id:"requirements-overview"},"Requirements Overview"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f ",(0,n.kt)("strong",{parentName:"p"},"Note:")," Cross-Check with CACs")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"certificate_management_diagram",src:i(27567).Z,width:"831",height:"451"})),(0,n.kt)("h2",{id:"quality-goals"},"Quality Goals"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Priority"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Quality Goal"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Scenario"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"1"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Security"),(0,n.kt)("td",{parentName:"tr",align:"left"},"All users and services which access the Application must be authenticated and authorized. Consuming services/users are only allowed to read data. In addition they are only allowed to read the specific data that belongs with this, the Data Sovereignty principles of Catena-X has to be fulfilled")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"2"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Integrity"),(0,n.kt)("td",{parentName:"tr",align:"left"},"All changes must be traceable and must be able to be rolled back")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"3"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Legally"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No natural persons are allowed to get uploaded and stored. For all other uploaded Business Partner data it is mandatory that users (CX Members) can only see their own uploaded certificate data and that it is not possible to draw conclusions about other business partner relationships")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"4"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Integrity & Correctness"),(0,n.kt)("td",{parentName:"tr",align:"left"},"It must be ensured that the data of the certificate record which is created during the process is correct.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"5"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Reliability"),(0,n.kt)("td",{parentName:"tr",align:"left"},"The Golden Record Application is a central foundation in the Catena-X Network. It provides all participants and services, business partner data and the unique Business Partner Number (BPN) as identifier. Therefore the BPDM Certificate Management Service must be always/highly available")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"6"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Functional Stability"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Since the Golden Record Application is a central foundation in the Catena-X Network the defined standards of the API and datamodel for the associated Release Version must be fulfilled")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"7"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Sensitivity of data"),(0,n.kt)("td",{parentName:"tr",align:"left"},"The uploaded business partner certificate data is highly sensitive, that's why it must be ensured that no unauthorized user/system can access data which does not belong to it. More over it must be guaranteed that no one can see the business partners related to the specific Catena-X Member.")))),(0,n.kt)("h2",{id:"architecture-constraints"},"Architecture Constraints"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Constraint ID"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Constraint"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"C-1"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Software and third party software must be compliant to the Catena-X and Eclipse Foundation Guidelines/Policies ",(0,n.kt)("a",{parentName:"td",href:"https://www.eclipse.org/projects/dev_process/"},"eclipse_foundation")),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"C-2"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/eclipse-tractusx/tractusx-edc/tree/main"},"Eclipse Dataspace Connector")," must be used for data transfer between different legal entities"),(0,n.kt)("td",{parentName:"tr",align:"left"})))),(0,n.kt)("h2",{id:"system-scope-and-context"},"System Scope and Context"),(0,n.kt)("h2",{id:"business-context"},"Business Context"),(0,n.kt)("p",null,"The following figure depicts the business context setup for :"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Certificate_business_context",src:i(20713).Z,width:"2451",height:"1441"})),(0,n.kt)("p",null,"The following are the various components of the business context setup:"),(0,n.kt)("h3",{id:"master-data-management-catena-x-member"},(0,n.kt)("strong",{parentName:"h3"},"Master Data Management (Catena-X Member)")),(0,n.kt)("p",null,"A backend system thats operated by a company / sharing member (e.g. Tier-1) which is participating in the Catena-X Ecosystem and consuming digital services or data assets."),(0,n.kt)("h3",{id:"catena-x-portalmarketplace-cx-portal"},(0,n.kt)("strong",{parentName:"h3"},"Catena-X Portal/Marketplace (CX Portal)")),(0,n.kt)("p",null,"The Portal which provides an entry point for the Catena-X Members, to discover Apps that are offered in Catena-X."),(0,n.kt)("h3",{id:"catena-x-bpdm-certificate-management-application"},(0,n.kt)("strong",{parentName:"h3"},"Catena-X BPDM Certificate Management Application")),(0,n.kt)("p",null,"The Application which offers services to Catena-X Members and Catena-X Use Cases for consuming and processing business partner certificate data."),(0,n.kt)("h2",{id:"solution-strategy-high-level-picture"},"Solution Strategy (High Level Picture)"),(0,n.kt)("p",null,"The following high level view gives a basic overview about Components:"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Certificate_business_context",src:i(13594).Z,width:"2264",height:"1622"})),(0,n.kt)("h3",{id:"bpdm-certificate-management"},(0,n.kt)("strong",{parentName:"h3"},"BPDM Certificate Management")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The BPDM Certificate Management provides the interfaces for Catena-X Members to manage their business partner certificate data within Catena-X."),(0,n.kt)("li",{parentName:"ul"},"For the current reference implementation, multi-tenancy is realized via a 1:1 deployment for each Catena-X Member. This means that every Catena-X Member who shares his business partner certificate data, has its own persistence.")),(0,n.kt)("h2",{id:"keycloak-authentication--autorization-flow"},"Keycloak Authentication & Autorization Flow"),(0,n.kt)("mermaid",{value:'\nsequenceDiagram\n    participant EDC of CX Member\n    participant OpenIDConnect Server\n    participant BPDM Certificate Management\n\n    autonumber\n\n    EDC of CX Member--\x3e>OpenIDConnect Server: Send Client Credentials\n    OpenIDConnect Server--\x3e>EDC of CX Member: Respond OAuth2 Token\n    EDC of CX Member --\x3e> BPDM Certificate Management: Send Request with OAuth2 Token in Authorization Header\n    BPDM Certificate Management --\x3e> OpenIDConnect Server: Validate Token\n    OpenIDConnect Server --\x3e> BPDM Certificate Management: Confirms validity of Token\n    BPDM Certificate Management --\x3e> BPDM Certificate Management: Check "resource_access" section of OAuth Token\n\n    '}),(0,n.kt)("h2",{id:"runtime-view"},"Runtime View"),(0,n.kt)("h3",{id:"upload-business-partner-certificate"},"Upload Business Partner Certificate"),(0,n.kt)("p",null,"The diagram below describes the flow of uploading a business partner certificate."),(0,n.kt)("p",null,"For further information about the different certificate types, please have a look on the Standards ",(0,n.kt)("a",{parentName:"p",href:"https://catena-x.net/de/standard-library"},"CX - 00135 Business Partner Number")),(0,n.kt)("mermaid",{value:"\nsequenceDiagram\nactor User\n\n    autonumber\n    Note over User, CertificateController: Path: api/catena/certificate/document\n    Note over User, CertificateController: Method: POST\n\nUser ->> CertificateController : setCertificateDocument(certificateDocumentRequestDto)\nactivate CertificateController\nCertificateController ->> CertificateService : createCertificate(certificateDocumentRequestDto)\nactivate CertificateService\n\nCertificateService ->> InvalidBpnFormatException : validateCertificateBeforeProcess(certificateDocumentRequestDto) <br> [Does validation of BPN's format (BPNL, BPNS or BPN). IF formart is <br> not accordingly, InvalidBpnFormatException is thrown]\n\nalt Invokes findCertificateType(certificateDocumentRequestDto.type)\nCertificateTypeRepository --\x3e> CertificateService : findByCertificateTypeAndCertificateVersion(certificateType, certificateVersion)  \nCertificateService ->> CertificateTypeNotExists : If DB query does not return any values, CertificateTypeNotExists is thrown\nend\n\nCertificateService --\x3e> CertificateMapping : Invokes toCertificateDB(certificateDocumentRequestDto, certificateType); \nactivate CertificateMapping\nnote over CertificateMapping: Here Mapping of CertificateDocumentRequestDto to <br> CertificateDB occurs. All the fields are mapped accordingly\nCertificateMapping --\x3e> CertificateService : Return List<BpnCertifiedCertificateResponse>; \ndeactivate CertificateMapping\n\nCertificateService --\x3e> CertificateRepository : save() [Save create CertificateDB object in the Database]  \n\n\nCertificateService --\x3e> CertificateController : Return CertificateDocumentResponseDto?; \ndeactivate CertificateService\nCertificateController --\x3e> User : Return ResponseEntity<CertificateDocumentResponseDto>; \ndeactivate CertificateController\n\n    Note over User, CertificateController: Response: 201 OK \n    Note over User, CertificateController: Content-Type: application/json\n"}),(0,n.kt)("h3",{id:"query-certificate-by-business-partner-number"},"Query Certificate by Business Partner Number"),(0,n.kt)("mermaid",{value:"\nsequenceDiagram\nactor User\n\n    autonumber\n    Note over User, CertificateController: Path: api/catena/certificate/{bpn}\n    Note over User, CertificateController: Method: GET\n\nUser ->> CertificateController : getCertificatesByBpnPaginated(bpn, pageRequest)\nactivate CertificateController\nCertificateController ->> CertificateService : getCertificatesByBpn(bpn, pageRequest)\nactivate CertificateService\n\nalt Triggers method if BPN insert starts with BPNL\nCertificateService ->> CertificateRepository : findByBusinessPartnerNumber [If no Certificate is found by bpn, shows CertificateNotExists exception]\nactivate CertificateRepository\nCertificateRepository --\x3e> CertificateService : #32; \ndeactivate CertificateRepository\n\nCertificateService ->> ResponseMappings : Mapping of Page of CertificateDB to Page<CertificateDto>\nactivate ResponseMappings\nResponseMappings --\x3e> CertificateService : #32;\ndeactivate ResponseMappings\nend\n\nalt Triggers method if BPN insert starts with BPNS\nCertificateService ->> CertificateMapping : findByEnclosedSitesSiteBpn [If no Certificate is found by bpn, shows CertificateNotExists exception]\nactivate CertificateMapping\nCertificateMapping --\x3e> CertificateService : #32;\ndeactivate CertificateMapping\n\nCertificateService ->> ResponseMappings : Mapping of Page of CertificateDB to Page<CertificateDto>\nactivate ResponseMappings\nResponseMappings --\x3e> CertificateService : #32;\ndeactivate ResponseMappings\nend\n\nNote over CertificateService: If inserted BPN format is diferent of BPNL or BPNS, <br>InvalidBpnFormatException is shown\n\nCertificateService --\x3e> CertificateController : Return PageDto<CertificateResponseDto>; \ndeactivate CertificateService\nCertificateController --\x3e> User : Return PageDto<CertificateResponseDto>; \ndeactivate CertificateController\n\n    Note over User, CertificateController: Response: 200 OK \n    Note over User, CertificateController: Content-Type: application/json\n\n"}),(0,n.kt)("h3",{id:"check-certificate-availability-by-type-and-business-partner-number"},"Check Certificate availability by Type and Business Partner Number"),(0,n.kt)("mermaid",{value:"\nsequenceDiagram\nactor User\n\n    autonumber\n    Note over User, CertificateController: Path: api/catena/certificate/{bpn}/{certificateType}\n    Note over User, CertificateController: Method: GET\n\nUser ->> CertificateController : checkCertificateByBpnAndType(bpn, certificateType)\nactivate CertificateController\nCertificateController ->> CertificateService : checkCertificateByBpnAndType(bpn, certificateType)\nactivate CertificateService\n\nCertificateRepository --\x3e> CertificateService : findByCertificateType(certificateType); \nNote over CertificateService: If query done to database does not return a certificate by type, <br>CertificateTypeNotExists is thrown\n\nalt Triggers method if BPN insert starts with BPNL (findCertificateByBusinessPartnerNumber)\nCertificateRepository --\x3e> CertificateService : findByBusinessPartnerNumber(bpn) [If no Certificate is found by bpn, shows CertificateNotExists exception]\n\nalt Triggers method createCertifiedCertificateResponse(certificates, bpn, certificateType)\n    note over CertificateRepository, CertificateService: Filter List<CertificateDB> retrieved earlier by type and bpn inserted\n    \n    alt\n    CertificateService ->> CertificateMapping : If filtered List<CertificateDB> insn't empty, Mapping of CertificateDB to BpnCertifiedCertificateResponse <br> with isCertified assigned to true\n    end\n\n    alt\n    CertificateService ->> CertificateMapping : If filtered List<CertificateDB> is empty, create listOf(BpnCertifiedCertificateResponse(bpn, false)) <br> with isCertified assigned to false\n    end\n\nend\nend\n\nalt Triggers method if BPN insert starts with BPNS (findCertificateByEnclosedSitesSiteBpn)\nCertificateRepository --\x3e> CertificateService : findByBusinessPartnerNumber(bpn) [If no Certificate is found by bpn, shows CertificateNotExists exception]\n\nalt Triggers method createCertifiedCertificateResponse(certificates, bpn, certificateType)\n    note over CertificateRepository, CertificateService: Filter List<CertificateDB> retrieved earlier by type and bpn inserted\n    \n    alt\n    CertificateService ->> CertificateMapping : If filtered List<CertificateDB> insn't empty, Mapping of CertificateDB to BpnCertifiedCertificateResponse <br> with isCertified assigned to true\n    end\n\n    alt\n    CertificateService ->> CertificateMapping : If filtered List<CertificateDB> is empty, create listOf(BpnCertifiedCertificateResponse(bpn, false)) <br> with isCertified assigned to false\n    end\n\nend\nend\n\nNote over CertificateService: If inserted BPN format is diferent of BPNL or BPNS, <br>InvalidBpnFormatException is shown\n\nCertificateService --\x3e> CertificateController : Return List<BpnCertifiedCertificateResponse>; \ndeactivate CertificateService\nCertificateController --\x3e> User : Return List<BpnCertifiedCertificateResponse>; \ndeactivate CertificateController\n\n    Note over User, CertificateController: Response: 200 OK \n    Note over User, CertificateController: Content-Type: application/json\n\n"}),(0,n.kt)("h2",{id:"deployment-view"},"Deployment View"),(0,n.kt)("h3",{id:"applications-deployment-without-kubernetes"},"Applications Deployment without Kubernetes"),(0,n.kt)("mermaid",{value:'C4Context\n\n    Person(bpdm_user, "(Technical) User of the Business Partner Certificate Management APIs")\n\n    System(cert_postgres, "Certificate Database" "Postgres: 14.5")\n\n\n    Deployment_Node(cert_machine, "OS Environment", "Linux Alpine 3.16"){\n        Deployment_Node(cert_java, "Runtime Environment", "JAVA RE 17") {\n            Container(cert_container, "Business Partner Certificate Management Application", "Spring Boot: 3.1")\n        }\n    }\n\n    Rel(bpdm_user, cert_container, "HTTP/S")\n    Rel(cert_container, cert_postgres, "TCP/IP")\n'}),(0,n.kt)("h3",{id:"single-application-kubernetes-deployment"},"Single Application Kubernetes Deployment"),(0,n.kt)("mermaid",{value:'C4Context\n\n    Person(cert_user, "(Technical) User of the the Business Partner Certificate Management APIs")\n\n    Deployment_Node(kubernetes, "Kubernetes Environment", "Kubernetes 1.28"){\n\n        Container(ingress, "Ingress", "Ingress Kubernetes Resource")\n        Container(nginx, "Ingress Controller", "Nginx Reverse Proxy")\n        Container(service, "Service", "Service Kubernetes Resource")\n\n        Container(database, "Database Deployment", "Chart bitnami/postgres:11.9.13")\n\n        Deployment_Node(deployment, "Deployment", "Deployment Kubernetes Resource"){\n                Deployment_Node(replicaSet_1, "Replica Set", "Ingress ReplicaSet Resource"){\n                    Deployment_Node(pod_1, "Pod", "Pod Kubernetes Resource"){\n                        Container(container_1, "the Business Partner Certificate Management Application Container", "Spring Boot 3 on Linux Alpine 3.6")\n                        Container(volume_1, "Config Volume", "Kubernetes Volume Mount")\n                    }\n        }\n    }\n\n    Deployment_Node(kubernetes_config, "Kubernetes Configurations", "Logical Grouping"){\n        Container(configMap, "Application Configuration", "Kubernetes ConfigMap Resource")\n        Container(secret, "Secret Configuration", "Kubernetes Secret Resource")\n\n    }\n}\n\nRel(cert_user, nginx, "Sends URL", "HTTPS")\nRel(ingress, nginx, "Routing Information")\nRel(nginx, service, "Routes to")\nRel(service, container_1, "HTTP")\n\nRel(container_1, volume_1, "mounts")\nRel(volume_1, configMap, "mounts")\nRel(volume_1, secret, "mounts")\n\nRel(container_1, database, "TCP/IP")\n\nUpdateLayoutConfig($c4ShapeInRow="3", $c4BoundaryInRow="1")'}),(0,n.kt)("h2",{id:"crosscutting-concepts"},"Crosscutting Concepts"),(0,n.kt)("h3",{id:"business-partner-certificate-management-standards"},"Business Partner Certificate Management Standards"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://catena-x.net/de/standard-library"},"bp_cetificate_management_standards")),(0,n.kt)("h3",{id:"logging-behavior"},"Logging Behavior"),(0,n.kt)("p",null,"As Spring Boot applications Business Partner Certificate Management employs Spring\nspecific ",(0,n.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-boot/docs/3.0.0/reference/htmlsingle/#features.logging"},"logging behavior")),(0,n.kt)("p",null,"We enhance the default log entries with user request information including the determined user ID and a generated request ID.\nNot all logs belong to an ongoing user request in which case these entries are empty."),(0,n.kt)("p",null,"In addition to the Spring standard logs the Business Partner Certificate Management applications keep a log of the following events:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"INFO: User requesting resource with resource name and HTTP verb"),(0,n.kt)("li",{parentName:"ul"},"INFO: Request HTTP response"),(0,n.kt)("li",{parentName:"ul"},"INFO: Update/Create Business Partners Certificate Types"),(0,n.kt)("li",{parentName:"ul"},"INFO: Creating Business Partner Certificate"),(0,n.kt)("li",{parentName:"ul"},"ERROR: Uncaught exceptions occurring in the service logic")),(0,n.kt)("h2",{id:"quality-requirements"},"Quality Requirements"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"see: ",(0,n.kt)("a",{parentName:"li",href:"#quality-goals"},"Quality Goals"))),(0,n.kt)("h2",{id:"risks-and-technical-debts"},"Risks and Technical Debts"),(0,n.kt)("h3",{id:"open-edc-questions"},(0,n.kt)("strong",{parentName:"h3"},"Open EDC Questions")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"What capabilities will be provided in the future?"),(0,n.kt)("li",{parentName:"ul"},"How to deal with APIs provided behind an EDC? Swagger documentation cannot be seen by the requesting service?"),(0,n.kt)("li",{parentName:"ul"},"How can we authorize and authenticate a User/System with individual permissions after it passes the EDC?"),(0,n.kt)("li",{parentName:"ul"},"Will there by a Proxy EDC concept?"),(0,n.kt)("li",{parentName:"ul"},"...")))}f.isMDXComponent=!0},20713:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/BPDM-CM-KIT1-79693557d052af7100cda69696458d43.png"},13594:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/BPDM-CM-KIT2-651f28ad0fabfeef8eaf9ee185711fe5.png"},27567:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/Certificate_Kit_Arc-cdc759be7b7fa104046e054c1f472766.png"},90696:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/Certificate_Kit_Icon-e96be4d8d6498fba924371e11a4d8910.png"}}]);