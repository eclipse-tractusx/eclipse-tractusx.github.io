"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[89965],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>y});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var l=a.createContext({}),c=function(t){var e=a.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},p=function(t){var e=c(t.components);return a.createElement(l.Provider,{value:e},t.children)},d="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,l=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),d=c(n),m=r,y=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(y,o(o({ref:e},p),{},{components:n})):a.createElement(y,o({ref:e},p))}));function y(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s[d]="string"==typeof t?t:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},17198:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const i={},o="Data Encryption Extension",s={unversionedId:"kits/tractusx-edc/edc-extensions/data-encryption/README",id:"version-23.12/kits/tractusx-edc/edc-extensions/data-encryption/README",title:"Data Encryption Extension",description:"The Eclipse Dataspace Connector encrypts sensitive information inside a token it sends to other applications (from possibly other companies). This extension implements the encryption of this data and should be used with secure keys and algorithms at all times.",source:"@site/docs-kits_versioned_docs/version-23.12/kits/tractusx-edc/edc-extensions/data-encryption/README.md",sourceDirName:"kits/tractusx-edc/edc-extensions/data-encryption",slug:"/kits/tractusx-edc/edc-extensions/data-encryption/",permalink:"/docs-kits/23.12/kits/tractusx-edc/edc-extensions/data-encryption/",draft:!1,tags:[],version:"23.12",frontMatter:{},sidebar:"kits",previous:{title:"Tractus-X OAuth2 Extension",permalink:"/docs-kits/23.12/kits/tractusx-edc/edc-extensions/cx-oauth2/"},next:{title:"DataPlane Proxy Consumer API",permalink:"/docs-kits/23.12/kits/tractusx-edc/edc-extensions/dataplane-proxy/edc-dataplane-proxy-consumer-api/"}},l={},c=[{value:"Algorithm Configuration",id:"algorithm-configuration",level:2},{value:"Strategies",id:"strategies",level:2},{value:"1. AES",id:"1-aes",level:3},{value:"AES Configuration",id:"aes-configuration",level:4},{value:"2. NONE",id:"2-none",level:3}],p={toc:c};function d(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"data-encryption-extension"},"Data Encryption Extension"),(0,r.kt)("p",null,"The Eclipse Dataspace Connector encrypts sensitive information inside a token it sends to other applications (from possibly other companies). This extension implements the encryption of this data and should be used with secure keys and algorithms at all times."),(0,r.kt)("h2",{id:"algorithm-configuration"},"Algorithm Configuration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Key"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Mandatory"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"edc.data.encryption.algorithm"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Algorithm for encryption and decryption. Must be ether 'AES' or 'NONE'."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"AES")))),(0,r.kt)("h2",{id:"strategies"},"Strategies"),(0,r.kt)("h3",{id:"1-aes"},"1. AES"),(0,r.kt)("p",null,"The Advanced Encryption Standard (AES) is the default encryption algorithm. For Authenticated Encryption with Associated Data (AEAD) it uses the Galois/Counter Mode or GCM."),(0,r.kt)("p",null,"When using AES-GCM the key length must be ether 128-, 196- or 256bit. Keys must be stored stored Base64 encoded in the Vault, separated by a comma."),(0,r.kt)("p",null,"It's possible to generate Keys using OpenSSL"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# 128 Bit\nopenssl rand -base64 16\n\n# 196 Bit\nopenssl rand -base64 24\n\n# 256 Bit\nopenssl rand -base64 32\n")),(0,r.kt)("h4",{id:"aes-configuration"},"AES Configuration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Key"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Mandatory"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"edc.data.encryption.keys.alias"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Symmetric Keys stored in the Vault under the configured alias."),(0,r.kt)("td",{parentName:"tr",align:null},"X"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"edc.data.encryption.caching.enabled"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Enable caching to request only keys from the vault after the cache expires."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"edc.data.encryption.caching.seconds"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Duration in seconds until the cache expires."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"3600")))),(0,r.kt)("h3",{id:"2-none"},"2. NONE"),(0,r.kt)("p",null,"This strategy does apply no encryption at all and should only be used for debugging purposes. Using NONE encryption may leak sensitive data to other connectors!"))}d.isMDXComponent=!0}}]);