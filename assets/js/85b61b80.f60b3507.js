"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[47751],{28453:(t,e,i)=>{i.d(e,{R:()=>a,x:()=>o});var n=i(96540);const s={},r=n.createContext(s);function a(t){const e=n.useContext(r);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function o(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:a(t.components),n.createElement(r.Provider,{value:e},t.children)}},68331:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"kits/industry-core-kit/parts/future-concepts","title":"future-concepts","description":"\x3c!--","source":"@site/docs-kits_versioned_docs/version-24.08/kits/industry-core-kit/parts/future-concepts.mdx","sourceDirName":"kits/industry-core-kit/parts","slug":"/kits/industry-core-kit/parts/future-concepts","permalink":"/docs-kits/24.08/kits/industry-core-kit/parts/future-concepts","draft":false,"unlisted":false,"tags":[],"version":"24.08","frontMatter":{"sidebar_class_name":"hidden"},"sidebar":"kits","previous":{"title":"bill-of-materials","permalink":"/docs-kits/24.08/kits/industry-core-kit/parts/bill-of-materials"},"next":{"title":"notice","permalink":"/docs-kits/24.08/kits/industry-core-kit/parts/notice"}}');var s=i(74848),r=i(28453);const a={sidebar_class_name:"hidden"},o=void 0,d={},c=[{value:"Future Concepts",id:"future-concepts",level:2},{value:"Reduction of Number of Digital Twins in the DTR",id:"reduction-of-number-of-digital-twins-in-the-dtr",level:3}];function l(t){const e={h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h2,{id:"future-concepts",children:"Future Concepts"}),"\n",(0,s.jsx)(e.h3,{id:"reduction-of-number-of-digital-twins-in-the-dtr",children:"Reduction of Number of Digital Twins in the DTR"}),"\n",(0,s.jsx)(e.p,{children:"With the current Industry Core concept, a digital twin must be created for every instantiated part that can be identified, e.g., with a serial number, no matter how small it is. This might result in a huge number of digital twins created in the DTR (more then several hundred million) as parts are produced on a daily basis."}),"\n",(0,s.jsx)(e.p,{children:"Therefore, we developed a concept to reduce the number of digital twins by building upon the PartType digital twin of such instantiated part. The processing of data is mostly the same as when data is provided conventially, i.e., with a digital twin for every instantiated part."}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"The basic idea is to use a PartType digital twin to access data about instances of a part type. It is not necessary to create digital twins for instances."}),"\n",(0,s.jsxs)(e.li,{children:["For this PartType:","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"For every aspect that should be provided for instantiated parts (e.g., SerialPart, SingleLevelBomAsBuilt), a submodelDescriptor for this aspect must be added to the part type digital twin. ** As there are no aspect models currently that are used for both, part types and part instances, this does not create any ambiguities.**"}),"\n",(0,s.jsxs)(e.li,{children:["To get the actual submodel data for a digital twin, an operation must be provided by the data provider that is called via InvokeOperationSync or InvokeOperationAsync (see the AAS standard for more details). At least the ID of the instantiated part (e.g., partInstanceId or batchId) must be specified as an input argument of this operation. ",(0,s.jsx)(e.strong,{children:"Note that details about the operation including, e..g, input arguments, still need to be standardized to provide a interoperable solution."})]}),"\n",(0,s.jsx)(e.li,{children:"The backend data service must handle authorization for instantiated parts based on the BPN of data consumer (similar to asset bundling authorization requirements), if necessary."}),"\n",(0,s.jsx)(e.li,{children:"The result of this operation must be compliant to the asepct model represented by the submodel descriptor."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"With this approach, subsequent processing of the submodel data can then proceed as if a digital twin for the instantiated part was provided."})]})}function u(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(l,{...t})}):l(t)}}}]);