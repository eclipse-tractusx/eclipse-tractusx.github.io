"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([["90755"],{894864:function(e,n,t){t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var i=t(610976),s=t(474848),r=t(884429);let o={id:"software-development-view",title:"Software Development View",description:"Software Development View Requirements Kit",sidebar_position:4},l,a={},d=[{value:"Architecture",id:"architecture",level:2},{value:"Component Diagram",id:"component-diagram",level:3},{value:"Components",id:"components",level:4},{value:"Interactions",id:"interactions",level:4},{value:"Requirement Exchange Sequence",id:"requirement-exchange-sequence",level:3},{value:"Requirements Aspect Model",id:"requirements-aspect-model",level:2},{value:"Example of a Requirements Aspect Model",id:"example-of-a-requirements-aspect-model",level:3},{value:"Notification Format",id:"notification-format",level:2},{value:"EDC Setup",id:"edc-setup",level:2},{value:"Notice",id:"notice",level:2}];function c(e){let n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"requirement kit logo",src:t(975235).A+"",width:"264",height:"245"})}),"\n",(0,s.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsx)(n.h3,{id:"component-diagram",children:"Component Diagram"}),"\n",(0,s.jsx)(n.p,{children:"The flowchart illustrates the interactions between four main components in the system:"}),"\n",(0,s.jsx)(n.h4,{id:"components",children:"Components"}),"\n",(0,s.jsx)(n.p,{children:"The following components are necessary for the requirements exchange:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Company Specific Components:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Requirement System"}),": Core component responsible for requirement management"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Catena-X specific components:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Eclipse Dataspace Connector (EDC)"}),": Facilitates data exchange between partners"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Digital Twin Registry"}),": Stores and manages digital twin information"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Submodel Service"}),": Handles submodel data and operations"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"interactions",children:"Interactions"}),"\n",(0,s.jsx)(n.p,{children:"The system architecture demonstrates how components interact to facilitate requirement exchange:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Requirement System Operations"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Registers Digital Twins and Submodel Descriptors in the Digital Twin Registry"}),"\n",(0,s.jsx)(n.li,{children:"Provides Requirement Submodels to the Submodel Service"}),"\n",(0,s.jsx)(n.li,{children:"Uses the Eclipse Dataspace Connector to request requirements and send notifications"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Eclipse Dataspace Connector (EDC)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Handles notifications sent from partners back to the Requirement System"}),"\n",(0,s.jsx)(n.li,{children:"Acts as the communication bridge between partners"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Digital Twin Registry"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Provides Digital Twins to the Eclipse Dataspace Connector"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Submodel Service"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Provides Submodels to the Eclipse Dataspace Connector"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.mermaid,{value:"flowchart LR\n\nreqSysC[Requirement System]\ndtrC[Digital Twin Registry]\nsubmodelC[Submodel Service]\nedcC[Eclipse Dataspace Connector]\n\nreqSysC -- Register Digital Twins and Submodel Descriptors --\x3e dtrC\nreqSysC -- Provide Requirement Submodels --\x3e submodelC\nreqSysC -- Use EDC to Request Requirements and send notifications --\x3e edcC\nedcC -- Handle Notifications sent from partner --\x3e reqSysC\ndtrC -- Provide Digital Twins --\x3e edcC\nsubmodelC -- Provide Submodels --\x3e edcC\n"}),"\n",(0,s.jsx)(n.h3,{id:"requirement-exchange-sequence",children:"Requirement Exchange Sequence"}),"\n",(0,s.jsx)(n.p,{children:"The sequence diagram illustrates the requirement exchange flow between a Customer (e.g., an OEM) and a Supplier:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Initial Requirement Creation"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Customer creates a requirement in their requirements system and registers it in their DTR and creates a submodel."}),"\n",(0,s.jsx)(n.li,{children:"Customer's system sends a notification through the EDC to the Supplier"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Requirement Request"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Supplier's system requests the requirement details through the EDC"}),"\n",(0,s.jsx)(n.li,{children:"The requirement is transferred from Customer's DTR to Supplier's DTR and submodel service"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Requirement Update"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"After processing, Supplier updates the requirement in their requirements system"}),"\n",(0,s.jsx)(n.li,{children:"Supplier sends a notification about the update through the EDC back to the Customer"}),"\n",(0,s.jsx)(n.li,{children:"Customer is notified about the requirement update"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Next interactions"}),":"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The process can be repeated for further updates or new requirements in an interactive manner between the Customer and Supplier."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The diagram shows the core components involved in this exchange:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Requirement Systems (on both Customer and Supplier sides)"}),"\n",(0,s.jsx)(n.li,{children:"Digital Twin Registry (DTR) & Submodel Services"}),"\n",(0,s.jsx)(n.li,{children:"Eclipse Dataspace Connector (EDC) for secure data exchange"}),"\n",(0,s.jsx)(n.li,{children:"Solid lines indicate dataflow"}),"\n",(0,s.jsx)(n.li,{children:"Dashed lines indicate initialization of a request"}),"\n"]}),"\n",(0,s.jsx)(n.mermaid,{value:"\nsequenceDiagram\n    participant oemReqSys as Requirement System Customer\n    participant oemDtr as DTR & Submodel Service Customer\n    participant oemEDC as EDC Customer\n\n    participant supEDC as EDC Supplier\n    participant supDtr as DTR & Submodel Service Supplier\n    participant supReqSys as Requirement System Supplier\n\n    oemReqSys->>oemDtr: Requirement (DTR + Submodel)\n    oemReqSys->>oemEDC: Notification\n    oemEDC->>supEDC: Notification\n    supEDC->>supReqSys: Notification\n    supReqSys--\x3e>supEDC: Request Requirement\n\n\n    supEDC--\x3e>oemEDC: Request Requirement\n    oemEDC--\x3e>oemDtr: Request Requirement\n\n    oemDtr->>oemEDC: Requirement\n\n    oemEDC->>supEDC: Requirement\n    supEDC->>supDtr: Requirement (DTR + Submodel)\n\n    supDtr->>supReqSys: Requirement\n\n    supReqSys->>supDtr: Update Requirement\n    supReqSys->>supEDC: Notification (updated Requirement)\n    supEDC->>oemEDC: Notification (updated Requirement)\n    oemEDC->>oemReqSys: Notification (updated Requirement)\n\n"}),"\n",(0,s.jsx)(n.h2,{id:"requirements-aspect-model",children:"Requirements Aspect Model"}),"\n",(0,s.jsx)(n.p,{children:"The following section gives an overview of the requirements aspect model. The requirements aspect model is a submodel that contains the requirements information and the status of the requirement."}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Digital Twin Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Aspect Model"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Mandatory Version"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Optional Versions"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"KIT"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Standard"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"PartType"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Requirements"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"1.0.0"}),(0,s.jsx)(n.td,{style:{textAlign:"left"}}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Requirements"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"CX-0155"})]})})]}),"\n",(0,s.jsx)(n.h3,{id:"example-of-a-requirements-aspect-model",children:"Example of a Requirements Aspect Model"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "requirementRelations": [\n    {\n      "relatedRequirementId": "urn:uuid:e6b31BC2-8102-64AF-034D-C2DC35E37cEE",\n      "requiremementRelationshipType": "RequirementSpecialismOfRequirement"\n    }\n  ],\n  "requirementId": "urn:uuid:48878d48-6f1d-47f5-8ded-a441d0d879df",\n  "requirementInformation": {\n    "foreignId": "3.1.1",\n    "longname": "Plastic deformation of the bogie",\n    "versionPredecessor": {\n      "versionPredecessorNumber": "1.4.5",\n      "versionPredecessorId": "AeEf3f22-Af51-EDF0-29D2-Ba086b386A5E"\n    },\n    "creationdate": "2025-06-05T09:35:16.166+02:00",\n    "metadata": [\n      {\n        "value": "2025-11-30T00:00:00.000+02:00",\n        "metadataDescription": "Timestamp of the expected finalization of the requirement",\n        "key": "ExpectedFinalization"\n      }\n    ],\n    "author": "Lisa Dr\xe4xlmaier GmbH",\n    "reqifType": "Functional",\n    "reqifName": "Plastic deformation of the bogie",\n    "description": "eOMtThyhVNLWUZNRcBaQKxI",\n    "specification": [\n      "https://www.prostep.org/fileadmin/prod-pay-download-8c1d/Recommendation_ReqIF_V2.2.pdf"\n    ],\n    "version": {\n      "versionNumber": "2.0.0",\n      "versionId": "B50C5243-9590-Eaa5-dA9e-Adb383e2cFf6"\n    }\n  },\n  "requirementStatus": {\n    "customerStatus": [\n      {\n        "customerStatusComment": "Requirement needs to be evaluated",\n        "customerStatusValue": "<empty>",\n        "customerStatusTimestamp": "2025-06-05T09:35:16.166+02:00"\n      }\n    ],\n    "supplierStatus": [\n      {\n        "supplierStatusTimestamp": "2025-06-05T09:35:16.166+02:00",\n        "supplierStatusValue": "<empty>",\n        "supplierStatusComment": "More information needed from customer"\n      }\n    ],\n    "statusValue": "transition status",\n    "statusTimestamp": "2025-06-05T09:35:16.166+02:00"\n  }\n}\n\n'})}),"\n",(0,s.jsx)(n.h2,{id:"notification-format",children:"Notification Format"}),"\n",(0,s.jsxs)(n.p,{children:["The notification format used for the requirements exchange is based on the ",(0,s.jsx)(n.a,{href:"../industry-core-kit/software-development-view/notifications",children:"Industry Core Kit's standardized notification format"}),". The following example illustrates a notification sent from a Customer to a Supplier when a new requirement is created:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "header": {\n    "messageId": "urn:uuid:48878d48-6f1d-47f5-8ded-a441d0d879df",\n    "context": "Requirements-DigitalTwinEventAPI-[Create|Update|Delete]:1.0.0",\n    "sentDateTime": "2024-07-05T08:13:33.20733Z",\n    "senderBpn": "BPNL000000000AAA",\n    "receiverBpn": "BPNL000000000ZZZ",\n    "expectedResponseBy": "2024-07-08T08:13:33.20733Z",\n    "version": "3.0.0"\n  },\n  "content": {\n    "requirementId": "UfzQhdgLLfDTDGspDb",\n    "description": "New requirement created for part type.",\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"requirementId"}),": ",(0,s.jsx)(n.code,{children:"requirementId"})," in requirements datamodel"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Base idea of notifications: Only technical information about creation/change/deletion of requirement. Descriptive information about changes and comments are stored directly within the requirement submodels."}),"\n",(0,s.jsx)(n.h2,{id:"edc-setup",children:"EDC Setup"}),"\n",(0,s.jsx)(n.p,{children:"In order to set up the EDC for the requirements use-case, the following steps are necessary:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"../digital-twin-kit/software-development-view/",children:"Setup for the DTR"})," in order to provide access to the Digital Twins for the partners"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"../industry-core-kit/software-development-view/notifications",children:"Notifications"})," to inform the partners about new requirements or updates. In the requirements use-case the standardized notifications from the Industry Core Kit are used."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"notice",children:"Notice"}),"\n",(0,s.jsxs)(n.p,{children:["This work is licensed under the ",(0,s.jsx)(n.a,{href:"https://creativecommons.org/licenses/by/4.0/legalcode",children:"CC-BY-4.0"}),"."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SPDX-License-Identifier: CC-BY-4.0"}),"\n",(0,s.jsx)(n.li,{children:"SPDX-FileCopyrightText: 2025 Dr\xe4xlmaier GmbH & Co. KG"}),"\n",(0,s.jsx)(n.li,{children:"SPDX-FileCopyrightText: 2025 Schaeffler AG"}),"\n",(0,s.jsx)(n.li,{children:"SPDX-FileCopyrightText: 2025 Mercedes Benz Group AG"}),"\n",(0,s.jsx)(n.li,{children:"SPDX-FileCopyrightText: 2025 ZF Friedrichshafen AG"}),"\n",(0,s.jsx)(n.li,{children:"SPDX-FileCopyrightText: 2025 Contributors to the Eclipse Foundation"}),"\n"]})]})}function u(e={}){let{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},975235:function(e,n,t){t.d(n,{A:()=>i});let i=t.p+"assets/images/requirements-kit-logo-624806841ba0ae40df47a7e02ffdfb24.svg"},884429:function(e,n,t){t.d(n,{R:()=>o,x:()=>l});var i=t(296540);let s={},r=i.createContext(s);function o(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}},610976:function(e){e.exports=JSON.parse('{"id":"kits/requirements-kit/software-development-view","title":"Software Development View","description":"Software Development View Requirements Kit","source":"@site/docs-kits/kits/requirements-kit/software-development-view.md","sourceDirName":"kits/requirements-kit","slug":"/kits/requirements-kit/software-development-view","permalink":"/docs-kits/next/kits/requirements-kit/software-development-view","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"software-development-view","title":"Software Development View","description":"Software Development View Requirements Kit","sidebar_position":4},"sidebar":"kits","previous":{"title":"Adoption View","permalink":"/docs-kits/next/kits/requirements-kit/adoption-view"},"next":{"title":"Data Driven Quality Management KIT","permalink":"/docs-kits/next/category/data-driven-quality-management-kit"}}')}}]);