"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[58057],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(96540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}},84092:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"release/trg-8/trg-8-01","title":"TRG 8.01 - CodeQL","description":"| Status | Created     | Post-History    |","source":"@site/docs/release/trg-8/trg-8-01.md","sourceDirName":"release/trg-8","slug":"/release/trg-8/trg-8-01","permalink":"/docs/release/trg-8/trg-8-01","draft":false,"unlisted":false,"editUrl":"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io/tree/main/docs/release/trg-8/trg-8-01.md","tags":[],"version":"current","frontMatter":{"title":"TRG 8.01 - CodeQL"},"sidebar":"docs","previous":{"title":"TRG 7.09 - Deprecation of Unmaintained Repositories","permalink":"/docs/release/trg-7/trg-7-09"},"next":{"title":"TRG 8.02 - KICS","permalink":"/docs/release/trg-8/trg-8-02"}}');var s=t(74848),o=t(28453);const r={title:"TRG 8.01 - CodeQL"},a=void 0,l={},c=[{value:"Why",id:"why",level:2},{value:"Description",id:"description",level:2}];function d(e){const n={admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Status"}),(0,s.jsx)(n.th,{children:"Created"}),(0,s.jsx)(n.th,{children:"Post-History"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Active"}),(0,s.jsx)(n.td,{children:"26-Mar-2024"}),(0,s.jsx)(n.td,{children:"Initial release"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Draft"}),(0,s.jsx)(n.td,{children:"01-Mar-2024"}),(0,s.jsx)(n.td,{children:"Draft release"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"why",children:"Why"}),"\n",(0,s.jsx)(n.p,{children:"Use CodeQL for deep, static code analysis to identify vulnerabilities and improve code quality across a wide range of programming languages."}),"\n",(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(n.p,{children:"Use CodeQL for all repos with classic code (e.g., C#, Java) without exception. Do not use it for documentation-only or pure IaC repos; it's intended solely for analyzing classic code vulnerabilities. Exclude files as necessary."}),"\n",(0,s.jsx)(n.p,{children:"The GitHub Actions configuration must include the following triggers:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"workflow_dispatch"}),": Manual workflow execution."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"schedule"}),": Schedule the workflow to run at least once a week with ",(0,s.jsx)(n.code,{children:"0 0 * * 0"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"push"})," and ",(0,s.jsx)(n.code,{children:"pull_request"}),": Activate the workflow on both push and pull request events targeting the branch that contains the code for the currently supported version, which may not necessarily be the ",(0,s.jsx)(n.code,{children:"main"})," branch. This is the branch from which new releases will be made."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Findings appear in the GitHub Advanced Security Dashboard. Dismiss high/error findings as non-exploitable or false positives with required justification in the vulnerability alert."}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsx)(n.p,{children:"Address high severity findings; it is recommended to also address medium severity findings."})}),"\n",(0,s.jsxs)(n.p,{children:["You can tailor the failure conditions (",(0,s.jsx)(n.code,{children:"fail-on"}),") for high severity issues in the workflow to suit your team's preferences."]}),"\n",(0,s.jsx)(n.p,{children:"Adjust your code's language and build settings as indicated within the workflow comments."}),"\n",(0,s.jsx)(n.p,{children:"Example CodeQL workflow:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:'name: "CodeQL"\n\non:\n  push:\n    branches: ["main"]\n    paths-ignore:\n      - "**/*.md"\n      - "**/*.txt"\n  pull_request:\n    # The branches below must be a subset of the branches above\n    branches: ["main"]\n    paths-ignore:\n      - "**/*.md"\n      - "**/*.txt"\n  schedule:\n    - cron: "0 0 * * 0"\n  workflow_dispatch:\n\njobs:\n  analyze:\n    name: Analyze\n    runs-on: ubuntu-latest\n    timeout-minutes: 360\n    permissions:\n      actions: read\n      contents: read\n      security-events: write\n\n    strategy:\n      fail-fast: false\n      matrix:\n        language: ["java"] # Define languages here\n        # CodeQL supports [ \'cpp\', \'csharp\', \'go\', \'java\', \'javascript\', \'python\', \'ruby\', \'swift\' ]\n        # Use only \'java\' to analyze code written in Java, Kotlin or both\n        # Use only \'javascript\' to analyze code written in JavaScript, TypeScript or both\n        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      # Initializes the CodeQL tools for scanning.\n      - name: Initialize CodeQL\n        uses: github/codeql-action/init@v2\n        with:\n          languages: ${{ matrix.language }}\n          # If you wish to specify custom queries, you can do so here or in a config file\n          # By default, queries listed here will override any specified in a config file\n          # Prefix the list here with "+" to use these queries and those in the config file\n\n          # For more details on CodeQL\'s query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs\n          # Use +security-extended,security-and-quality for wider security and better code quality\n          queries: +security-extended,security-and-quality\n\n      # Autobuild attempts to build any compiled languages (C/C++, C#, Go, Java, or Swift)\n      # Automates dependency installation for Python, Ruby, and JavaScript, optimizing the CodeQL analysis setup\n      # If this step fails, then you should remove it and run the build manually (see below)\n      - name: Autobuild\n        uses: github/codeql-action/autobuild@v2\n\n      # \u2139\ufe0f Command-line programs to run using the OS shell.\n      # \ud83d\udcda See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun\n\n      # If the Autobuild fails above, remove it and uncomment the following three lines modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance\n\n      # - run: |\n      #     echo "Run, Build Application using script"\n      #     ./location_of_script_within_repo/buildscript.sh\n\n      - name: Perform CodeQL Analysis\n        uses: github/codeql-action/analyze@v3\n        with:\n          category: "/language:${{matrix.language}}"\n          fail-on: error\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);