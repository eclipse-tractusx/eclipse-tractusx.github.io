"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[89059,93390,41999],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var i=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,i,n=function(e,t){if(null==e)return{};var a,i,n={},r=Object.keys(e);for(i=0;i<r.length;i++)a=r[i],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)a=r[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=i.createContext({}),d=function(e){var t=i.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=d(e.components);return i.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=d(a),h=n,m=p["".concat(l,".").concat(h)]||p[h]||u[h]||r;return a?i.createElement(m,s(s({ref:t},c),{},{components:a})):i.createElement(m,s({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,s=new Array(r);s[0]=h;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[p]="string"==typeof e?e:n,s[1]=o;for(var d=2;d<r;d++)s[d]=a[d];return i.createElement.apply(null,s)}return i.createElement.apply(null,a)}h.displayName="MDXCreateElement"},3151:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>p});var i=a(87462),n=(a(67294),a(3905)),r=a(21016),s=a(18272);const o={id:"Architecture View Industry Core Kit",title:"Architecture View",description:"Industry Core Kit",sidebar_position:2},l=void 0,d={unversionedId:"kits/Industry Core Kit/Architecture View Industry Core Kit",id:"version-25.03/kits/Industry Core Kit/Architecture View Industry Core Kit",title:"Architecture View",description:"Industry Core Kit",source:"@site/docs-kits_versioned_docs/version-25.03/kits/Industry Core Kit/page_architecture-view.mdx",sourceDirName:"kits/Industry Core Kit",slug:"/kits/Industry Core Kit/Architecture View Industry Core Kit",permalink:"/docs-kits/kits/Industry Core Kit/Architecture View Industry Core Kit",draft:!1,tags:[],version:"25.03",sidebarPosition:2,frontMatter:{id:"Architecture View Industry Core Kit",title:"Architecture View",description:"Industry Core Kit",sidebar_position:2},sidebar:"kits",previous:{title:"Business View",permalink:"/docs-kits/kits/Industry Core Kit/Business View Industry Core Kit"},next:{title:"Operation View",permalink:"/docs-kits/kits/Industry Core Kit/Operation View Industry Core Kit"}},c={},p=[{value:"Assumptions",id:"assumptions",level:2},{value:"Digital Twin - Asset Administration Shell",id:"digital-twin---asset-administration-shell",level:2},{value:"General Guidance",id:"general-guidance",level:3},{value:"Discrete Nature of Digital Twins",id:"discrete-nature-of-digital-twins",level:4},{value:"Additional Recommendations and Comments",id:"additional-recommendations-and-comments",level:3},{value:"Non-Functional Requirements",id:"non-functional-requirements",level:2},{value:"Lawfulness",id:"lawfulness",level:3},{value:"Correctness",id:"correctness",level:3},{value:"Resilience",id:"resilience",level:3},{value:"Backward Compatibility and Versioning",id:"backward-compatibility-and-versioning",level:3},{value:"Building Block View",id:"building-block-view",level:2},{value:"Digital Twins",id:"digital-twins",level:3},{value:"Notifications",id:"notifications",level:3},{value:"Runtime View",id:"runtime-view",level:2},{value:"Standards",id:"standards",level:2},{value:"Terminology",id:"terminology",level:2}],u={toc:p};function h(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,i.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Industry Core kit banner",src:a(26152).Z,width:"264",height:"245"})),(0,n.kt)("p",null,"The following page offers an architecture perspective including the main building blocks and information regarding\ncommunication between different components, shown as sequence diagrams in a runtime view. In general, data access must\nbe provided in the Catena-X network using the Data Space Protocol (DSP). As standard for data-level interoperability,\nthe Asset Administration Shell (AAS) standard is used - this is relevant for registering data via the Digital Twin\nRegistry (short DTR), as well as for delivery of said data. SAMM is used as modelling language to model a Digital Twin's\naspects, yielding json-schema that defines the payloads and context for runtime data."),(0,n.kt)("h2",{id:"assumptions"},"Assumptions"),(0,n.kt)("p",null,"This architecture is based on the following assumptions:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"There is a complete setup of the Catena-X Dataspace available with all Core Services as defined by the ",(0,n.kt)("a",{parentName:"li",href:"https://catena-x.net/fileadmin/_online_media_/CX_Operating_Modelv2.1_final.pdf"},"Operating Model Whitepaper v2.1"),"."),(0,n.kt)("li",{parentName:"ul"},"All users have ",(0,n.kt)("strong",{parentName:"li"},"completed onboarding")," to the Catena-X network. This includes:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"All participants hold a Verifiable Credential issued by an Operating Company (Core Service Provider B)"),(0,n.kt)("li",{parentName:"ul"},"All participants have at least one Dataspace Connector deployed that's linked to their BPNL at the EDC Discovery\nService."),(0,n.kt)("li",{parentName:"ul"},"All participants have an active network membership that is represented in their membership credential."),(0,n.kt)("li",{parentName:"ul"},"Data Providers operate a Digital Twin Registry according to\nthe ",(0,n.kt)("a",{parentName:"li",href:"../Digital%20Twin%20Kit/Adoption%20View%20Digital%20Twin%20Kit"},"Digital Twin Kit")),(0,n.kt)("li",{parentName:"ul"},"Data Providers expose their data via the Submodel API according to the Digital Twin Kit."))),(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("strong",{parentName:"li"},"customers of parts")," (on catalog and instance level) must be known when creating a digital twin and registering\nits data. Registering data in EDC and DTR requires data providers to define appropriate access permissions to prevent\nexposing data to unauthorized parties. For Traceability, the customer of a part must have access to the digital twin\nin\nthe DTR as well as to the digital twin's data in the EDC. If the customer is not known when a digital twin is created,\nadditional processes must be set up by the data provider to add access permissions for the customer at a later time.")),(0,n.kt)("h2",{id:"digital-twin---asset-administration-shell"},"Digital Twin - Asset Administration Shell"),(0,n.kt)("p",null,"This section provides guidance on the consideration of digital twins as a basis for data structuring and data discovery within Catena-X. Details on the exact usage of AAS and Digital Twins can be obtained in the ",(0,n.kt)("a",{parentName:"p",href:"/docs-kits/category/digital-twin-kit"},"Digital Twin KIT")),(0,n.kt)("h3",{id:"general-guidance"},"General Guidance"),(0,n.kt)("p",null,"Digital twins and their technical representation as an Asset Administration Shell within Catena-X are a crucial element for interoperability and reusability. By leveraging an AAS-compliant Digital Twin Registry, the provisioning and publishing of object-related data via standardized submodel templates through the standardized API enables reusable data discovery and consumption mechanisms across various use cases."),(0,n.kt)("p",null,"However, the provisioning of a digital twin incurs certain costs. Therefore, the Industry Core provides the following guidance and highlights potential benefits:"),(0,n.kt)("h4",{id:"discrete-nature-of-digital-twins"},"Discrete Nature of Digital Twins"),(0,n.kt)("p",null,"Digital twins should be associated with an underlying object (real or virtual) to which data will be attached. Creating a digital twin for a pure set of mass data (e.g., generic usage data) not related to a specific discrete object may be unnecessary, as it might already be represented by a data asset in dataspace terms according to CX-0018 Dataspace Connectivity."),(0,n.kt)("p",null,"Examples of Discrete Objects in the automotive context:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'a part number / catalog part (as described in "Industry Core: PartType")'),(0,n.kt)("li",{parentName:"ul"},'a serialized part / material (as described in "Industry Core: Part Instance")'),(0,n.kt)("li",{parentName:"ul"},"a product batch"),(0,n.kt)("li",{parentName:"ul"},"a quality case"),(0,n.kt)("li",{parentName:"ul"},"a production line"),(0,n.kt)("li",{parentName:"ul"},"serialized production equipment"),(0,n.kt)("li",{parentName:"ul"},"...")),(0,n.kt)("p",null,"Even with an underlying object, the usage of a digital twin might still not be necessary based on the predefined exclusive utilization of the data within a use-case. Therefore the following questions should be answered:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Is the object and especially the data linked to it shared or likely to be shared between different use cases ?"),(0,n.kt)("li",{parentName:"ul"},"Is the object itself linked to different sets of data (submodels), that are individually accessed ?"),(0,n.kt)("li",{parentName:"ul"},"Is the object identified by different identifiers, requiring the use or translation of these identifiers for discovery mechanisms ?"),(0,n.kt)("li",{parentName:"ul"},"Is the object commonly accessed individually and not via mass data requests ?"),(0,n.kt)("li",{parentName:"ul"},"Is the data intended to be used more than once and therefore worth to be discovered ?")),(0,n.kt)("p",null,'If all of the above questions are answered with a clear "No", a twin might be overhead for an object or data to be shared within one specific use-case. Examples include: '),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"the data to be shared is a set of mass data not linked to a specific instance of an object"),(0,n.kt)("li",{parentName:"ul"},"the data is only being used and intended to be used by a single use-case and there is no cross-use-case relevancy anticipated")),(0,n.kt)("h3",{id:"additional-recommendations-and-comments"},"Additional Recommendations and Comments"),(0,n.kt)("p",null,"If mass data is used for analysis to generate new data applicable to a specific object (e.g., material, serialized part, batch), this data should be linked to a digital twin at that level, while the originating mass data sets are not required to be linked. For example, analytics use cases leveraging mass data sets regarding multiple objects could feed their outcome back into the digital twins of the known objects, while the potentially use-case proprietary mass data sets are not necessarily represented by digital twins or submodels."),(0,n.kt)("p",null,"Data that is shared via request and answer schemes, due to the need of additional processes to generate, may also be attached - once generated - in addition to the direct data sharing."),(0,n.kt)("p",null,"The AAS does not alter data structures; it defines a method to link data (submodels) to objects and establishes a standardized path for data discovery. Data Structures and Semantics should be described by semantic models to support easy consumption."),(0,n.kt)("p",null,"Linking data to multiple twins does not increase its persistence footprint. The Digital Twin Registry merely points to the actual data sources."),(0,n.kt)("h2",{id:"non-functional-requirements"},"Non-Functional Requirements"),(0,n.kt)("h3",{id:"lawfulness"},"Lawfulness"),(0,n.kt)("p",null,"Automotive supply chains hold sensitive data. Not only can improper exposure lead to the loss of trade-secrets but it can also violate antitrust regulations - especially when gaining access to sensitive data of horizontal competitors. As this can jeopardize the business of a company, especially Data Providers (and by proxy Business Application Providers) must ensure that their solutions are not only secure by default but also provide ergonomic and reliable means for configuration."),(0,n.kt)("h3",{id:"correctness"},"Correctness"),(0,n.kt)("p",null,"Data Chains are built up of the links to resources distributed among the supply chain. This is reflected in distributed data. Publishing incorrect or outdated data to the network will have ripple-on effects that may break the chain for all interested parties. To avoid this, implementation strictly according to standard, verified by rigorous certification, is critical for the success of the Industry Core and the network as a whole."),(0,n.kt)("h3",{id:"resilience"},"Resilience"),(0,n.kt)("p",null,"While processing data for publishing it to Catena-X, a data provider needs to access the digital twins of built-in parts from suppliers. These must be available in Catena-X at this point. If these digital twins are not found while the data provider is looking them up, the data provider will not be able to integrate these built-in parts into BoM aspect models (e.g., SingleLevelBomAsBuilt) as it is missing the built-in parts' Unique ID. Reasons for not finding a built-in part's digital twin can be:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"There is a network failure while the data provider's is looking for the digital twin."),(0,n.kt)("li",{parentName:"ol"},"The supplier did not yet create the digital twin, e.g., because its internal processes were delayed"),(0,n.kt)("li",{parentName:"ol"},"The supplier is not yet part of the Catena-X network.")),(0,n.kt)("p",null,"Resilience means that the data provider implements a pipeline that can cope with these issues. Digital twins are provided with the information that is available and are updated once more information is available (e.g., the supplier provides digital twins for built-in parts later on)."),(0,n.kt)("h3",{id:"backward-compatibility-and-versioning"},"Backward Compatibility and Versioning"),(0,n.kt)("p",null,"Effective management of versions and changes for Catena-X standards, KITs, and open source reference implementations is crucial to guarantee compatibility, interoperability and security especially in a decentralized data space. The Catena-X lifecycle management coordinates quarterly releases, including one major release and three minor releases per year. Only a major release may contain breaking changes and does not need to be backward compatible."),(0,n.kt)("p",null,"The Catena-X data space aims to support a parallel phase of two major versions of 12 months to ensure a smooth upgrade process. Data providers and data consumers must take special care to prepare for such releases by planing necessary migrations in time. This means that, e.g., a Traceability app that was built for the previous (major) Catena-X release will still work in an environment that is running the new major release."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"For digital twins and aspect models"),", this means that data providers and data consumers must at least support mandatory aspect model versions from the oldest, still supported major release. Newer mandatory aspect model versions can be optionally supported. A data provider cannot assume that all data consumers are already able to process newer aspect model versions. A data consumer cannot assume that all data providers already provide their data in newer aspect model versions."),(0,n.kt)("p",{parentName:"li"},"Mandatory versions for aspect models can only change in a major release as this change is breaking. Optional versions can be introduced with minor and patch versions, e.g., to introduce a future mandatory version first as optional for easier migration later on."),(0,n.kt)("p",{parentName:"li"},"A data provider that wants to support several versions of an aspect models must add a separate submodelDescriptor for every supported aspect model version to the digital twin. The submodelDescriptors will have different semanticIds and might also point to different EDC assets - depending on the asset structure used in the EDC for providing the digital twin's sumodel."),(0,n.kt)("p",{parentName:"li"},"A data consumer must search the submodelDescriptors of a digital twin for supported semanticIds and then select the most suitable one for further processing.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"For Notification APIs"),", a separate EDC asset must be created for every major API version, e.g., for versions v1 and v2 of the API separate EDC assets must be created. The API version must be documented in the ",(0,n.kt)("inlineCode",{parentName:"p"},"https://w3id.org/catenax/ontology/common#version")," property on a minor release level (e.g., 1.1). It is not necessary to create a separate EDC asset for every minor or patch version as these versions must always be backward compatible."))),(0,n.kt)("p",null,"More information about backward compatibility and versioning can be found here:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://catena-x.net/fileadmin/_online_media_/231006_Whitepaper_LifeCycleManagement.pdf"},"Life Cycle Management 101")," from the Catana-X Standard Library,"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"../Digital%20Twin%20Kit/Software%20Development%20View/dt-kit-software-development-view/#registration-at-edc"},"Digital Twin KIT - Registration at EDC")," with details about versioning of EDC assets (for submodels as well as for Notification assets) including examples.")),(0,n.kt)("h2",{id:"building-block-view"},"Building Block View"),(0,n.kt)("p",null,"The basic features of Industry Core build the foundation for message-based and digital-twin-based data sharing in Catena-X. Message-based communication or respectively data push scenarios can leverage the notification feature, whilst data pull scenarios can leverage the digital-twin-based data discovery as well as data sharing orchestration."),(0,n.kt)("p",null,"Use cases are intended to build upon the foundation provided by the Industry Core to support use case agnostic interoperability, reusability, monitoring and minimized entry barriers towards new use cases."),(0,n.kt)("p",null,"A shared technical foundation offers significant advantages for dataspace participants and software providers. By minimizing the technical footprint required for multi-use-case participation and software development, it enables substantial reductions in development, maintenance costs and cross-usecase reusability."),(0,n.kt)("h3",{id:"digital-twins"},"Digital Twins"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Building Block View of the Industry Core",src:a(54998).Z,width:"1617",height:"1738"})),(0,n.kt)("h3",{id:"notifications"},"Notifications"),(0,n.kt)("p",null,"With notifications, the Industry Core defines a message-based data sharing within Catena-X. The message is sent from one Catena-X partner - called sender - to another Catena-X partner - called receiver - using simple messages in JSON format via Catena-X connector, as shown in the following figure:"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Notifications Flow",src:a(52512).Z,width:"1252",height:"532"})),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"In the context of this KIT, notifications are messages in JSON format with a standardized data format consisting of a standardized header and a use-case-specific content."),(0,n.kt)("li",{parentName:"ul"},"The notification API consists of a set of operations that can be used to exchange notifications between sender and receiver. Each operation has a defined request, i.e., the notification, and a response which consists of HTTP error codes. Operations can use notifications with different data formats. It is not required to use the same notification data format for all operations."),(0,n.kt)("li",{parentName:"ul"},"The notification exchange is done via Catena-X connectors. So, this KIT also defines assets, asset properties, and usage policies that are required for implementation.")),(0,n.kt)("p",null,"Together, these artifacts define the message-based data sharing, called notification API. This KIT also defines a standardized way to document all these artifacts of a notification API in Catena-X standard documents and KITs."),(0,n.kt)("p",null,"Use cases can define and standardize their own notification APIs. They need to extend the Industry Core notification API by adding their own business content."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"They must extend the content part of the notification data format with their own business content."),(0,n.kt)("li",{parentName:"ul"},"They must define a set of operations that should be supported with the use case specific notification API."),(0,n.kt)("li",{parentName:"ul"},"They also must define a name for their notification API which is, for example, used in the ",(0,n.kt)("inlineCode",{parentName:"li"},"dct:type")," property of the connector asset.  ")),(0,n.kt)("p",null,"As all use cases use the same underlying notification technology based on Industry Core, use cases still are interoperable. Data and app providers only need to implement one notification technology that is jointly used by all use cases and do not need to implement several different technologies for message-based data sharing."),(0,n.kt)("h2",{id:"runtime-view"},"Runtime View"),(0,n.kt)("p",null,"The runtime patterns represent a subset of the interactions specified in the Digital Twin Kit.\nIts ",(0,n.kt)("a",{parentName:"p",href:"../Digital%20Twin%20Kit/Software%20Development%20View/dt-kit-interaction-patterns"},'"Interaction Patterns" section'),"\ndescribes the interaction between a Data Provider and Data Consumer including the necessary configuration steps.\nSince the Discovery Services according to CX-0053 are not part of the Industry Core, all calls going to the components\n",(0,n.kt)("inlineCode",{parentName:"p"},"DiscoveryFinder")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"BPN Discovery Service")," can be omitted."),(0,n.kt)(s.default,{components:o.components,mdxType:"FutureConcepts"}),(0,n.kt)("h2",{id:"standards"},"Standards"),(0,n.kt)("p",null,"A formal definition of the Industry Core's content is given in the standards CX-0151 (Industry Core: Basics), CX-0126 and CX-0127. These standards build on a common subset of technologies that are themselves described in separate Catena-X standards."),(0,n.kt)("p",null,"The Industry Core standards share a common set of base technologies. And while the Industry Core does provide Business-relevant capabilities for Data Consumers, it can likewise serve as a launchpad for new use-cases."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Locating the Industry Core standards in the Catena-X landscape",src:a(83328).Z,width:"3809",height:"1530"})),(0,n.kt)("p",null,"The Interoperability Layer the Industry Core Standards build on defines API structures of Data Providers and relevant\ncore services hosted centrally. They depend on the EDC Discovery Service defined in standard CX-0001 to discover a\nparticipant's the EDC-endpoint. CX-0002 is the standard for the integration between assets and related data - leveraging\nthe Asset Administration Shell standard as adopted by Catena-X. Its correct deployment is especially critical as its\nservices (Digital Twin Registry and Submodel Endpoints) are operated by all Data Providers."),(0,n.kt)("p",null,"The Identity and Sovereignty Layers are defined in a variety of Catena-X standards that are assumed to be deployed and\nintegrated form the foundation for data sharing in Catena-X."),(0,n.kt)("p",null,"All relevant standards can be downloaded from the official ",(0,n.kt)("a",{parentName:"p",href:"https://catena-x.net/de/standard-library"},"Catena-X Standard Library"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Industry Core specific",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://catena-x.net/de/standard-library"},"CX-0151 Industry Core: Basics 1.0")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://catena-x.net/de/standard-library"},"CX-0126 Industry Core Part Type 2.1")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://catena-x.net/de/standard-library"},"CX-0127 Industry Core Part Instance 2.0")))),(0,n.kt)("li",{parentName:"ul"},"Interoperability Layer",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://catena-x.net/de/standard-library"},"CX-0001 EDC Discovery API 1.0")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://catena-x.net/de/standard-library"},"CX-0002 Digital Twins in Catena-X 2.2")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://catena-x.net/de/standard-library"},"CX-0003 SAMM Aspect Meta Model 1.2")))),(0,n.kt)("li",{parentName:"ul"},"Sovereignty Layer",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://catena-x.net/de/standard-library"},"CX-0018 Dataspace Connectivity 3.2")))),(0,n.kt)("li",{parentName:"ul"},"Identity Layer",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://catena-x.net/de/standard-library"},"CX-0013 Identity of Member Company 2.0")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://catena-x.net/de/standard-library"},"CX-0014 Employees and Technical Users 1.0")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://catena-x.net/de/standard-library"},"CX-0015 IAM & Access Control Paradigm for Users and Clients 1.0")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://catena-x.net/de/standard-library"},"CX-0149 Verified Company Identity 1.0")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://catena-x.net/de/standard-library"},"CX-0050 Framework Agreement Credential 2.1"))))),(0,n.kt)("h2",{id:"terminology"},"Terminology"),(0,n.kt)("p",null,"The following terms are especially relevant for the understanding of this KIT:"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Catena-X Partner:")," A company participating in the Catena-X network. A partner can act as both, a notification sender or notification receiver."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Message"),": Data with a defined format exchanged between two partners, a sender and a receiver. "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Notification"),": In Catena-X, notifications are JSON messages with a standardized data format consisting of a standardized header and a use-case-specific content."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Notification Sender:")," The sender of a Catena-X notification"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Notification Receiver:")," The receiver of a Catena-X notification. The receiver provides an asset in the connector to which notifications can be sent."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Notification API"),": A message-based data sharing within Catena-X that supports a set of operations."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Unique ID / Catena-X ID"),": A Unique ID uniquely identifies a particular real-world asset. In Industry Core, these are: serialized parts (including vehicles), batches, JIS parts (Just-in-Sequence) and catalog parts. A Unique ID is a URN and has the following format: urn:uuid:","<","UUIDv4",">",', i.e., the NID is "uuid" and the NSS is an UUID Version 4 (as described here: ',(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Universally_unique_identifier"},"https://en.wikipedia.org/wiki/Universally_unique_identifier"),"). Unique IDs are used in several places in Industry Core, e.g., as globalAssetId for digital twins. Although they share the same format with other identifiers like, e.g., the AAS identifier, they are separate identifiers that identify different resources and should not be mistaken with these other identifiers."),(0,n.kt)(r.default,{components:o.components,mdxType:"Notice"}))}h.isMDXComponent=!0},18272:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var i=a(87462),n=(a(67294),a(3905));const r={sidebar_class_name:"hidden"},s=void 0,o={unversionedId:"kits/Industry Core Kit/part_future-concepts",id:"version-25.03/kits/Industry Core Kit/part_future-concepts",title:"part_future-concepts",description:"\x3c!--",source:"@site/docs-kits_versioned_docs/version-25.03/kits/Industry Core Kit/part_future-concepts.mdx",sourceDirName:"kits/Industry Core Kit",slug:"/kits/Industry Core Kit/part_future-concepts",permalink:"/docs-kits/kits/Industry Core Kit/part_future-concepts",draft:!1,tags:[],version:"25.03",frontMatter:{sidebar_class_name:"hidden"},sidebar:"kits",previous:{title:"part_bill-of-materials",permalink:"/docs-kits/kits/Industry Core Kit/part_bill-of-materials"},next:{title:"part_notice",permalink:"/docs-kits/kits/Industry Core Kit/part_notice"}},l={},d=[{value:"Future Concepts",id:"future-concepts",level:2},{value:"Reduction of Number of Digital Twins in the DTR",id:"reduction-of-number-of-digital-twins-in-the-dtr",level:3}],c={toc:d};function p(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,i.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"future-concepts"},"Future Concepts"),(0,n.kt)("h3",{id:"reduction-of-number-of-digital-twins-in-the-dtr"},"Reduction of Number of Digital Twins in the DTR"),(0,n.kt)("p",null,"With the current Industry Core concept, a digital twin must be created for every instantiated part that can be identified, e.g., with a serial number, no matter how small it is. This might result in a huge number of digital twins created in the DTR (more then several hundred million) as parts are produced on a daily basis."),(0,n.kt)("p",null,"Therefore, we developed a concept to reduce the number of digital twins by building upon the PartType digital twin of such instantiated part. The processing of data is mostly the same as when data is provided conventially, i.e., with a digital twin for every instantiated part."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The basic idea is to use a PartType digital twin to access data about instances of a part type. It is not necessary to create digital twins for instances."),(0,n.kt)("li",{parentName:"ul"},"For this PartType:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"For every aspect that should be provided for instantiated parts (e.g., SerialPart, SingleLevelBomAsBuilt), a submodelDescriptor for this aspect must be added to the part type digital twin. ",(0,n.kt)("strong",{parentName:"li"}," As there are no aspect models currently that are used for both, part types and part instances, this does not create any ambiguities.")),(0,n.kt)("li",{parentName:"ul"},"To get the actual submodel data for a digital twin, an operation must be provided by the data provider that is called via InvokeOperationSync or InvokeOperationAsync (see the AAS standard for more details). At least the ID of the instantiated part (e.g., partInstanceId or batchId) must be specified as an input argument of this operation. ",(0,n.kt)("strong",{parentName:"li"},"Note that details about the operation including, e..g, input arguments, still need to be standardized to provide a interoperable solution.")),(0,n.kt)("li",{parentName:"ul"},"The backend data service must handle authorization for instantiated parts based on the BPN of data consumer (similar to asset bundling authorization requirements), if necessary."),(0,n.kt)("li",{parentName:"ul"},"The result of this operation must be compliant to the asepct model represented by the submodel descriptor.")))),(0,n.kt)("p",null,"With this approach, subsequent processing of the submodel data can then proceed as if a digital twin for the instantiated part was provided."))}p.isMDXComponent=!0},21016:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var i=a(87462),n=(a(67294),a(3905));const r={sidebar_class_name:"hidden"},s=void 0,o={unversionedId:"kits/Industry Core Kit/part_notice",id:"version-25.03/kits/Industry Core Kit/part_notice",title:"part_notice",description:"\x3c!--",source:"@site/docs-kits_versioned_docs/version-25.03/kits/Industry Core Kit/part_notice.mdx",sourceDirName:"kits/Industry Core Kit",slug:"/kits/Industry Core Kit/part_notice",permalink:"/docs-kits/kits/Industry Core Kit/part_notice",draft:!1,tags:[],version:"25.03",frontMatter:{sidebar_class_name:"hidden"},sidebar:"kits",previous:{title:"part_future-concepts",permalink:"/docs-kits/kits/Industry Core Kit/part_future-concepts"},next:{title:"Logistics KIT",permalink:"/docs-kits/category/logistics-kit"}},l={},d=[{value:"NOTICE",id:"notice",level:2}],c={toc:d};function p(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,i.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"notice"},"NOTICE"),(0,n.kt)("p",null,"This work is licensed under the ",(0,n.kt)("a",{parentName:"p",href:"https://creativecommons.org/licenses/by/4.0/legalcode"},"CC-BY-4.0"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"SPDX-License-Identifier: CC-BY-4.0"),(0,n.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 BASF SE"),(0,n.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 Bayerische Motoren Werke Aktiengesellschaft (BMW AG)"),(0,n.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e.V. (represented by Fraunhofer ISST & Fraunhofer IML)"),(0,n.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 German Edge Cloud GmbH & Co. KG"),(0,n.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 Mercedes Benz AG"),(0,n.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 Robert Bosch Manufacturing Solutions GmbH"),(0,n.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 SAP SE"),(0,n.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 Siemens AG"),(0,n.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 T-Systems International GmbH"),(0,n.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 ZF Friedrichshafen AG"),(0,n.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 Contributors to the Eclipse Foundation"),(0,n.kt)("li",{parentName:"ul"},"Source URL: ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io/tree/main/docs-kits/kits/Industry%20Core%20Kit"},"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io/tree/main/docs-kits/kits/Industry%20Core%20Kit")," (latest version)")))}p.isMDXComponent=!0},54998:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/ic-arch-view-blocks-6f25205ed6a5a8733c351f26b3f5fb7f.svg"},83328:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/ic-arch-view-stds-de186edcdfb5f8f33b73d52d57329d8a.svg"},52512:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/notifications_process-f76c1cca4481f3adbbfaddbd255025b7.svg"},26152:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/industry-core-kit-logo.drawio-fad669fd5b3244d8aa7228ea7333810c.svg"}}]);