"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[52187,35781,37267,52382],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>h});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(a),m=i,h=p["".concat(s,".").concat(m)]||p[m]||u[m]||r;return a?n.createElement(h,o(o({ref:t},d),{},{components:a})):n.createElement(h,o({ref:t},d))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},64134:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>u});var n=a(87462),i=(a(67294),a(3905)),r=a(96240),o=a(88822),l=a(72081);const s={id:"App Provider Development View Traceability Kit",title:"App Provider",description:"Traceability Kit",sidebar_position:2},c=void 0,d={unversionedId:"kits/Traceability Kit/Software Development View/App Provider Development View Traceability Kit",id:"version-23.12/kits/Traceability Kit/Software Development View/App Provider Development View Traceability Kit",title:"App Provider",description:"Traceability Kit",source:"@site/docs-kits_versioned_docs/version-23.12/kits/Traceability Kit/Software Development View/page_app-provider_software-development-view.mdx",sourceDirName:"kits/Traceability Kit/Software Development View",slug:"/kits/Traceability Kit/Software Development View/App Provider Development View Traceability Kit",permalink:"/docs-kits/23.12/kits/Traceability Kit/Software Development View/App Provider Development View Traceability Kit",draft:!1,tags:[],version:"23.12",sidebarPosition:2,frontMatter:{id:"App Provider Development View Traceability Kit",title:"App Provider",description:"Traceability Kit",sidebar_position:2},sidebar:"kits",previous:{title:"Data Provider",permalink:"/docs-kits/23.12/kits/Traceability Kit/Software Development View/Data Provider Development View Traceability Kit"},next:{title:"Introduction",permalink:"/docs-kits/23.12/kits/Traceability Kit/Software Development View/Notification API/notification-api"}},p={},u=[],m={toc:u};function h(e){let{components:t,...s}=e;return(0,i.kt)("wrapper",(0,n.Z)({},m,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Traceability kit banner",src:a(76510).Z,width:"285",height:"244"})),(0,i.kt)("p",null,"The following page offers specific developer resources, including payloads and API endpoints for data consumer and app provider. It is important to read the business and architecture view first to understand everything."),(0,i.kt)(r.default,{components:s.components,mdxType:"AspectModels"}),(0,i.kt)(o.default,{components:s.components,mdxType:"Policies"}),(0,i.kt)(l.default,{components:s.components,mdxType:"Notice"}))}h.isMDXComponent=!0},96240:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var n=a(87462),i=(a(67294),a(3905));const r={sidebar_class_name:"hidden"},o=void 0,l={unversionedId:"kits/Traceability Kit/Software Development View/part_aspect-models",id:"version-23.12/kits/Traceability Kit/Software Development View/part_aspect-models",title:"part_aspect-models",description:"\x3c!---",source:"@site/docs-kits_versioned_docs/version-23.12/kits/Traceability Kit/Software Development View/part_aspect-models.mdx",sourceDirName:"kits/Traceability Kit/Software Development View",slug:"/kits/Traceability Kit/Software Development View/part_aspect-models",permalink:"/docs-kits/23.12/kits/Traceability Kit/Software Development View/part_aspect-models",draft:!1,tags:[],version:"23.12",frontMatter:{sidebar_class_name:"hidden"},sidebar:"kits",previous:{title:"receiveUniqueIdPushNotification",permalink:"/docs-kits/23.12/kits/Traceability Kit/Software Development View/Unique ID Push API/receive-unique-id-push-notification"},next:{title:"part_bill-of-materials",permalink:"/docs-kits/23.12/kits/Traceability Kit/Software Development View/part_bill-of-materials"}},s={},c=[{value:"Aspect Models",id:"aspect-models",level:2},{value:"AsPlanned",id:"asplanned",level:3},{value:"Short Introduction: What is a BoM AsPlanned?",id:"short-introduction-what-is-a-bom-asplanned",level:4},{value:"Definition Status of the BoM AsPlanned",id:"definition-status-of-the-bom-asplanned",level:4},{value:"1. PartAsPlanned",id:"1-partasplanned",level:4},{value:"Example: Submodel <code>PartAsPlanned</code> for a Catalog Part",id:"example-submodel-partasplanned-for-a-catalog-part",level:5},{value:"2. SingelLevelBomAsPlanned",id:"2-singellevelbomasplanned",level:4},{value:"Example: Submodel <code>SingleLevelBomAsPlanned</code> for a Catalog Part",id:"example-submodel-singlelevelbomasplanned-for-a-catalog-part",level:5},{value:"3. SingelLevelUsageAsPlanned",id:"3-singellevelusageasplanned",level:4},{value:"Example: Submodel <code>SingleLevelUsageAsPlanned</code> for a Catalog Part",id:"example-submodel-singlelevelusageasplanned-for-a-catalog-part",level:5},{value:"4. PartSiteInformationAsPlanned",id:"4-partsiteinformationasplanned",level:4},{value:"Example: Submodel <code>PartSiteInformationAsPlanned</code> for a Component that is Produced at the Given Site",id:"example-submodel-partsiteinformationasplanned-for-a-component-that-is-produced-at-the-given-site",level:5},{value:"AsBuilt",id:"asbuilt",level:3},{value:"Short Introduction: What is a BoM AsBuilt?",id:"short-introduction-what-is-a-bom-asbuilt",level:4},{value:"Definition Status of the BoM AsBuilt",id:"definition-status-of-the-bom-asbuilt",level:4},{value:"1. SerialPart",id:"1-serialpart",level:4},{value:"Example: Submodel <code>SerialPart</code> for a Vehicle",id:"example-submodel-serialpart-for-a-vehicle",level:5},{value:"Example: Submodel <code>SerialPart</code> for a Serialized Part (Non-Vehicle)",id:"example-submodel-serialpart-for-a-serialized-part-non-vehicle",level:5},{value:"2. SingleLevelBomAsBuilt",id:"2-singlelevelbomasbuilt",level:4},{value:"Example: Submodel <code>SingleLevelBomAsBuilt</code> for a Serialized Part",id:"example-submodel-singlelevelbomasbuilt-for-a-serialized-part",level:5},{value:"Submodel <code>SingleLevelBomAsBuilt</code> for a Batch",id:"submodel-singlelevelbomasbuilt-for-a-batch",level:5},{value:"3. Batch",id:"3-batch",level:4},{value:"Example: Submodel <code>Batch</code> for a Batch of Raw Material",id:"example-submodel-batch-for-a-batch-of-raw-material",level:5},{value:"4. JustInSequencePart",id:"4-justinsequencepart",level:4},{value:"Example: Submodel <code>JustInSequencePart</code> for a non-serialized component",id:"example-submodel-justinsequencepart-for-a-non-serialized-component",level:5},{value:"5. TractionBatteryCode",id:"5-tractionbatterycode",level:4},{value:"Example: Submodel <code>TractionBatteryCode</code> for a Battery Cell",id:"example-submodel-tractionbatterycode-for-a-battery-cell",level:5},{value:"Example: Submodel <code>TractionBatteryCode</code> for a Battery Module",id:"example-submodel-tractionbatterycode-for-a-battery-module",level:5},{value:"Example: Submodel <code>TractionBatteryCode</code> for a Battery Pack",id:"example-submodel-tractionbatterycode-for-a-battery-pack",level:5}],d={toc:c};function p(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"aspect-models"},"Aspect Models"),(0,i.kt)("h3",{id:"asplanned"},"AsPlanned"),(0,i.kt)("h4",{id:"short-introduction-what-is-a-bom-asplanned"},"Short Introduction: What is a BoM AsPlanned?"),(0,i.kt)("p",null,"The BoM AsPlanned is the generic list of all possible catalogue parts & materials for a specific vehical project and the supply chain from OEM to raw material suppliers. The BoM is also called 120% which means that it includes alternative parts / materials (e.g. LED headlights and XENON headlights) and parts for certain markets. It will be set up way before Start of Production (SOP) and be updated if the contents are updated. It is used for Sourcing / Production Planning and always reflects the current state of parts / materials build into this specific vehicle project."),(0,i.kt)("p",null,"The BoM AsPlanned also includes all versions of parts like changed parts. It has to enable parts/materials provided from multiple manufacturers or the same manufacturer at different production sites. Additionally it must be possible to map relations of the same part/material to different customers."),(0,i.kt)("p",null,"The complexity of generic is much higher than BoM AsBuilt. It is used for technical topics, e.g., Supply Chain Act, DCM."),(0,i.kt)("h4",{id:"definition-status-of-the-bom-asplanned"},"Definition Status of the BoM AsPlanned"),(0,i.kt)("p",null,"Defined"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Digital Twins"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'Digtial Twin "PartType"'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Traceability data aspect models"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'Aspect model "PartAsPlanned"'),(0,i.kt)("li",{parentName:"ul"},'Aspect model "SingleLevelBoMAsPlanned"'),(0,i.kt)("li",{parentName:"ul"},'Aspect model "SingelLevelUsageAsPlanned"'),(0,i.kt)("li",{parentName:"ul"},'Aspect model "PartSiteInformationAsPlanned"')))),(0,i.kt)("h4",{id:"1-partasplanned"},"1. PartAsPlanned"),(0,i.kt)("p",null,"A Part as Planned represents an item in the Catena-X Bill of Material (BOM) in As-Planned lifecycle status in a specific version."),(0,i.kt)("p",null,"Github Link to semantic data model: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.part_as_planned/1.0.1"},"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.part_as_planned/1.0.1")),(0,i.kt)("h5",{id:"example-submodel-partasplanned-for-a-catalog-part"},"Example: Submodel ",(0,i.kt)("inlineCode",{parentName:"h5"},"PartAsPlanned")," for a Catalog Part"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "partTypeInformation": {\n    "classification": "component",\n    "manufacturerPartId": "123-0.740-3434-A",\n    "nameAtManufacturer": "Mirror left"\n  },\n  "validityPeriod": {\n    "validFrom": "2021-06-14T06:55:29.935Z",\n    "validTo": "2022-06-14T06:55:29.935Z"\n  },\n  "catenaXId": "urn:uuid:580d3adf-1981-44a0-a214-13d6ceed9379"\n}\n')),(0,i.kt)("h4",{id:"2-singellevelbomasplanned"},"2. SingelLevelBomAsPlanned"),(0,i.kt)("p",null,'The single-level Bill of Material represents one sub-level of an assembly and does not include any lower-level subassemblies. In as planned lifecycle state all variants are covered (\\"120% BoM\\"). If multiple versions of child parts exist that can be assembled into the same parent part, all versions of the child part are included in the BoM. If there are multiple suppliers for the same child part, each supplier has an entry for their child part in the BoM.'),(0,i.kt)("p",null,"Github Link to semantic data model: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-tractusx/sldt-semantic-models/blob/main/io.catenax.single_level_bom_as_planned/2.0.0"},"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.single_level_bom_as_planned/2.0.0")),(0,i.kt)("h5",{id:"example-submodel-singlelevelbomasplanned-for-a-catalog-part"},"Example: Submodel ",(0,i.kt)("inlineCode",{parentName:"h5"},"SingleLevelBomAsPlanned")," for a Catalog Part"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "catenaXId": "urn:uuid:055c1128-0375-47c8-98de-7cf802c3241d",\n  "childItems": [\n    {\n      "catenaXId": "urn:uuid:5daB938E-Cafa-92B3-7ca1-9aD7885e9dC8"\n      "quantity": {\n        "quantityNumber": 2.5,\n        "measurementUnit": "unit:litre"\n      },\n      "createdOn": "2022-02-03T14:48:54.709Z",\n      "businessPartner": "BPNL50096894aNXY",\n      "lastModifiedOn": "2022-02-03T14:48:54.709Z"\n  ]\n}\n')),(0,i.kt)("h4",{id:"3-singellevelusageasplanned"},"3. SingelLevelUsageAsPlanned"),(0,i.kt)("p",null,"The aspect provides the information in which parent part(s)/product(s) the given item is assembled in. This could be a 1:1 relationship in terms of a e.g. a brake component or 1:n for e.g. coatings. The given item as well as the parent item must refer to an object from as planned lifecycle phase. If multiple versions of parent parts exist that the child part can be assembled into, all versions of the parent part are included in the usage list."),(0,i.kt)("p",null,"Github Link to semantic data model: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.single_level_usage_as_planned/1.1.0"},"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.single_level_usage_as_planned/1.1.0")),(0,i.kt)("h5",{id:"example-submodel-singlelevelusageasplanned-for-a-catalog-part"},"Example: Submodel ",(0,i.kt)("inlineCode",{parentName:"h5"},"SingleLevelUsageAsPlanned")," for a Catalog Part"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "parentParts": [\n    {\n      "parentCatenaXId": "urn:uuid:c8B01D5A-ce0B-6Dd4-5bA0-A3e3fcE9cA93",\n      "quantity": {\n        "quantityNumber": 2.5,\n        "measurementUnit": "unit:litre"\n      },\n      "createdOn": "2022-02-03T14:48:54.709Z",\n      "lastModifiedOn": "2022-02-03T14:48:54.709Z"\n    }\n  ],\n  "catenaXId": "urn:uuid:055c1128-0375-47c8-98de-7cf802c3241d"\n}\n')),(0,i.kt)("h4",{id:"4-partsiteinformationasplanned"},"4. PartSiteInformationAsPlanned"),(0,i.kt)("p",null,'The aspect provides site related information for a given as planned item (i.e. a part type or part instance that is uniquely identifiable within Catena-X via its Catena-X ID). A site is a delimited geographical area where a legal entity does business. In the \\"as planned\\" lifecycle context all potentially related sites are listed including all sites where e.g. production of this part (type) is planned.'),(0,i.kt)("p",null,"Github Link to semantic data model: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.part_site_information_as_planned/1.0.0"},"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.part_site_information_as_planned/1.0.0")),(0,i.kt)("h5",{id:"example-submodel-partsiteinformationasplanned-for-a-component-that-is-produced-at-the-given-site"},"Example: Submodel ",(0,i.kt)("inlineCode",{parentName:"h5"},"PartSiteInformationAsPlanned")," for a Component that is Produced at the Given Site"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "catenaXId": "urn:uuid:580d3adf-1981-44a0-a214-13d6ceed9379",\n  "sites": [\n    {\n      "catenaXSiteId": "BPNS1234567890ZZ",\n      "functionValidUntil": "2025-11-21T11:14:30.825+01:00",\n      "function": "production",\n      "functionValidFrom": "2022-11-21T11:14:30.825+01:00"\n    }\n  ]\n}\n')),(0,i.kt)("h3",{id:"asbuilt"},"AsBuilt"),(0,i.kt)("h4",{id:"short-introduction-what-is-a-bom-asbuilt"},"Short Introduction: What is a BoM AsBuilt?"),(0,i.kt)("p",null,"A BoM AsBuilt resembles a single vehicle, which means that each vehicle built has its own individual BoM asBuilt. The BoM includes all part/components which either have a serial number, batch number, JIS number (sequence number) or a combination out of these. This means, that there is a direct and specific connection between a parent and a child part/component so that an accurate and exact traceability is possible."),(0,i.kt)("p",null,"Also, the BoM is called 100%, as there are no alternative parts included but only built parts. Therefore, it will be set up when a part is produced and can be connected to its parent and child parts."),(0,i.kt)("p",null,"In Catena-X the BoM asBuilt is used for technical topics, e.g., Quality, Battery Passport (CE)."),(0,i.kt)("h4",{id:"definition-status-of-the-bom-asbuilt"},"Definition Status of the BoM AsBuilt"),(0,i.kt)("p",null,"Defined"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Digital Twins",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Digital Twin Serialized Part"),(0,i.kt)("li",{parentName:"ul"},"Digital Twin Batch"),(0,i.kt)("li",{parentName:"ul"},"Digital Twin Vehicle"))),(0,i.kt)("li",{parentName:"ul"},"Build up the basic chain",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'Aspect model "SerialPart"'),(0,i.kt)("li",{parentName:"ul"},'Aspect model "AssemblyPartRelation"'),(0,i.kt)("li",{parentName:"ul"},'Aspect model "Batch"'),(0,i.kt)("li",{parentName:"ul"},'Aspect model "JustInSequencePart"'),(0,i.kt)("li",{parentName:"ul"},'Aspect model "TractionBatteryCode"')))),(0,i.kt)("h4",{id:"1-serialpart"},"1. SerialPart"),(0,i.kt)("p",null,"A serialized part is an instantiation of a (design-) part, where the particular instantiation can be uniquely identified by means of a serial numbers or a similar identifier (e.g. VAN) or a combination of multiple identifiers (e.g. combination of manufacturer, date and number)"),(0,i.kt)("p",null,"Github Link to semantic data model: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.serial_part/1.0.1"},"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.serial_part/1.0.1")),(0,i.kt)("h5",{id:"example-submodel-serialpart-for-a-vehicle"},"Example: Submodel ",(0,i.kt)("inlineCode",{parentName:"h5"},"SerialPart")," for a Vehicle"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "localIdentifiers": [\n    {\n      "key": "manufacturerId",\n      "value": "BPNL7588787849VQ"\n    },\n    {\n      "key": "manufacturerPartId",\n      "value": "95657362-83"\n    },\n    {\n      "key": "partInstanceId",\n      "value": "OEM-A-F8LM95T92WJ9KNDD3HA5P"\n    },\n    {\n      "key": "van",\n      "value": "OEM-A-F8LM95T92WJ9KNDD3HA5P"\n    }\n  ],\n  "manufacturingInformation": {\n    "date": "2022-02-04T14:48:54",\n    "country": "DEU"\n  },\n  "catenaXId": "urn:uuid:580d3adf-1981-44a0-a214-13d6ceed9379",\n  "partTypeInformation": {\n    "manufacturerPartID": "QX-39",\n    "classification": "product",\n    "nameAtManufacturer": "Vehicle Model A"\n  }\n}\n')),(0,i.kt)("h5",{id:"example-submodel-serialpart-for-a-serialized-part-non-vehicle"},"Example: Submodel ",(0,i.kt)("inlineCode",{parentName:"h5"},"SerialPart")," for a Serialized Part (Non-Vehicle)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "localIdentifiers": [\n    {\n      "key": "manufacturerId",\n      "value": "BPNL7588787849VQ"\n    },\n    {\n      "key": "manufacturerPartId",\n      "value": "95657362-83"\n    },\n    {\n      "key": "partInstanceId",\n      "value": "NO-574868639429552535768526"\n    }\n  ],\n  "manufacturingInformation": {\n    "date": "2022-02-04T14:48:54",\n    "country": "DEU"\n  },\n  "catenaXId": "urn:uuid:d60b99b0-f269-42f5-94d0-64fe0946ed04",\n  "partTypeInformation": {\n    "manufacturerPartID": "95657362-83",\n    "customerPartId": "798-515297795-A",\n    "classification": "component",\n    "nameAtManufacturer": "High Voltage Battery",\n    "nameAtCustomer": "High Voltage Battery"\n  }\n}\n')),(0,i.kt)("h4",{id:"2-singlelevelbomasbuilt"},"2. SingleLevelBomAsBuilt"),(0,i.kt)("p",null,"The aspect provides the child parts (one structural level down) which the given object assembles."),(0,i.kt)("p",null,"Github Link to semantic data model: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.single_level_bom_as_built/2.0.0"},"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.single_level_bom_as_built/2.0.0")),(0,i.kt)("h5",{id:"example-submodel-singlelevelbomasbuilt-for-a-serialized-part"},"Example: Submodel ",(0,i.kt)("inlineCode",{parentName:"h5"},"SingleLevelBomAsBuilt")," for a Serialized Part"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "catenaXId": "urn:uuid:580d3adf-1981-44a0-a214-13d6ceed9379",\n  "childItems": [\n    {\n      "quantity": {\n        "quantityNumber": 1.0,\n        "measurementUnit": "unit:piece"\n      },\n      "hasAlternatives": false,\n      "createdOn": "2022-02-03T14:48:54.709Z",\n      "lastModifiedOn": "2022-02-03T14:48:54.709Z",\n      "catenaXId": "urn:uuid:d60b99b0-f269-42f5-94d0-64fe0946ed04",\n      "businessPartner": "BPNL50096894aNXY"\n    }\n  ]\n}\n')),(0,i.kt)("h5",{id:"submodel-singlelevelbomasbuilt-for-a-batch"},"Submodel ",(0,i.kt)("inlineCode",{parentName:"h5"},"SingleLevelBomAsBuilt")," for a Batch"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "catenaXId": "urn:uuid:580d3adf-1981-44a0-a214-13d6ceed9379",\n  "childItems": [\n    {\n      "quantity": {\n        "quantityNumber": 25.0,\n        "measurementUnit": "unit:kilogram"\n      },\n      "hasAlternatives": false,\n      "createdOn": "2022-02-03T14:48:54.709Z",\n      "lastModifiedOn": "2022-02-03T14:48:54.709Z",\n      "catenaXId": "urn:uuid:d60b99b0-f269-42f5-94d0-64fe0946ed04",\n      "businessPartner": "BPNL50096894aNXY"\n    }\n  ]\n}\n')),(0,i.kt)("h4",{id:"3-batch"},"3. Batch"),(0,i.kt)("p",null,"A batch is a quantity of (semi-) finished products or (raw) material product that have been produced under the same circumstances (e.g. same production location), as specified groups or amounts, within a certain time frame. Every batch can differ in the number or amount of products. Different batches can have varied specifications, e.g., different colors. A batch is identified via a Batch ID."),(0,i.kt)("p",null,"Github Link to semantic data model: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.batch/2.0.0"},"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.batch/2.0.0")),(0,i.kt)("h5",{id:"example-submodel-batch-for-a-batch-of-raw-material"},"Example: Submodel ",(0,i.kt)("inlineCode",{parentName:"h5"},"Batch")," for a Batch of Raw Material"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "localIdentifiers": [\n    {\n      "value": "BID12345678",\n      "key": "batchId"\n    }\n  ],\n  "manufacturingInformation": {\n    "date": "2022-02-04T14:48:54",\n    "country": "HUR"\n  },\n  "catenaXId": "urn:uuid:580d3adf-1981-44a0-a214-13d6ceed9379",\n  "partTypeInformation": {\n    "manufacturerPartId": "123-0.740-3434-A",\n    "classification": "product",\n    "nameAtManufacturer": "PA66-GF30",\n  }\n}\n')),(0,i.kt)("h4",{id:"4-justinsequencepart"},"4. JustInSequencePart"),(0,i.kt)("p",null,"A just-in-sequence part is an instantiation of a (design-) part, where the particular instantiation can be uniquely identified by means of a combination of several IDs related to a just-in-sequence process."),(0,i.kt)("p",null,"Github Link to semantic data model: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.just_in_sequence_part/1.0.0"},"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.just_in_sequence_part/1.0.0")),(0,i.kt)("h5",{id:"example-submodel-justinsequencepart-for-a-non-serialized-component"},"Example: Submodel ",(0,i.kt)("inlineCode",{parentName:"h5"},"JustInSequencePart")," for a non-serialized component"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "localIdentifiers": [\n    {\n      "key": "manufacturerId",\n      "value": "BPNL7588787849VQ"\n    },\n    {\n      "key": "jisNumber",\n      "value": "894651684"\n    },\n    {\n      "key": "parentOrderNumber",\n      "value": "OEM-A-F8LM95T92WJ9KNDD3HA5P"\n    },\n    {\n      "key": "jisCallDate",\n      "value": "2022-01-24T09:13:34"\n    }\n  ],\n  "manufacturingInformation": {\n    "date": "2022-02-04T14:48:54",\n    "country": "DEU"\n  },\n  "catenaXId": "urn:uuid:580d3adf-1981-44a0-a214-13d6ceed9379",\n  "partTypeInformation": {\n    "manufacturerPartID": "84816168424",\n    "classification": "product",\n    "nameAtManufacturer": "Black Leather Front Row Seat for Vehicle Model B"\n  }\n}\n')),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Please note that if a just-in-sequence part is also a serialized part, SerialPart should be used instead.")),(0,i.kt)("h4",{id:"5-tractionbatterycode"},"5. TractionBatteryCode"),(0,i.kt)("p",null,"The aspect provides the information of the Traction battery code of a battery cell, a battery module or a battery pack according to the chinese standard GB/T 34014-2017. Furthermore, it provides the traction battery codes for the assembled sub parts of the component, e.g.  Traction battery code of a battery module plus all the traction battery codes of the assembled battery cells of this battery module."),(0,i.kt)("p",null,"Github Link to semantic data model: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.traction_battery_code/1.0.0"},"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.traction_battery_code/1.0.0")),(0,i.kt)("h5",{id:"example-submodel-tractionbatterycode-for-a-battery-cell"},"Example: Submodel ",(0,i.kt)("inlineCode",{parentName:"h5"},"TractionBatteryCode")," for a Battery Cell"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "productType": "cell",\n  "tractionBatteryCode": "X12CCPM27KLPCLE662382320"\n}\n')),(0,i.kt)("h5",{id:"example-submodel-tractionbatterycode-for-a-battery-module"},"Example: Submodel ",(0,i.kt)("inlineCode",{parentName:"h5"},"TractionBatteryCode")," for a Battery Module"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "productType": "module",\n  "tractionBatteryCode": "B54MCPM27KLPCLE6A7519857",\n  "subcomponents": [\n    {\n      "productType": "cell",\n      "tractionBatteryCode": "X12CCPM27KLPCLE662382320"\n    },\n    {\n      "productType": "cell",\n      "tractionBatteryCode": "X12CCPM27KLPCLE662382321"\n    }\n  ]\n}\n')),(0,i.kt)("h5",{id:"example-submodel-tractionbatterycode-for-a-battery-pack"},"Example: Submodel ",(0,i.kt)("inlineCode",{parentName:"h5"},"TractionBatteryCode")," for a Battery Pack"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "productType": "pack",\n  "tractionBatteryCode": "4A6PCPM27KLPCLE742946319",\n  "subcomponents": [\n    {\n      "productType": "module",\n      "tractionBatteryCode": "B54MCPM27KLPCLE6A7519857",\n      "subcomponents": [\n        {\n          "productType": "cell",\n          "tractionBatteryCode": "X12CCPM27KLPCLE662382320"\n        },\n        {\n          "productType": "cell",\n          "tractionBatteryCode": "X12CCPM27KLPCLE662382321"\n        }\n      ]\n    },\n    {\n      "productType": "module",\n      "tractionBatteryCode": "B54MCPM27KLPCLE6A7519858",\n      "subcomponents": [\n        {\n          "productType": "cell",\n          "tractionBatteryCode": "X12CCPM27KLPCLE662382322"\n        },\n        {\n          "productType": "cell",\n          "tractionBatteryCode": "X12CCPM27KLPCLE662382323"\n        }\n      ]\n    }\n  ]\n}\n')))}p.isMDXComponent=!0},88822:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var n=a(87462),i=(a(67294),a(3905));const r={sidebar_class_name:"hidden"},o=void 0,l={unversionedId:"kits/Traceability Kit/Software Development View/part_policies",id:"version-23.12/kits/Traceability Kit/Software Development View/part_policies",title:"part_policies",description:"\x3c!---",source:"@site/docs-kits_versioned_docs/version-23.12/kits/Traceability Kit/Software Development View/part_policies.mdx",sourceDirName:"kits/Traceability Kit/Software Development View",slug:"/kits/Traceability Kit/Software Development View/part_policies",permalink:"/docs-kits/23.12/kits/Traceability Kit/Software Development View/part_policies",draft:!1,tags:[],version:"23.12",frontMatter:{sidebar_class_name:"hidden"},sidebar:"kits",previous:{title:"part_digital-twin",permalink:"/docs-kits/23.12/kits/Traceability Kit/Software Development View/part_digital-twin"},next:{title:"part_notice",permalink:"/docs-kits/23.12/kits/Traceability Kit/part_notice"}},s={},c=[{value:"Policies",id:"policies",level:2},{value:"Access Policies",id:"access-policies",level:3},{value:"BPN Access Policy",id:"bpn-access-policy",level:4},{value:"Usage Policies",id:"usage-policies",level:3},{value:"Membership Policy",id:"membership-policy",level:4},{value:"Framework Agreement Policy",id:"framework-agreement-policy",level:4},{value:"Purpose-based Policy",id:"purpose-based-policy",level:4},{value:"Contract Definitions",id:"contract-definitions",level:3},{value:"Verifiable Credentials",id:"verifiable-credentials",level:3}],d={toc:c};function p(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"policies"},"Policies"),(0,i.kt)("h3",{id:"access-policies"},"Access Policies"),(0,i.kt)("p",null,"To enable data sovereignty, access and usage policies are important to protect the data assets of a data provider in the EDC, described in the following. Further details are described in the ",(0,i.kt)("a",{parentName:"p",href:"#standards"},"CX - 0018 Sovereign Data Exchange")," standard."),(0,i.kt)("p",null,"To decide which company has access to the data assets, access policy should be used. Note that without protecting data assets with access policies, they become publicly available in the Catena-X network which is not recommended. Therefore, every asset should be protected and only be made available for specific companies, identified through their business partner number (BPN)."),(0,i.kt)("h4",{id:"bpn-access-policy"},"BPN Access Policy"),(0,i.kt)("p",null,"This policy allows limiting access to a data offer based on a list of specific BPNs. This translates to the following functionality:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The data offer creator will be able to create a policy listing all the BPN that can access the data offer"),(0,i.kt)("li",{parentName:"ul"},"This means that only the connectors registered in the Catena-X network with the BPN listed in the policy can see the data offer and accept it (for the creation of data contracts and subsequent data exchange)")),(0,i.kt)("p",null,"Examples including a JSON payload for single and multiple BPN are described on ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-tractusx/tractusx-edc/tree/main/edc-extensions/business-partner-validation"},"this page in the tractus-x EDC repository")," or in the ",(0,i.kt)("a",{parentName:"p",href:"../tractusx-edc/edc-extensions/business-partner-validation/"},"Business Partner Validation Extension part of the Connector Kit"),"."),(0,i.kt)("h3",{id:"usage-policies"},"Usage Policies"),(0,i.kt)("p",null,"To decide which company can use the data asset under specific conditions, usage policies (or contract policies) are used. Therefore, they are more specific than access policies and only used just after access is granted. Currently, the usage policies aren't technically enforced but based on a legal framework (keep this in mind when publishing data assets)."),(0,i.kt)("p",null,"Policies are defined based on the ",(0,i.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/odrl-model/"},"W3C ODRL format"),". This allows a standardized way of formulating policy payloads. It further allows to stack different constraints with the ",(0,i.kt)("inlineCode",{parentName:"p"},"odrl:and")," operator. Therefore, every data provider can decide on his or her own under which conditions their data assets are shared in the network. It is recommended to restrict the data usage for all traceability aspects. An example of one usage policy containing three different constraints is shown and described in the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "@context": {\n    "odrl": http://www.w3.org/ns/odrl/2/\n  },\n  "@type": "PolicyDefinitionRequestDto",\n  "@id": "<POLICY-ID>", // Important for the contract definition\n  "policy": {\n    "@type": "Policy",\n    "odrl:permission": [\n      {\n        "odrl:action": "USE",\n        "odrl:constraint": {\n          "@type": "LogicalConstraint",\n          "odrl:and": [ // All of the following three constraints have to be fullfilled (and, not or)\n            // First constraint to verify the the Catena-X membership\n            {\n              "@type": "Constraint",\n              "odrl:leftOperand": "Membership",\n              "odrl:operator": {\n                "@id": "odrl:eq"\n              },\n              "odrl:rightOperand": "active"\n            },\n            // Second constraint to verify if the framework agreement for the traceability use case is accepted\n            {\n              "@type": "Constraint",\n              "odrl:leftOperand": "FrameworkAgreement.traceability",\n              "odrl:operator": {\n                "@id": "odrl:eq"\n              },\n              "odrl:rightOperand": "active"\n            },\n            // Third constraint to define the specific purpose, further detailed in the framework agreement\n            {\n              "@type": "Constraint",\n              "odrl:leftOperand": "PURPOSE",\n              "odrl:operator": {\n                "@id": "odrl:eq"\n              },\n              "odrl:rightOperand": "<POSSIBLE-PURPOSE-STRING>" // See list in the framework agreement\n            }\n          ]\n        }\n      }\n    ]\n  }\n}\n')),(0,i.kt)("h4",{id:"membership-policy"},"Membership Policy"),(0,i.kt)("p",null,"To verify the participants Catena-X membership, the ",(0,i.kt)("inlineCode",{parentName:"p"},"Membership")," verifiable credential can be used. In case of a policy, the data can only be used from verified Catena-X members. The payload is shown in the first constraint-part of the example above and described in detail in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-tractusx/ssi-docu/blob/main/docs/architecture/cx-3-2/edc/policy.definitions.md#1-membership-constraint"},"EDC part of the SSI documentation"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "@type": "Constraint",\n  "odrl:leftOperand": "Membership",\n  "odrl:operator": {\n    "@id": "odrl:eq"\n  },\n  "odrl:rightOperand": "active"\n}\n')),(0,i.kt)("h4",{id:"framework-agreement-policy"},"Framework Agreement Policy"),(0,i.kt)("p",null,"To verify if a participant accepted the framework agreement of a specific use case created by the ",(0,i.kt)("a",{parentName:"p",href:"https://catena-x.net/en/about-us/the-association"},"Catena-X association"),", the ",(0,i.kt)("inlineCode",{parentName:"p"},"FrameworkAgreement.traceability")," verifiable credential can be used for the traceability framework agreement. In case of a policy, the data can only be used from accepted and verified traceability framework agreement members. This is shown in the second constraint-part of the example above and described in detail in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-tractusx/ssi-docu/blob/main/docs/architecture/cx-3-2/edc/policy.definitions.md#35-traceability"},"EDC part of the SSI documentation"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "@type": "Constraint",\n  "odrl:leftOperand": "FrameworkAgreement.traceability",\n  "odrl:operator": {\n    "@id": "odrl:eq"\n  },\n  "odrl:rightOperand": "active"\n}\n')),(0,i.kt)("h4",{id:"purpose-based-policy"},"Purpose-based Policy"),(0,i.kt)("p",null,"To further restrict the data usage, a purpose-based policy can be used. If, for example, the purpose mentions a quality investigation, this means that the data usage is only allowed for handling and working on the quality investigation. All possible purposes and their meanings are defined in the traceability framework agreement. This allows to create a uniform understanding and a standardized set of payloads in the network by connecting technical strings to legal agreements."),(0,i.kt)("p",null,"It is highly recommended to only use this purpose-based policy together with the ",(0,i.kt)("a",{parentName:"p",href:"#framework-agreement-policy"},"Framework Agreement Policy"),". Only with both together it can be ensured that the payload of the purpose policy is agreed by the other part and is based on the same set."),(0,i.kt)("p",null,"Details about the endpoint and payload can be found in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-tractusx/tractusx-edc/blob/main/docs/samples/Transfer%20Data.md#2-setup-data-offer"},"Transfer Data sample in the tractus-x EDC repository")," or in the ",(0,i.kt)("a",{parentName:"p",href:"tractusx-edc/docs/kit/development-view/openAPI/management-api/policy-definition-api/create-policy-definition"},"Connector Kit API documentation of the policy definition API"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "@type": "Constraint",\n  "odrl:leftOperand": "PURPOSE",\n  "odrl:operator": {\n    "@id": "odrl:eq"\n  },\n  "odrl:rightOperand": "<POSSIBLE-PURPOSE-STRING>"\n}\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"<POSSIBLE-PURPOSE-STRING>")," have to be replaced with one purpose string defined in the framework agreement."),(0,i.kt)("h3",{id:"contract-definitions"},"Contract Definitions"),(0,i.kt)("p",null,"In the EDC, every policy is associated with a contract. Thus, a contract definition is needed. Details about the endpoint and payload can be found in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-tractusx/tractusx-edc/blob/main/docs/samples/Transfer%20Data.md#2-setup-data-offer"},"Transfer Data sample in the tractus-x EDC repository")," or in the ",(0,i.kt)("a",{parentName:"p",href:"../tractusx-edc/docs/kit/development-view/openAPI/management-api/contract-definition-api/edc-contract-definition-api"},"Connector Kit API documentation of the contract definition API"),"."),(0,i.kt)("p",null,"When using an above mentioned ",(0,i.kt)("a",{parentName:"p",href:"#access-policies"},"Access Policy"),", their ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," needs to be included as a value of the ",(0,i.kt)("inlineCode",{parentName:"p"},"accessPolicyId")," key in the contract definition. When using an above mentioned ",(0,i.kt)("a",{parentName:"p",href:"#usage-policies"},"Usage Policy"),", their ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," needs to be included as a value of the ",(0,i.kt)("inlineCode",{parentName:"p"},"contractPolicyId")," key in the contract definition."),(0,i.kt)("h3",{id:"verifiable-credentials"},"Verifiable Credentials"),(0,i.kt)("p",null,"Verifiable Credentials (VC) are part of the Self-Sovereign Identity (SSI) standard by the W3C. Details about Catena-X specific VCs can be found in the ",(0,i.kt)("a",{parentName:"p",href:"#standards"},"CX - 0016 Company Attribute Verification")," standard. As mentioned there, it offers a ",(0,i.kt)("inlineCode",{parentName:"p"},"UseCaseFrameworkConditionCX")," type allowing a data provider to check if specific conditions, like a signed use case contract as introduced in the ",(0,i.kt)("a",{parentName:"p",href:"#purpose-based-policy"},"Purpose-base Usage Policy section"),", are agreed. Further technical documentation are presented in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-tractusx/ssi-docu/tree/main/docs/architecture"},"SSI Docu")," repository."))}p.isMDXComponent=!0},72081:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var n=a(87462),i=(a(67294),a(3905));const r={sidebar_class_name:"hidden"},o=void 0,l={unversionedId:"kits/Traceability Kit/part_notice",id:"version-23.12/kits/Traceability Kit/part_notice",title:"part_notice",description:"\x3c!--",source:"@site/docs-kits_versioned_docs/version-23.12/kits/Traceability Kit/part_notice.mdx",sourceDirName:"kits/Traceability Kit",slug:"/kits/Traceability Kit/part_notice",permalink:"/docs-kits/23.12/kits/Traceability Kit/part_notice",draft:!1,tags:[],version:"23.12",frontMatter:{sidebar_class_name:"hidden"},sidebar:"kits",previous:{title:"part_policies",permalink:"/docs-kits/23.12/kits/Traceability Kit/Software Development View/part_policies"},next:{title:"Resiliency Domain",permalink:"/docs-kits/23.12/kits/Resiliency/"}},s={},c=[{value:"NOTICE",id:"notice",level:2}],d={toc:c};function p(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"notice"},"NOTICE"),(0,i.kt)("p",null,"This work is licensed under the ",(0,i.kt)("a",{parentName:"p",href:"https://creativecommons.org/licenses/by/4.0/legalcode"},"CC-BY-4.0"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"SPDX-License-Identifier: CC-BY-4.0"),(0,i.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 BASF SE"),(0,i.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 Bayerische Motoren Werke Aktiengesellschaft (BMW AG)"),(0,i.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e.V. (represented by Fraunhofer ISST & Fraunhofer IML)"),(0,i.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 German Edge Cloud GmbH & Co. KG"),(0,i.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 Mercedes Benz AG"),(0,i.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 Robert Bosch Manufacturing Solutions GmbH"),(0,i.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 SAP SE"),(0,i.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 Siemens AG"),(0,i.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 T-Systems International GmbH"),(0,i.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 ZF Friedrichshafen AG"),(0,i.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 Contributors to the Eclipse Foundation"),(0,i.kt)("li",{parentName:"ul"},"Source URL: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io/tree/main/docs-kits/kits/Traceability%20Kit"},"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io/tree/main/docs-kits/kits/Traceability%20Kit")," (latest version)")))}p.isMDXComponent=!0},76510:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/doc-traceability_header-minified-114fb0cc97a4825a22f0ae83af993b2a.png"}}]);