"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[92962],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>l});var s=n(96540);const i={},r=s.createContext(i);function a(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:t},e.children)}},42637:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>o,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"release/trg-5/trg-5-09","title":"TRG 5.09 - Helm test","description":"| Status     | Created     | Post-History                                    |","source":"@site/docs/release/trg-5/trg-5-09.md","sourceDirName":"release/trg-5","slug":"/release/trg-5/trg-5-09","permalink":"/docs/release/trg-5/trg-5-09","draft":false,"unlisted":false,"editUrl":"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io/tree/main/docs/release/trg-5/trg-5-09.md","tags":[],"version":"current","frontMatter":{"title":"TRG 5.09 - Helm test"},"sidebar":"docs","previous":{"title":"TRG 5.08 - Product Helm Chart","permalink":"/docs/release/trg-5/trg-5-08"},"next":{"title":"TRG 5.10 - Kubernetes versions","permalink":"/docs/release/trg-5/trg-5-10"}}');var i=n(74848),r=n(28453);const a={title:"TRG 5.09 - Helm test"},l=void 0,c={},d=[{value:"Why",id:"why",level:2},{value:"Description",id:"description",level:2}];function h(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Status"}),(0,i.jsx)(t.th,{children:"Created"}),(0,i.jsx)(t.th,{children:"Post-History"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Update"}),(0,i.jsx)(t.td,{children:"19-Jan-2024"}),(0,i.jsx)(t.td,{children:"add description for kubernetes version"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Update"}),(0,i.jsx)(t.td,{children:"05-Dec-2023"}),(0,i.jsx)(t.td,{children:"Updated example, with customizable helm version"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Update"}),(0,i.jsx)(t.td,{children:"10-Nov-2023"}),(0,i.jsx)(t.td,{children:"Bump kind version"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Active"}),(0,i.jsx)(t.td,{children:"10-Nov-2023"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Prerelease"}),(0,i.jsx)(t.td,{children:"7-Mar-2023"}),(0,i.jsx)(t.td,{children:"Moved out of draft"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Draft"}),(0,i.jsx)(t.td,{children:"23-Feb-2023"}),(0,i.jsx)(t.td,{children:"Draft release"})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"why",children:"Why"}),"\n",(0,i.jsx)(t.p,{children:"Helm charts are defined as the sane default for cloud native applications in Eclipse Tractus-X. To make sure that the aligned quality verification of applications are as close as possible to the production setup,\nit is critical that the test setup is doing what it would do on a production setup. Therefore, Helm test will provide this mechanism together with kind and allows us to run e2e verifications directly on GitHub Actions."}),"\n",(0,i.jsx)(t.p,{children:"GitHub Actions simplifies the open source infrastructure requirements as otherwise a test k8s cluster would be required, which might not be available in the long run."}),"\n",(0,i.jsx)(t.p,{children:"This is the base for future e2e tests."}),"\n",(0,i.jsx)(t.p,{children:"This also allows to move the responsibility of verifying the helm chart functionality from the system team back to the development team."}),"\n",(0,i.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(t.p,{children:"Helm charts and their dependent images (the application to test) need to be validated by installing them and verifying that they are running successfully."}),"\n",(0,i.jsx)(t.p,{children:"Helm test is the technical solution helm provides to verify that a helm chart works as expected. It basically installs the helm chart (which installs and runs the application) and then allows an additional\ncontainer to run. This test container can do everything, especially calling an api, executing tests etc."}),"\n",(0,i.jsx)(t.p,{children:"This needs to be running in a GitHub Action in the repository which contains the Helm Chart, which gets released."}),"\n",(0,i.jsx)(t.p,{children:"Example GitHub Action Workflow:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Build all necessary container images / pull the container image under test"}),"\n",(0,i.jsxs)(t.li,{children:["Create ",(0,i.jsx)(t.a,{href:"https://kind.sigs.k8s.io/",children:"kind"})," setup (kind creates a kubernetes cluster through container images, GitHub action supports this which allows you to create a kubernetes cluster inside the GitHub action run)"]}),"\n",(0,i.jsx)(t.li,{children:"Make the necessary container images available through the kind setup (see GitHub action example, it uses the local kind registry)"}),"\n",(0,i.jsx)(t.li,{children:"Prepare and execute helm test"}),"\n",(0,i.jsx)(t.li,{children:"Fail on a failing helm test"}),"\n",(0,i.jsxs)(t.li,{children:["The example also contains the upgradeability test as the last step which\nis described in more detail in ",(0,i.jsx)(t.a,{href:"/docs/release/trg-5/trg-5-11",children:"TRG 5.11"})]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Technical requirements:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"A GitHub action exist which builds or uses the helm chart which gets released"}),"\n",(0,i.jsxs)(t.li,{children:["The GitHub action can be triggered manually through GitHub WebUI ",(0,i.jsx)(t.a,{href:"https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow",children:"manually running a workflow"})]}),"\n",(0,i.jsxs)(t.li,{children:["Helm test verifies that the application is up and running","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Example verifications:","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Frontend: Frontend returns valid page"}),"\n",(0,i.jsx)(t.li,{children:"API: API is reachable and returns valid response (access denied / test user can log in)"}),"\n",(0,i.jsx)(t.li,{children:"Kubernetes versions that are supported with the helm chart are tested"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Example .github/workflows/helm-test.yaml"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"name: Lint and Test Charts\n\non:\n    pull_request:\n    workflow_dispatch:\n      inputs:\n        node_image:\n          description: 'kindest/node image for k8s kind cluster'\n          # k8s version from 3.1 release as default\n          default: 'kindest/node:v1.27.3'\n          required: false\n          type: string\n        upgrade_from:\n          description: 'chart version to upgrade from'\n          # chart version from 3.1 release as default\n          default: 'x.x.x'\n          required: false\n          type: string\n        helm_version:\n          description: 'helm version to test (default = latest)'\n          default: 'latest'\n          required: false\n          type: string\n\njobs:\n    lint-test:\n        runs-on: ubuntu-latest\n        steps:\n            - name: Checkout\n              uses: actions/checkout@v3\n              with:\n                fetch-depth: 0\n\n            - name: Kubernetes KinD Cluster\n              uses: container-tools/kind-action@v1\n              with:\n                # upgrade version, default (v0.17.0) uses node image v1.21.1 and doesn't work with more recent node image versions\n                version: v0.20.0\n                # default value for event_name != workflow_dispatch\n                node_image: ${{ github.event.inputs.node_image || 'kindest/node:v1.27.3' }}\n\n            - name: Build image\n              uses: docker/build-push-action@v3\n              with:\n                context: .\n                push: true\n                tags: kind-registry:5000/app-dashboard:testing\n\n            - name: Set up Helm\n              uses: azure/setup-helm@v3\n              with:\n                version: ${{ github.event.inputs.helm_version || 'latest' }}\n\n            - uses: actions/setup-python@v4\n              with:\n                python-version: '3.9'\n                check-latest: true\n            - name: Set up chart-testing\n              uses: helm/chart-testing-action@v2.3.1\n\n            - name: Run chart-testing (list-changed)\n              id: list-changed\n              run: |\n                changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})\n                if [[ -n \"$changed\" ]]; then\n                  echo \"changed=true\" >> $GITHUB_OUTPUT\n                fi\n\n            - name: Run chart-testing (lint)\n              run: ct lint --validate-maintainers=false --target-branch ${{ github.event.repository.default_branch }}\n            - name: Run chart-testing (install)\n              run: ct install --charts charts/app-dashboard\n              if: github.event_name != 'pull_request' || steps.list-changed.outputs.changed == 'true'\n\n              # Upgrade the released chart version with the locally available chart\n              # default value for event_name != workflow_dispatch\n            - name: Run helm upgrade\n              run: |\n                helm repo add bitnami https://charts.bitnami.com/bitnami\n                helm repo add tractusx-dev https://eclipse-tractusx.github.io/charts/dev\n                helm install [NAME] tractusx-dev/[CHART] --version ${{ github.event.inputs.upgrade_from || 'x.x.x' }}\n                helm dependency update charts/[CHART]\n                helm upgrade [NAME] charts/[CHART]\n              if: github.event_name != 'pull_request' || steps.list-changed.outputs.changed == 'true'\n"})})]})}function o(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);