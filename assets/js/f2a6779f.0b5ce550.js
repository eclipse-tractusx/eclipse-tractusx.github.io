"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[25073],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},s=Object.keys(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),p=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=p(e.components);return i.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,h=u["".concat(c,".").concat(m)]||u[m]||d[m]||s;return n?i.createElement(h,a(a({ref:t},l),{},{components:n})):i.createElement(h,a({ref:t},l))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,a=new Array(s);a[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:r,a[1]=o;for(var p=2;p<s;p++)a[p]=n[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},19135:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var i=n(87462),r=(n(67294),n(3905));const s={},a="JsonWebSignature2020",o={unversionedId:"kits/tractusx-edc/edc-extensions/ssi/jws2020-crypto-suite/README",id:"version-23.12/kits/tractusx-edc/edc-extensions/ssi/jws2020-crypto-suite/README",title:"JsonWebSignature2020",description:"This module extends the iron-verifiable-credentials library,",source:"@site/docs-kits_versioned_docs/version-23.12/kits/tractusx-edc/edc-extensions/ssi/jws2020-crypto-suite/README.md",sourceDirName:"kits/tractusx-edc/edc-extensions/ssi/jws2020-crypto-suite",slug:"/kits/tractusx-edc/edc-extensions/ssi/jws2020-crypto-suite/",permalink:"/docs-kits/23.12/kits/tractusx-edc/edc-extensions/ssi/jws2020-crypto-suite/",draft:!1,tags:[],version:"23.12",frontMatter:{},sidebar:"kits",previous:{title:"Provision: additional headers",permalink:"/docs-kits/23.12/kits/tractusx-edc/edc-extensions/provision-additional-headers/"},next:{title:"SSI Core Identity Service Module",permalink:"/docs-kits/23.12/kits/tractusx-edc/edc-extensions/ssi/ssi-identity-core/"}},c={},p=[{value:"Technical aspects",id:"technical-aspects",level:2},{value:"Sign a VC",id:"sign-a-vc",level:3},{value:"Verify a VC",id:"verify-a-vc",level:3},{value:"Limitations &amp; Known Issues",id:"limitations--known-issues",level:2}],l={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"jsonwebsignature2020"},"JsonWebSignature2020"),(0,r.kt)("p",null,"This module extends the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/filip26/iron-verifiable-credentials"},"iron-verifiable-credentials library"),",\nwhich we use in conjunction with ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/filip26/titanium-json-ld/"},"titanium-ld")," with an implementation for\nthe ",(0,r.kt)("a",{parentName:"p",href:"https://www.w3.org/community/reports/credentials/CG-FINAL-lds-jws2020-20220721"},"JsonWebSignature2020")," crypto suite."),(0,r.kt)("h2",{id:"technical-aspects"},"Technical aspects"),(0,r.kt)("p",null,"This implementation is actually mostly glue code between the ",(0,r.kt)("inlineCode",{parentName:"p"},"iron-verifiable-credentials")," lib and the\nwell-known ",(0,r.kt)("a",{parentName:"p",href:"https://connect2id.com/products/nimbus-jose-jwt"},"Nimbus JOSE lib"),", as all cryptographic primitives are taken\nfrom Nimbus."),(0,r.kt)("p",null,"VerifiableCredentials and VerifiablePresentations are processed as JSON(-LD) objects, so some familiarity with JSON-LD\nis required.\nThe entrypoint into the cryptographic suite is the ",(0,r.kt)("inlineCode",{parentName:"p"},"Vc")," class, which allows signing/issuing and verifying JSON-LD\nstructures. The following samples use explicit types for clarity. These are just some illustrative examples, please\ncheck the ",(0,r.kt)("inlineCode",{parentName:"p"},"IssuerTests")," and the ",(0,r.kt)("inlineCode",{parentName:"p"},"VerifierTests")," for more comprehensive explanations."),(0,r.kt)("h3",{id:"sign-a-vc"},"Sign a VC"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'JwsSignature2020Suite suite = new JwsSignature2020Suite(JacksonJsonLd.createObjectMapper());\nJsonObject vc = createVcAsJsonLd();\nJWK keyPair = createKeyPairAsJwk();\nJwkMethod signKeys = new JwkMethod(id,type,controller,keyPair);\n\nvar options = suite.createOptions()\n        .created(Instant.now())\n        .verificationMethod(signKeys) // embeds the proof\n        .purpose(URI.create("https://w3id.org/security#assertionMethod"));\n\nIssuer signedVc = Vc.sign(vc, signKeys, options);\n\nJsonObject compacted = IssuerCompat.compact(signedVc);\n')),(0,r.kt)("h3",{id:"verify-a-vc"},"Verify a VC"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"JwsSignature2020Suite suite = new JwsSignature2020Suite(JacksonJsonLd.createObjectMapper());\nJsonObject vc = readSignedVc();\nVerifier result = Vc.verify(vc, suite);\n\ntry {\n    result.isValid();\n} catch(VerificationError error) {\n    //handle    \n}\n")),(0,r.kt)("h2",{id:"limitations--known-issues"},"Limitations & Known Issues"),(0,r.kt)("p",null,"Java 17 ",(0,r.kt)("a",{parentName:"p",href:"https://connect2id.com/products/nimbus-jose-jwt/examples/jwt-with-es256k-signature"},"dropped support")," for\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"secp256k1")," curve. Alternatively, the BouncyCastle JCA provider could be used.\nFor this implementation, we chose to forego this at the benefit of a smaller library footprint. There is plenty of other\ncurves to choose from."),(0,r.kt)("p",null,"On a similar note, support for Octet Keypairs (",(0,r.kt)("inlineCode",{parentName:"p"},'"OKP"'),") has not yet been added to the standard Java JCA, thus an\nadditional dependency ",(0,r.kt)("inlineCode",{parentName:"p"},"tink")," is needed,\ncheck ",(0,r.kt)("a",{parentName:"p",href:"https://connect2id.com/products/nimbus-jose-jwt/examples/jwk-generation#okp"},"here")," for details. If that is not\nacceptable to you, please add a dependency exclusion to your build script."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"iron-verifiable-credentials")," is not 100% agnostic toward its crypto suites, for example there is\na ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/filip26/iron-verifiable-credentials/blob/82d13326c5f64a0f38c75d417ffc263febfd970d/src/main/java/com/apicatalog/vc/processor/Issuer.java#L122"},"hard-coded context"),"\nadded to the compacted JSON-LD, which is incorrect. It doesn't negatively impact the resulting JSON-LD, other than\npossibly affecting processing times, but unfortunately it also makes it impossible to add more contexts, such\nas ",(0,r.kt)("a",{parentName:"p",href:"https://w3id.org/security/suites/jws-2020/v1"},"https://w3id.org/security/suites/jws-2020/v1"),". We mitigated this with\nthe ",(0,r.kt)("a",{parentName:"p",href:"./src/main/java/org/eclipse/edc/security/signature/jws2020/IssuerCompat.java"},(0,r.kt)("inlineCode",{parentName:"a"},"IssuerCompat.java")),", which should be\nused\nfor compaction."))}u.isMDXComponent=!0}}]);