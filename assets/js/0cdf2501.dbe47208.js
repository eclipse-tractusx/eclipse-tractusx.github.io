"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[40349],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),u=c(n),h=i,m=u["".concat(s,".").concat(h)]||u[h]||p[h]||o;return n?a.createElement(m,l(l({ref:t},d),{},{components:n})):a.createElement(m,l({ref:t},d))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=h;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[u]="string"==typeof e?e:i,l[1]=r;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},97704:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var a=n(87462),i=(n(67294),n(3905));const o={id:"irs_admin_guide",title:"Administration Guide",description:"Administration Guide",sidebar_position:3},l=void 0,r={unversionedId:"kits/Data Chain Kit/Documentation/irs_admin_guide",id:"version-23.12/kits/Data Chain Kit/Documentation/irs_admin_guide",title:"Administration Guide",description:"Administration Guide",source:"@site/docs-kits_versioned_docs/version-23.12/kits/Data Chain Kit/Documentation/admin_guide.md",sourceDirName:"kits/Data Chain Kit/Documentation",slug:"/kits/Data Chain Kit/Documentation/irs_admin_guide",permalink:"/docs-kits/23.12/kits/Data Chain Kit/Documentation/irs_admin_guide",draft:!1,tags:[],version:"23.12",sidebarPosition:3,frontMatter:{id:"irs_admin_guide",title:"Administration Guide",description:"Administration Guide",sidebar_position:3},sidebar:"kits",previous:{title:"Circularity Dashboard Sucess Story",permalink:"/docs-kits/23.12/kits/Data Chain Kit/Success Stories/Circularity Dashboard Sucess Story"},next:{title:"Architecture documentation (arc42)",permalink:"/docs-kits/23.12/kits/Data Chain Kit/Documentation/irs_arc42"}},s={},c=[{value:"Data Chain KIT",id:"data-chain-kit",level:3},{value:"System Overview",id:"system-overview",level:2},{value:"Installation",id:"installation",level:2},{value:"Deployment using Helm",id:"deployment-using-helm",level:3},{value:"Deployment using ArgoCD",id:"deployment-using-argocd",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Spring Configuration",id:"spring-configuration",level:2},{value:"Helm configuration IRS (values.yaml)",id:"helm-configuration-irs-valuesyaml",level:3},{value:"Values explained",id:"values-explained",level:4},{value:"irs-url",id:"irs-url",level:5},{value:"digital-twin-registry-url",id:"digital-twin-registry-url",level:5},{value:"semantics-hub-url",id:"semantics-hub-url",level:5},{value:"bpdm-url",id:"bpdm-url",level:5},{value:"keycloak-token-uri",id:"keycloak-token-uri",level:5},{value:"keycloak-jwkset-uri",id:"keycloak-jwkset-uri",level:5},{value:"grafana-url",id:"grafana-url",level:5},{value:"edc-controlplane-endpoint-data",id:"edc-controlplane-endpoint-data",level:5},{value:"Semantic Model Provisioning",id:"semantic-model-provisioning",level:4},{value:"EDC consumer configuration",id:"edc-consumer-configuration",level:3},{value:"Values explained",id:"values-explained-1",level:4},{value:"controlplane-url",id:"controlplane-url",level:5},{value:"dataplane-url",id:"dataplane-url",level:5},{value:"vault-url",id:"vault-url",level:5},{value:"vault-secret-store-path",id:"vault-secret-store-path",level:5},{value:"daps-certificate-name",id:"daps-certificate-name",level:5},{value:"daps-privatekey-name",id:"daps-privatekey-name",level:5},{value:"daps-client-id",id:"daps-client-id",level:5},{value:"daps-jwks-url",id:"daps-jwks-url",level:5},{value:"daps-token-url",id:"daps-token-url",level:5},{value:"Secrets",id:"secrets",level:3},{value:"postgres-admin-password",id:"postgres-admin-password",level:4},{value:"postgres-password",id:"postgres-password",level:4},{value:"keycloak-client-id",id:"keycloak-client-id",level:4},{value:"keycloak-client-secret",id:"keycloak-client-secret",level:4},{value:"minio-username",id:"minio-username",level:4},{value:"minio-password",id:"minio-password",level:4},{value:"edc-api-key",id:"edc-api-key",level:4},{value:"vault-token",id:"vault-token",level:4},{value:"grafana-username",id:"grafana-username",level:4},{value:"grafana-password",id:"grafana-password",level:4},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Proxy support",id:"proxy-support",level:3},{value:"Troubleshooting FAQ",id:"troubleshooting-faq",level:3},{value:"Minio",id:"minio",level:4},{value:"Error: &quot;The specified bucket does not exist&quot;",id:"error-the-specified-bucket-does-not-exist",level:5},{value:"Different Job model versions maintenance",id:"different-job-model-versions-maintenance",level:4}],d={toc:c};function u(e){let{components:t,...o}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Datachain kit banner",src:n(62870).Z,width:"285",height:"244"})),(0,i.kt)("h3",{id:"data-chain-kit"},"Data Chain KIT"),(0,i.kt)("h2",{id:"system-overview"},"System Overview"),(0,i.kt)("p",null,"The deployment contains the components required to connect the IRS to an existing Catena-X network. This includes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'IRS with Minio - part of the "irs-helm" Helm chart'),(0,i.kt)("li",{parentName:"ul"},'EDC Consumer (controlplane & dataplane) - part of the "irs-edc-consumer" Helm chart')),(0,i.kt)("p",null,"Everything else needs to be provided externally."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://eclipse-tractusx.github.io/item-relationship-service/docs/assets/adminguide/adminguide_000.png",alt:"adminguide_000"})),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("p",null,"The IRS Helm repository can be found here:\n",(0,i.kt)("a",{parentName:"p",href:"https://eclipse-tractusx.github.io/item-relationship-service/index.yaml"},"https://eclipse-tractusx.github.io/item-relationship-service/index.yaml")),(0,i.kt)("p",null,'Use the latest release of the "irs-helm" chart.\nIt contains all required dependencies.'),(0,i.kt)("p",null,'If you also want to set up your own EDC consumer, use the "irs-edc-consumer" chart.'),(0,i.kt)("p",null,"Supply the required configuration properties (see chapter ",(0,i.kt)("a",{parentName:"p",href:"configuration.adoc#_configuration"},"Configuration"),") in a values.yaml file or override the settings directly."),(0,i.kt)("h3",{id:"deployment-using-helm"},"Deployment using Helm"),(0,i.kt)("p",null,"Add the IRS Helm repository:"),(0,i.kt)("p",null,"$ helm repo add irs ",(0,i.kt)("a",{parentName:"p",href:"https://eclipse-tractusx.github.io/item-relationship-service"},"https://eclipse-tractusx.github.io/item-relationship-service")),(0,i.kt)("p",null,"Then install the Helm chart into your cluster:"),(0,i.kt)("p",null,"$ helm install -f your-values.yaml irs-app irs/irs-helm"),(0,i.kt)("h3",{id:"deployment-using-argocd"},"Deployment using ArgoCD"),(0,i.kt)("p",null,"Create a new Helm chart and use the IRS as a dependency."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"dependencies:\n  - name: irs-helm\n    repository: https://eclipse-tractusx.github.io/item-relationship-service\n    version: 3.x.x\n  - name: irs-edc-consumer # optional\n    repository: https://eclipse-tractusx.github.io/item-relationship-service\n    version: 1.x.x\n\n")),(0,i.kt)("p",null,"Then provide your configuration as the values.yaml of that chart."),(0,i.kt)("p",null,"Create a new application in ArgoCD and point it to your repository / Helm chart folder."),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"Take the following template and adjust the configuration parameters (","<","placeholders> mark the relevant spots).\nYou can define the URLs as well as most of the secrets yourself."),(0,i.kt)("p",null,"The Keycloak, DAPS and Vault configuration / secrets depend on your setup and might need to be provided externally."),(0,i.kt)("h2",{id:"spring-configuration"},"Spring Configuration"),(0,i.kt)("p",null,"The IRS application is configured using the Spring configuration mechanism. The main configuration file is the ",(0,i.kt)("inlineCode",{parentName:"p"},"application.yaml"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'server:\n  port: 8080 # The port the main application API listens on\n  trustedPort: ${SERVER_TRUSTED_PORT:} # The port used for the unsecured, internal API - if empty, the main port is used\n\nspring:\n  application:\n    name: item-relationship-service\n  security:\n    oauth2:\n      client:\n        registration:\n          keycloak:\n            authorization-grant-type: client_credentials\n            client-id: ${KEYCLOAK_OAUTH2_CLIENT_ID} # OAuth2 client ID used to authenticate with the IAM\n            client-secret: ${KEYCLOAK_OAUTH2_CLIENT_SECRET} # OAuth2 client secret used to authenticate with the IAM\n        provider:\n          keycloak:\n            token-uri: ${KEYCLOAK_OAUTH2_CLIENT_TOKEN_URI:https://default} # OAuth2 endpoint to request tokens using the client credentials\n      resourceserver:\n        jwt:\n          jwk-set-uri: ${KEYCLOAK_OAUTH2_JWK_SET_URI:https://default} # OAuth2 endpoint to request the JWK set\n\nmanagement: # Spring management API config, see https://spring.io/guides/gs/centralized-configuration/\n  endpoints:\n    web:\n      exposure:\n        include: health, threaddump, loggers, prometheus, info, metrics\n  endpoint:\n    health:\n      probes:\n        enabled: true\n      group:\n        readiness:\n          include: readinessState, diskSpace\n      show-details: always\n  health:\n    livenessstate:\n      enabled: true\n    readinessstate:\n      enabled: true\n  metrics:\n    distribution:\n      percentiles-histogram:\n        http: true\n    tags:\n      application: ${spring.application.name}\n  server:\n    port: 4004\n\nlogging:\n  pattern:\n    console: "%d %-5level %logger : %msg%n"\n  level:\n    root: WARN\n    org.springframework: INFO\n    org.eclipse.tractusx.irs: INFO\n\nspringdoc: # API docs configuration\n  api-docs:\n    path: /api/api-docs\n  swagger-ui:\n    path: /api/swagger-ui\n  writer-with-order-by-keys: true\n\nirs: # Application config\n  apiUrl: "${IRS_API_URL:http://localhost:8080}" # Public URL of the application, used in Swagger UI\n  job:\n    callback:\n      timeout:\n        read: PT90S # HTTP read timeout for the Job API callback\n        connect: PT90S # HTTP connect timeout for the Job API callback\n    cleanup: # Determines how often the JobStore is being cleaned up. Different schedulers for completed and failed jobs.\n      scheduler:\n        #          \xe2\u201d\u0152\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac second (0-59)\n        #          \xe2\u201d\u201a \xe2\u201d\u0152\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac minute (0 - 59)\n        #          \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u0152\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac hour (0 - 23)\n        #          \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u0152\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac day of the month (1 - 31)\n        #          \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u0152\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac month (1 - 12) (or JAN-DEC)\n        #          \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u0152\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac day of the week (0 - 7)\n        #          \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u201a          (or MON-SUN -- 0 or 7 is Sunday)\n        #          \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u201a\n        completed: 0 0 * * * * # every hour\n        failed: 0 0 * * * * # every hour\n    jobstore:\n      ttl: # Determines how long jobs are stored in the respective state. After the TTL has expired, the job will be removed by the cleanup scheduler.\n        failed: P7D # ISO 8601 Duration\n        completed: P7D # ISO 8601 Duration\n      cron:\n        expression: "*/10 * * * * ?" # Determines how often the number of stored jobs is updated in the metrics API.\n\nblobstore:\n  endpoint: "${MINIO_URL}" # S3 compatible API endpoint (e.g. Minio)\n  accessKey: "${MINIO_ACCESS_KEY}" # S3 access key\n  secretKey: "${MINIO_SECRET_KEY}" # S3 secret key\n  bucketName: irsbucket # the name of the S3 bucket to be created / used by the IRS\n\nresilience4j:\n  retry: # REST client retry configuration\n    configs:\n      default:\n        maxAttempts: 3 # How often failed REST requests will be retried\n        waitDuration: 10s # How long to wait between each retry\n        enableExponentialBackoff: true # Whether subsequent retries will delay exponentially or not\n        exponentialBackoffMultiplier: 2 # Multiplier for the exponential delay\n        ignore-exceptions: # Do not retry on the listed exceptions\n          - org.springframework.web.client.HttpClientErrorException.NotFound\n    instances:\n      registry:\n        baseConfig: default\n\n\nedc:\n  controlplane:\n    request-ttl: ${EDC_CONTROLPLANE_REQUEST_TTL:PT10M} # How long to wait for an async EDC negotiation request to finish, ISO 8601 Duration\n    endpoint:\n      data: ${EDC_CONTROLPLANE_ENDPOINT_DATA:} # URL of the EDC consumer controlplane data endpoint\n    provider-suffix: ${EDC_CONTROLPLANE_PROVIDER_SUFFIX:/api/v1/ids/data} # Suffix to add to data requests to the EDC provider controlplane\n    catalog-limit: ${EDC_CONTROLPLANE_CATALOG_LIMIT:1000} # Max number of items to fetch from the EDC provider catalog\n    catalog-page-size: ${EDC_CONTROLPLANE_CATALOG_PAGE_SIZE:50} # Number of items to fetch at one page from the EDC provider catalog when using pagination\n    api-key:\n      header: ${EDC_API_KEY_HEADER:} # API header key to use in communication with the EDC consumer controlplane\n      secret: ${EDC_API_KEY_SECRET:} # API header secret to use in communication with the EDC consumer controlplane\n    datareference:\n      storage:\n        duration: PT1H # Time after which stored data references will be cleaned up, ISO 8601 Duration\n\n  submodel:\n    request-ttl: ${EDC_SUBMODEL_REQUEST_TTL:PT10M} # How long to wait for an async EDC submodel retrieval to finish, ISO 8601 Duration\n    path: ${EDC_SUBMODEL_PATH:/submodel} # The path to append to the submodel data reference endpoint\n    urn-prefix: ${EDC_SUBMODEL_URN_PREFIX:/urn} # A prefix used to identify URNs correctly in the submodel endpoint address\n    timeout:\n      read: PT90S # HTTP read timeout for the submodel client\n      connect: PT90S # HTTP connect timeout for the submodel client\n\n  catalog:\n    cache:\n      enabled: true # Set to false to disable caching\n      ttl: P1D # Time after which a cached Item is no longer valid and the real catalog is called instead\n      maxCachedItems: 64000 # Maximum amount of cached catalog items\n\ndigitalTwinRegistry:\n  descriptorEndpoint: ${DIGITALTWINREGISTRY_DESCRIPTOR_URL:} # The endpoint to retrieve AAS descriptors from the DTR, must contain the placeholder {aasIdentifier}\n  shellLookupEndpoint: ${DIGITALTWINREGISTRY_SHELL_LOOKUP_URL:} # The endpoint to lookup shells from the DTR, must contain the placeholder {assetIds}\n  oAuthClientId: keycloak # ID of the OAuth2 client registration to use, see config spring.security.oauth2.client\n  timeout:\n    read: PT90S # HTTP read timeout for the digital twin registry client\n    connect: PT90S # HTTP connect timeout for the digital twin registry client\n\nsemanticshub:\n  # The endpoint to retrieve the json schema of a model from the semantic hub. If specified, must contain the placeholder {urn}.\n  modelJsonSchemaEndpoint: "${SEMANTICSHUB_URL:}"\n  url: ""\n\n  # Path to directory on filesystem where semantic models can be loaded from.\n  # The filenames inside the directory must match the Base64 encoded URNs of the models.\n  localModelDirectory: ""\n  cleanup:\n    #          \xe2\u201d\u0152\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac second (0-59)\n    #          \xe2\u201d\u201a \xe2\u201d\u0152\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac minute (0 - 59)\n    #          \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u0152\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac hour (0 - 23)\n    #          \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u201a  \xe2\u201d\u0152\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac day of the month (1 - 31)\n    #          \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u201a  \xe2\u201d\u201a \xe2\u201d\u0152\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac month (1 - 12) (or JAN-DEC)\n    #          \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u201a  \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u0152\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac\xe2\u201d\u20ac day of the week (0 - 7)\n    #          \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u201a  \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u201a          (or MON-SUN -- 0 or 7 is Sunday)\n    #          \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u201a  \xe2\u201d\u201a \xe2\u201d\u201a \xe2\u201d\u201a\n    scheduler: 0 0 23 * * * # How often to clear the semantic model cache\n  defaultUrns: "${SEMANTICSHUB_DEFAULT_URNS:urn:bamm:io.catenax.serial_part_typization:1.0.0#SerialPartTypization}" # IDs of models to cache at IRS startup\n  oAuthClientId: keycloak # ID of the OAuth2 client registration to use, see config spring.security.oauth2.client\n  timeout:\n    read: PT90S # HTTP read timeout for the semantic hub client\n    connect: PT90S # HTTP connect timeout for the semantic hub client\n  pageSize: "${SEMANTICSHUB_PAGE_SIZE:100}"\n\nbpdm:\n  bpnEndpoint: "${BPDM_URL:}" # Endpoint to resolve BPNs, must contain the placeholders {partnerId} and {idType}\n  oAuthClientId: keycloak # ID of the OAuth2 client registration to use, see config spring.security.oauth2.client\n  timeout:\n    read: PT90S # HTTP read timeout for the bpdm client\n    connect: PT90S # HTTP connect timeout for the bpdm client\n\napiAllowedBpn: ${API_ALLOWED_BPN:BPNL00000003CRHK}\n')),(0,i.kt)("h3",{id:"helm-configuration-irs-valuesyaml"},"Helm configuration IRS (values.yaml)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'          labelSelector:\n            matchExpressions:\n              - key: app.kubernetes.io/name\n                operator: DoesNotExist\n          topologyKey: kubernetes.io/hostname\n\n# Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm\n# @url: https://github.com/helm/charts/blob/master/stable/nginx-ingress/values.yaml#L210\nlivenessProbe:\n  failureThreshold: 6\n  initialDelaySeconds: 30\n  periodSeconds: 10\n  successThreshold: 1\n  timeoutSeconds: 1\nreadinessProbe:\n  failureThreshold: 3\n  initialDelaySeconds: 30\n  periodSeconds: 10\n  successThreshold: 1\n  timeoutSeconds: 1\n\n#####################\n# IRS Configuration #\n#####################\nirsUrl:  # "https://<irs-url>"\ningress:\n  enabled: false\n\ndigitalTwinRegistry:\n  url:  # "https://<digital-twin-registry-url>"\n  descriptorEndpoint: >-\n    {{ tpl (.Values.digitalTwinRegistry.url | default "") . }}/registry/shell-descriptors/{aasIdentifier}\n  shellLookupEndpoint: >-\n    {{ tpl (.Values.digitalTwinRegistry.url | default "") . }}/lookup/shells?assetIds={assetIds}\nsemanticshub:\n  url:  # https://<semantics-hub-url>\n  pageSize: "100"  # Number of aspect models to retrieve per page\n  modelJsonSchemaEndpoint: >-\n    {{- if .Values.semanticshub.url }}\n    {{- tpl (.Values.semanticshub.url | default "" ) . }}/{urn}/json-schema\n    {{- end }}\n  defaultUrns: >-\n  #    urn:bamm:io.catenax.serial_part_typization:1.0.0#SerialPartTypization\n  #    ,urn:bamm:com.catenax.assembly_part_relationship:1.0.0#AssemblyPartRelationship\n  localModels:\n#   Map of Base64 encoded strings of semantic models. The key must be the Base64 encoded full URN of the model.\n#   Example for urn:bamm:io.catenax.serial_part_typization:1.1.1#SerialPartTypization:\n#    dXJuOmJhbW06aW8uY2F0ZW5heC5zZXJpYWxfcGFydF90eXBpemF0aW9uOjEuMS4xI1NlcmlhbFBhcnRUeXBpemF0aW9u: ewoJIiRzY2hlbWEiOiAiaHR0cDovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC0wNC9zY2hlbWEiLAoJInR5cGUiOiAib2JqZWN0IiwKCSJjb21wb25lbnRzIjogewoJCSJzY2hlbWFzIjogewoJCQkidXJuX2JhbW1faW8uY2F0ZW5heC5zZXJpYWxfcGFydF90eXBpemF0aW9uXzEuMS4xX0NhdGVuYVhJZFRyYWl0IjogewoJCQkJInR5cGUiOiAic3RyaW5nIiwKCQkJCSJwYXR0ZXJuIjogIiheWzAtOWEtZkEtRl17OH0tWzAtOWEtZkEtRl17NH0tWzAtOWEtZkEtRl17NH0tWzAtOWEtZkEtRl17NH0tWzAtOWEtZkEtRl17MTJ9JCl8KF51cm46dXVpZDpbMC05YS1mQS1GXXs4fS1bMC05YS1mQS1GXXs0fS1bMC05YS1mQS1GXXs0fS1bMC05YS1mQS1GXXs0fS1bMC05YS1mQS1GXXsxMn0kKSIKCQkJfSwKCQkJInVybl9iYW1tX2lvLmNhdGVuYXguc2VyaWFsX3BhcnRfdHlwaXphdGlvbl8xLjEuMV9LZXlDaGFyYWN0ZXJpc3RpYyI6IHsKCQkJCSJ0eXBlIjogInN0cmluZyIKCQkJfSwKCQkJInVybl9iYW1tX2lvLmNhdGVuYXguc2VyaWFsX3BhcnRfdHlwaXphdGlvbl8xLjEuMV9WYWx1ZUNoYXJhY3RlcmlzdGljIjogewoJCQkJInR5cGUiOiAic3RyaW5nIgoJCQl9LAoJCQkidXJuX2JhbW1faW8uY2F0ZW5heC5zZXJpYWxfcGFydF90eXBpemF0aW9uXzEuMS4xX0tleVZhbHVlTGlzdCI6IHsKCQkJCSJ0eXBlIjogIm9iamVjdCIsCgkJCQkicHJvcGVydGllcyI6IHsKCQkJCQkia2V5IjogewoJCQkJCQkiJHJlZiI6ICIjL2NvbXBvbmVudHMvc2NoZW1hcy91cm5fYmFtbV9pby5jYXRlbmF4LnNlcmlhbF9wYXJ0X3R5cGl6YXRpb25fMS4xLjFfS2V5Q2hhcmFjdGVyaXN0aWMiCgkJCQkJfSwKCQkJCQkidmFsdWUiOiB7CgkJCQkJCSIkcmVmIjogIiMvY29tcG9uZW50cy9zY2hlbWFzL3Vybl9iYW1tX2lvLmNhdGVuYXguc2VyaWFsX3BhcnRfdHlwaXphdGlvbl8xLjEuMV9WYWx1ZUNoYXJhY3RlcmlzdGljIgoJCQkJCX0KCQkJCX0sCgkJCQkicmVxdWlyZWQiOiBbCgkJCQkJImtleSIsCgkJCQkJInZhbHVlIgoJCQkJXQoJCQl9LAoJCQkidXJuX2JhbW1faW8uY2F0ZW5heC5zZXJpYWxfcGFydF90eXBpemF0aW9uXzEuMS4xX0xvY2FsSWRlbnRpZmllckNoYXJhY3RlcmlzdGljIjogewoJCQkJInR5cGUiOiAiYXJyYXkiLAoJCQkJIml0ZW1zIjogewoJCQkJCSIkcmVmIjogIiMvY29tcG9uZW50cy9zY2hlbWFzL3Vybl9iYW1tX2lvLmNhdGVuYXguc2VyaWFsX3BhcnRfdHlwaXphdGlvbl8xLjEuMV9LZXlWYWx1ZUxpc3QiCgkJCQl9LAoJCQkJInVuaXF1ZUl0ZW1zIjogdHJ1ZQoJCQl9LAoJCQkidXJuX2JhbW1faW8ub3Blbm1hbnVmYWN0dXJpbmdfY2hhcmFjdGVyaXN0aWNfMi4wLjBfVGltZXN0YW1wIjogewoJCQkJInR5cGUiOiAic3RyaW5nIiwKCQkJCSJwYXR0ZXJuIjogIi0/KFsxLTldWzAtOV17Myx9fDBbMC05XXszfSktKDBbMS05XXwxWzAtMl0pLSgwWzEtOV18WzEyXVswLTldfDNbMDFdKVQoKFswMV1bMC05XXwyWzAtM10pOlswLTVdWzAtOV06WzAtNV1bMC05XShcXC5bMC05XSspP3woMjQ6MDA6MDAoXFwuMCspPykpKFp8KFxcK3wtKSgoMFswLTldfDFbMC0zXSk6WzAtNV1bMC05XXwxNDowMCkpPyIKCQkJfSwKCQkJInVybl9iYW1tX2lvLmNhdGVuYXguc2VyaWFsX3BhcnRfdHlwaXphdGlvbl8xLjEuMV9Qcm9kdWN0aW9uQ291bnRyeUNvZGVUcmFpdCI6IHsKCQkJCSJ0eXBlIjogInN0cmluZyIsCgkJCQkicGF0dGVybiI6ICJeW0EtWl1bQS1aXVtBLVpdJCIKCQkJfSwKCQkJInVybl9iYW1tX2lvLmNhdGVuYXguc2VyaWFsX3BhcnRfdHlwaXphdGlvbl8xLjEuMV9NYW51ZmFjdHVyaW5nQ2hhcmFjdGVyaXN0aWMiOiB7CgkJCQkidHlwZSI6ICJvYmplY3QiLAoJCQkJInByb3BlcnRpZXMiOiB7CgkJCQkJImRhdGUiOiB7CgkJCQkJCSIkcmVmIjogIiMvY29tcG9uZW50cy9zY2hlbWFzL3Vybl9iYW1tX2lvLm9wZW5tYW51ZmFjdHVyaW5nX2NoYXJhY3RlcmlzdGljXzIuMC4wX1RpbWVzdGFtcCIKCQkJCQl9LAoJCQkJCSJjb3VudHJ5IjogewoJCQkJCQkiJHJlZiI6ICIjL2NvbXBvbmVudHMvc2NoZW1hcy91cm5fYmFtbV9pby5jYXRlbmF4LnNlcmlhbF9wYXJ0X3R5cGl6YXRpb25fMS4xLjFfUHJvZHVjdGlvbkNvdW50cnlDb2RlVHJhaXQiCgkJCQkJfQoJCQkJfSwKCQkJCSJyZXF1aXJlZCI6IFsKCQkJCQkiZGF0ZSIKCQkJCV0KCQkJfSwKCQkJInVybl9iYW1tX2lvLmNhdGVuYXguc2VyaWFsX3BhcnRfdHlwaXphdGlvbl8xLjEuMV9QYXJ0SWRDaGFyYWN0ZXJpc3RpYyI6IHsKCQkJCSJ0eXBlIjogInN0cmluZyIKCQkJfSwKCQkJInVybl9iYW1tX2lvLmNhdGVuYXguc2VyaWFsX3BhcnRfdHlwaXphdGlvbl8xLjEuMV9QYXJ0TmFtZUNoYXJhY3RlcmlzdGljIjogewoJCQkJInR5cGUiOiAic3RyaW5nIgoJCQl9LAoJCQkidXJuX2JhbW1faW8uY2F0ZW5heC5zZXJpYWxfcGFydF90eXBpemF0aW9uXzEuMS4xX0NsYXNzaWZpY2F0aW9uQ2hhcmFjdGVyaXN0aWMiOiB7CgkJCQkidHlwZSI6ICJzdHJpbmciLAoJCQkJImVudW0iOiBbCgkJCQkJInByb2R1Y3QiLAoJCQkJCSJyYXcgbWF0ZXJpYWwiLAoJCQkJCSJzb2Z0d2FyZSIsCgkJCQkJImFzc2VtYmx5IiwKCQkJCQkidG9vbCIsCgkJCQkJImNvbXBvbmVudCIKCQkJCV0KCQkJfSwKCQkJInVybl9iYW1tX2lvLmNhdGVuYXguc2VyaWFsX3BhcnRfdHlwaXphdGlvbl8xLjEuMV9QYXJ0VHlwZUluZm9ybWF0aW9uQ2hhcmFjdGVyaXN0aWMiOiB7CgkJCQkidHlwZSI6ICJvYmplY3QiLAoJCQkJInByb3BlcnRpZXMiOiB7CgkJCQkJIm1hbnVmYWN0dXJlclBhcnRJZCI6IHsKCQkJCQkJIiRyZWYiOiAiIy9jb21wb25lbnRzL3NjaGVtYXMvdXJuX2JhbW1faW8uY2F0ZW5heC5zZXJpYWxfcGFydF90eXBpemF0aW9uXzEuMS4xX1BhcnRJZENoYXJhY3RlcmlzdGljIgoJCQkJCX0sCgkJCQkJImN1c3RvbWVyUGFydElkIjogewoJCQkJCQkiJHJlZiI6ICIjL2NvbXBvbmVudHMvc2NoZW1hcy91cm5fYmFtbV9pby5jYXRlbmF4LnNlcmlhbF9wYXJ0X3R5cGl6YXRpb25fMS4xLjFfUGFydElkQ2hhcmFjdGVyaXN0aWMiCgkJCQkJfSwKCQkJCQkibmFtZUF0TWFudWZhY3R1cmVyIjogewoJCQkJCQkiJHJlZiI6ICIjL2NvbXBvbmVudHMvc2NoZW1hcy91cm5fYmFtbV9pby5jYXRlbmF4LnNlcmlhbF9wYXJ0X3R5cGl6YXRpb25fMS4xLjFfUGFydE5hbWVDaGFyYWN0ZXJpc3RpYyIKCQkJCQl9LAoJCQkJCSJuYW1lQXRDdXN0b21lciI6IHsKCQkJCQkJIiRyZWYiOiAiIy9jb21wb25lbnRzL3NjaGVtYXMvdXJuX2JhbW1faW8uY2F0ZW5heC5zZXJpYWxfcGFydF90eXBpemF0aW9uXzEuMS4xX1BhcnROYW1lQ2hhcmFjdGVyaXN0aWMiCgkJCQkJfSwKCQkJCQkiY2xhc3NpZmljYXRpb24iOiB7CgkJCQkJCSIkcmVmIjogIiMvY29tcG9uZW50cy9zY2hlbWFzL3Vybl9iYW1tX2lvLmNhdGVuYXguc2VyaWFsX3BhcnRfdHlwaXphdGlvbl8xLjEuMV9DbGFzc2lmaWNhdGlvbkNoYXJhY3RlcmlzdGljIgoJCQkJCX0KCQkJCX0sCgkJCQkicmVxdWlyZWQiOiBbCgkJCQkJIm1hbnVmYWN0dXJlclBhcnRJZCIsCgkJCQkJIm5hbWVBdE1hbnVmYWN0dXJlciIsCgkJCQkJImNsYXNzaWZpY2F0aW9uIgoJCQkJXQoJCQl9CgkJfQoJfSwKCSJwcm9wZXJ0aWVzIjogewoJCSJjYXRlbmFYSWQiOiB7CgkJCSIkcmVmIjogIiMvY29tcG9uZW50cy9zY2hlbWFzL3Vybl9iYW1tX2lvLmNhdGVuYXguc2VyaWFsX3BhcnRfdHlwaXphdGlvbl8xLjEuMV9DYXRlbmFYSWRUcmFpdCIKCQl9LAoJCSJsb2NhbElkZW50aWZpZXJzIjogewoJCQkiJHJlZiI6ICIjL2NvbXBvbmVudHMvc2NoZW1hcy91cm5fYmFtbV9pby5jYXRlbmF4LnNlcmlhbF9wYXJ0X3R5cGl6YXRpb25fMS4xLjFfTG9jYWxJZGVudGlmaWVyQ2hhcmFjdGVyaXN0aWMiCgkJfSwKCQkibWFudWZhY3R1cmluZ0luZm9ybWF0aW9uIjogewoJCQkiJHJlZiI6ICIjL2NvbXBvbmVudHMvc2NoZW1hcy91cm5fYmFtbV9pby5jYXRlbmF4LnNlcmlhbF9wYXJ0X3R5cGl6YXRpb25fMS4xLjFfTWFudWZhY3R1cmluZ0NoYXJhY3RlcmlzdGljIgoJCX0sCgkJInBhcnRUeXBlSW5mb3JtYXRpb24iOiB7CgkJCSIkcmVmIjogIiMvY29tcG9uZW50cy9zY2hlbWFzL3Vybl9iYW1tX2lvLmNhdGVuYXguc2VyaWFsX3BhcnRfdHlwaXphdGlvbl8xLjEuMV9QYXJ0VHlwZUluZm9ybWF0aW9uQ2hhcmFjdGVyaXN0aWMiCgkJfQoJfSwKCSJyZXF1aXJlZCI6IFsKCQkiY2F0ZW5hWElkIiwKCQkibG9jYWxJZGVudGlmaWVycyIsCgkJIm1hbnVmYWN0dXJpbmdJbmZvcm1hdGlvbiIsCgkJInBhcnRUeXBlSW5mb3JtYXRpb24iCgldCn0=\nbpdm:\n  url:  # https://<bpdm-url>\n  bpnEndpoint: >-\n    {{ tpl (.Values.bpdm.url | default "") . }}/api/catena/legal-entities/{partnerId}?idType={idType}\nminioUser: "minio"  # <minio-username>\nminioPassword:  # <minio-password>\nminioUrl: "http://{{ .Release.Name }}-minio:9000"\nkeycloak:\n  oauth2:\n    clientId:  # <keycloak-client-id>\n    clientSecret:  # <keycloak-client-secret>\n    clientTokenUri:  # <keycloak-token-uri>\n    jwkSetUri:  # <keycloak-jwkset-uri>\nedc:\n  controlplane:\n    endpoint:\n      data: ""  # <edc-controlplane-endpoint-data>\n    request:\n      ttl: PT10M  # Requests to controlplane will time out after this duration (see https://en.wikipedia.org/wiki/ISO_8601#Durations)\n    provider:\n      suffix: /api/v1/ids/data\n    catalog:\n      limit: 1000  # Max number of catalog items to retrieve from the controlplane\n      pagesize: 50  # Number of catalog items to retrieve on one page for pagination\n    apikey:\n      header: "X-Api-Key"  # Name of the EDC api key header field\n      secret: ""  # <edc-api-key>\n  submodel:\n    request:\n      ttl: PT10M  # Requests to dataplane will time out after this duration (see https://en.wikipedia.org/wiki/ISO_8601#Durations)\n    path: /submodel\n    urnprefix: /urn\n  catalog:\n    cache:\n      enabled: true  # Set to false to disable caching\n      ttl: P1D  # Time after which a cached Item is no longer valid and the real catalog is called instead\n      maxCachedItems: 64000  # Maximum amount of cached catalog items\n\nconfig:\n  # If true, the config provided below will completely replace the configmap.\n  # In this case, you need to provide all required config values defined above yourself!\n  # If false, the custom config will just be appended to the configmap.\n  override: false\n  # Provide your custom configuration here (overrides IRS Spring application.yaml)\n  content:\n\n\nenv: []  # You can provide your own environment variables for the IRS here.\n#  - name: JAVA_TOOL_OPTIONS\n#    value: -Dhttps.proxyHost=1.2.3.4\n\n\n#######################\n# Minio Configuration #\n#######################\nminio:\n  enabled: true\n  mode: standalone\n  persistence:\n    size: 1Gi\n  resources:\n    limits:\n      cpu: 1\n      memory: 4Gi\n    requests:\n      cpu: 0.25\n      memory: 4Gi\n  rootUser: "minio"  # <minio-username>\n  rootPassword: "minioPass"  # <minio-password>\n\n  environment:\n    MINIO_PROMETHEUS_JOB_ID: minio-actuator\n    MINIO_PROMETHEUS_URL: http://prometheus:9090\n\n\n############################\n# Prometheus Configuration #\n############################\nprometheus:\n  enabled: false  # \xe2\u2018 \n  rbac:\n    create: false\n  alertmanager:\n    enabled: false\n  prometheus-node-exporter:\n    enabled: false\n  kubeStateMetrics:\n    enabled: false\n  prometheus-pushgateway:\n    enabled: false\n  configmapReload:\n    prometheus:\n      enabled: false\n\n  extraScrapeConfigs: |\n    - job_name: \'spring-actuator\'\n      metrics_path: \'/actuator/prometheus\'\n      scrape_interval: 5s\n      static_configs:\n        - targets: [ \'{{ .Release.Name }}-irs-helm:4004\' ]\n\n    - job_name: \'minio-actuator\'\n      metrics_path: /minio/v2/metrics/cluster\n      static_configs:\n        - targets: [ \'{{ .Release.Name }}-minio:9000\' ]\n\n\n#########################\n# Grafana Configuration #\n#########################\ngrafana:\n  enabled: false  # \xe2\u2018 \n  rbac:\n    create: false\n  persistence:\n    enabled: false\n\n  user:  # <grafana-username>\n')),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Use this to enable or disable the monitoring components")),(0,i.kt)("h4",{id:"values-explained"},"Values explained"),(0,i.kt)("h5",{id:"irs-url"},"irs-url"),(0,i.kt)("p",null,"The hostname where the IRS will be made available."),(0,i.kt)("h5",{id:"digital-twin-registry-url"},"digital-twin-registry-url"),(0,i.kt)("p",null,"The URL of the Digital Twin Registry. The IRS uses this service to fetch AAS shells."),(0,i.kt)("h5",{id:"semantics-hub-url"},"semantics-hub-url"),(0,i.kt)("p",null,"The URL of the SemanticsHub. The IRS uses this service to fetch aspect schemas for payload validation."),(0,i.kt)("h5",{id:"bpdm-url"},"bpdm-url"),(0,i.kt)("p",null,"The URL of the BPDM service. The IRS uses this service to fetch business partner information based on BPNs."),(0,i.kt)("h5",{id:"keycloak-token-uri"},"keycloak-token-uri"),(0,i.kt)("p",null,"The URL of the Keycloak token API. Used by the IRS for token creation to authenticate with other services."),(0,i.kt)("h5",{id:"keycloak-jwkset-uri"},"keycloak-jwkset-uri"),(0,i.kt)("p",null,"The URL of the Keycloak JWK Set. Used by the IRS to validate tokens when the IRS API is called."),(0,i.kt)("h5",{id:"grafana-url"},"grafana-url"),(0,i.kt)("p",null,"The hostname where Grafana will be made available."),(0,i.kt)("h5",{id:"edc-controlplane-endpoint-data"},"edc-controlplane-endpoint-data"),(0,i.kt)("p",null,"The EDC consumer controlplane endpoint URL for data management, including the protocol.\nIf left empty, this defaults to the internal endpoint of the controlplane provided by the irs-edc-consumer Helm chart."),(0,i.kt)("h4",{id:"semantic-model-provisioning"},"Semantic Model Provisioning"),(0,i.kt)("p",null,"The IRS can retrieve semantic models in two ways:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"via the Semantic Hub, if you provide the URL"),(0,i.kt)("li",{parentName:"ol"},"via local schema files")),(0,i.kt)("p",null,"If you activate both features, IRS will first try to resolve the models via the Hub and use the\nlocal models as a fallback."),(0,i.kt)("p",null,"If you want to use local schema files, you need to provide them directly in the ",(0,i.kt)("inlineCode",{parentName:"p"},"values.yaml")," file. Use the param ",(0,i.kt)("inlineCode",{parentName:"p"},"semanticsHub.localModels")," to specify a map of all the local schemas.\nThe ",(0,i.kt)("strong",{parentName:"p"},"key")," of each entry is the ",(0,i.kt)("inlineCode",{parentName:"p"},"Base64")," encoded URN of the model. The ",(0,i.kt)("strong",{parentName:"p"},"value")," is the ",(0,i.kt)("inlineCode",{parentName:"p"},"Base64")," encoded content of the schema file itself. The entries will then be mounted into the IRS container and used on demand. For reference, see the example comment in the default ",(0,i.kt)("inlineCode",{parentName:"p"},"values.yaml"),"."),(0,i.kt)("h3",{id:"edc-consumer-configuration"},"EDC consumer configuration"),(0,i.kt)("p",null,"If you want to provide your own EDC consumer, add the following entries to your values.yaml:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'##############################\n# EDC Postgres Configuration #\n##############################\npostgresql:\n  auth:\n    username: edc\n    database: edc\n    postgresPassword: <postgres-admin-password>\n    password: <postgres-password>\n\n##################################\n# EDC Controlplane Configuration #\n##################################\nedc-controlplane:\n  ingresses:\n    - enabled: true\n      hostname: "<controlplane-url>"\n      annotations:\n        nginx.ingress.kubernetes.io/ssl-passthrough: "false"\n        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"\n        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"\n      endpoints:\n        - protocol\n      className: ""\n      tls:\n        - hosts:\n            - "<controlplane-url>"\n          secretName: tls-secret\n      certManager:\n        issuer: ""\n        clusterIssuer: ""\n\n  edc:\n    receiver:\n      callback:\n        url: "http://{{ .Release.Name }}-irs-helm:8181/internal/endpoint-data-reference"  # IRS EDC callback URL, e.g. http://app-irs-helm:8181/internal/endpoint-data-reference\n    postgresql:\n      user: edc\n      password: <postgres-password>\n    transfer:\n      proxy:\n        token:\n          verifier:\n            publickey:\n              alias: <daps-certificate-name>\n          signer:\n            privatekey:\n              alias: <daps-privatekey-name>\n    api:\n      auth:\n        key: "<edc-api-key>"\n    controlplane:\n      url: "https://<controlplane-url>"\n    dataplane:\n      url: "https://<dataplane-url>"\n  configuration:\n    properties: |-\n      edc.oauth.client.id=<daps-client-id>\n      edc.oauth.private.key.alias=<daps-privatekey-name>\n      edc.oauth.provider.jwks.url=<daps-jwks-url>\n      edc.oauth.certificate.alias=<daps-certificate-name>\n      edc.oauth.token.url=<daps-token-url>\n      edc.vault.hashicorp.url=<vault-url>\n      edc.vault.hashicorp.token=<vault-token>\n      edc.vault.hashicorp.api.secret.path=<vault-secret-store-path>\n      edc.data.encryption.keys.alias=<daps-privatekey-name>\n      edc.data.encryption.algorithm=NONE\n\n###############################\n# EDC Dataplane Configuration #\n###############################\nedc-dataplane:\n  edc:\n    api:\n      auth:\n        key: "<edc-api-key>"\n  ## Ingress declaration to expose the network service.\n  ingresses:\n    - enabled: true\n      hostname: "<dataplane-url>"\n      annotations:\n        nginx.ingress.kubernetes.io/ssl-passthrough: "false"\n        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"\n        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"\n      endpoints:\n        - public\n      className: "nginx"\n      tls:\n        - hosts:\n            - "<dataplane-url>"\n          secretName: tls-secret\n      certManager:\n        issuer: ""\n        clusterIssuer: ""\n\n  configuration:\n    properties: |-\n      edc.oauth.client.id=<daps-client-id>\n      edc.oauth.private.key.alias=<daps-privatekey-name>\n      edc.oauth.provider.audience=idsc:IDS_CONNECTORS_ALL\n      edc.oauth.provider.jwks.url=<daps-jwks-url>\n      edc.oauth.certificate.alias=<daps-certificate-name>\n      edc.oauth.token.url=<daps-token-url>\n      edc.vault.hashicorp.url=<vault-url>\n      edc.vault.hashicorp.token=<vault-token>\n      edc.vault.hashicorp.api.secret.path=<vault-secret-store-path>\n')),(0,i.kt)("h4",{id:"values-explained-1"},"Values explained"),(0,i.kt)("p",null,"EDC requires a DAPS instance to function correctly. For more information on this, please refer to the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/catenax-ng/product-DAPS"},"DAPS")," or the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/catenax-ng/product-edc"},"EDC")," documentation."),(0,i.kt)("h5",{id:"controlplane-url"},"controlplane-url"),(0,i.kt)("p",null,"The hostname where the EDC consumer controlplane will be made available."),(0,i.kt)("h5",{id:"dataplane-url"},"dataplane-url"),(0,i.kt)("p",null,"The hostname where the EDC consumer dataplane will be made available."),(0,i.kt)("h5",{id:"vault-url"},"vault-url"),(0,i.kt)("p",null,"The base URL of the Vault instance.\nEDC requires a running instance of HashiCorp Vault to store the DAPS certificate and private key."),(0,i.kt)("h5",{id:"vault-secret-store-path"},"vault-secret-store-path"),(0,i.kt)("p",null,"The path to the secret store in Vault where the DAPS certificate and key can be found."),(0,i.kt)("p",null,"Example: /v1/team-name"),(0,i.kt)("h5",{id:"daps-certificate-name"},"daps-certificate-name"),(0,i.kt)("p",null,"The name of the DAPS certificate in the Vault."),(0,i.kt)("p",null,"Example: irs-daps-certificate"),(0,i.kt)("h5",{id:"daps-privatekey-name"},"daps-privatekey-name"),(0,i.kt)("p",null,"The name of the DAPS private key in the Vault."),(0,i.kt)("p",null,"Example: irs-daps-private-key"),(0,i.kt)("h5",{id:"daps-client-id"},"daps-client-id"),(0,i.kt)("p",null,"The DAPS client ID."),(0,i.kt)("h5",{id:"daps-jwks-url"},"daps-jwks-url"),(0,i.kt)("p",null,"The URL of the DAPS JWK Set."),(0,i.kt)("p",null,"Example: ",(0,i.kt)("a",{parentName:"p",href:"https://daps-hostname/.well-known/jwks.json"},"https://daps-hostname/.well-known/jwks.json")),(0,i.kt)("h5",{id:"daps-token-url"},"daps-token-url"),(0,i.kt)("p",null,"The URL of the DAPS token API."),(0,i.kt)("p",null,"Example: ",(0,i.kt)("a",{parentName:"p",href:"https://daps-hostname/token"},"https://daps-hostname/token")),(0,i.kt)("h3",{id:"secrets"},"Secrets"),(0,i.kt)("p",null,"This is a list of all secrets used in the deployment."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\xe2\u0161 \xef\xb8\x8f WARNING"),"\\\nKeep the values for these settings safe and do not publish them!"),(0,i.kt)("h4",{id:"postgres-admin-password"},"postgres-admin-password"),(0,i.kt)("p",null,"Database password for the ",(0,i.kt)("strong",{parentName:"p"},"postgres")," user. To be defined by you."),(0,i.kt)("h4",{id:"postgres-password"},"postgres-password"),(0,i.kt)("p",null,"Database password for the application user (default username: ",(0,i.kt)("strong",{parentName:"p"},"edc"),"). To be defined by you."),(0,i.kt)("h4",{id:"keycloak-client-id"},"keycloak-client-id"),(0,i.kt)("p",null,"Client ID for Keycloak. Request this from your Keycloak operator."),(0,i.kt)("h4",{id:"keycloak-client-secret"},"keycloak-client-secret"),(0,i.kt)("p",null,"Client secret for Keycloak. Request this from your Keycloak operator."),(0,i.kt)("h4",{id:"minio-username"},"minio-username"),(0,i.kt)("p",null,"Login username for Minio. To be defined by you."),(0,i.kt)("h4",{id:"minio-password"},"minio-password"),(0,i.kt)("p",null,"Login password for Minio. To be defined by you."),(0,i.kt)("h4",{id:"edc-api-key"},"edc-api-key"),(0,i.kt)("p",null,"An API key for the EDC API. To be defined by you."),(0,i.kt)("h4",{id:"vault-token"},"vault-token"),(0,i.kt)("p",null,"The access token for the HashiCorp Vault API."),(0,i.kt)("h4",{id:"grafana-username"},"grafana-username"),(0,i.kt)("p",null,"Login username for Grafana. To be defined by you."),(0,i.kt)("h4",{id:"grafana-password"},"grafana-password"),(0,i.kt)("p",null,"Login password for Grafana. To be defined by you."),(0,i.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,i.kt)("h3",{id:"proxy-support"},"Proxy support"),(0,i.kt)("p",null,"If you are using an HTTP(S) proxy for outgoing connections, you need to configure the IRS to use it."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"JAVA_TOOL_OPTIONS=-Dhttps.proxyHost=X.X.X.X -Dhttps.proxyPort=XXXX\n")),(0,i.kt)("p",null,"You might need to specify both ",(0,i.kt)("inlineCode",{parentName:"p"},"http")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"https")," options, dependending on your configuration."),(0,i.kt)("p",null,"If your proxy is requiring authentication, you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},".proxyUser")," and ",(0,i.kt)("inlineCode",{parentName:"p"},".proxyPassword")," properties in addition."),(0,i.kt)("h3",{id:"troubleshooting-faq"},"Troubleshooting FAQ"),(0,i.kt)("h4",{id:"minio"},"Minio"),(0,i.kt)("h5",{id:"error-the-specified-bucket-does-not-exist"},'Error: "The specified bucket does not exist"'),(0,i.kt)("p",null,"IRS tries to read data from or write to the Minio storage, but no bucket exists. This can happen if Minio is running without a persistent volume and restarts, thus losing all data.\nIt can also happen if the persistent volume claim is deleted / recreated."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Proposed solution steps:")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Make sure Minio is configured and running correctly."),(0,i.kt)("li",{parentName:"ol"},"Restart the IRS - this will recreate the missing bucket automatically.")),(0,i.kt)("h4",{id:"different-job-model-versions-maintenance"},"Different Job model versions maintenance"),(0,i.kt)("p",null,"Currently, the IRS only supports one version of the Job model at a time. This means that if Job model is changed, old models stored in minio will no longer be supported and returned from IRS endpoints. The IRS application will work as usual, old versions of Job can stay in the minio and don\xe2\u20ac\u2122t need to be removed - the IRS will simply ignore them. If you want to clear the minio from old models - the only way to achieve that is to delete them all and register a new Jobs."))}u.isMDXComponent=!0},62870:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/DataChainKitIcon-9d971977caa3b7d5d469e64e2ee02dc7.png"}}]);