"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[73266],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),p=i,m=d["".concat(s,".").concat(p)]||d[p]||h[p]||o;return n?a.createElement(m,r(r({ref:t},u),{},{components:n})):a.createElement(m,r({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:i,r[1]=l;for(var c=2;c<o;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},99457:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(87462),i=(n(67294),n(3905));const o={},r="Migration from 0.4.x to 0.5.x",l={unversionedId:"kits/tractusx-edc/docs/migration/Version_0.4.x_0.5.x",id:"version-23.12/kits/tractusx-edc/docs/migration/Version_0.4.x_0.5.x",title:"Migration from 0.4.x to 0.5.x",description:"Replacing DAPS with SSI",source:"@site/docs-kits_versioned_docs/version-23.12/kits/tractusx-edc/docs/migration/Version_0.4.x_0.5.x.md",sourceDirName:"kits/tractusx-edc/docs/migration",slug:"/kits/tractusx-edc/docs/migration/Version_0.4.x_0.5.x",permalink:"/docs-kits/23.12/kits/tractusx-edc/docs/migration/Version_0.4.x_0.5.x",draft:!1,tags:[],version:"23.12",frontMatter:{},sidebar:"kits",previous:{title:"Migration from 0.3.4 to 0.4.0",permalink:"/docs-kits/23.12/kits/tractusx-edc/docs/migration/Version_0.3.4_0.4.0"},next:{title:"Repository Structure",permalink:"/docs-kits/23.12/kits/tractusx-edc/docs/kit/development-view/page02_repository_structure"}},s={},c=[{value:"Replacing DAPS with SSI",id:"replacing-daps-with-ssi",level:2},{value:"Relevant terminology",id:"relevant-terminology",level:3},{value:"Preconditions",id:"preconditions",level:3},{value:"Authentication flow - quick intro",id:"authentication-flow---quick-intro",level:3},{value:"Connecting to MIW",id:"connecting-to-miw",level:3},{value:"Further documentation on SSI",id:"further-documentation-on-ssi",level:3},{value:"Noteworthy things and Caveats",id:"noteworthy-things-and-caveats",level:3},{value:"The Observability API changes",id:"the-observability-api-changes",level:2},{value:"The Consumer Pull flow changes",id:"the-consumer-pull-flow-changes",level:2}],u={toc:c};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"migration-from-04x-to-05x"},"Migration from 0.4.x to 0.5.x"),(0,i.kt)("h2",{id:"replacing-daps-with-ssi"},"Replacing DAPS with SSI"),(0,i.kt)("p",null,"DAPS was deprecated as identity provider, and was replaced with an Self-Sovereign-Identity solution based on a\ncentralized Managed Identity Wallet (MIW) using VerifiableCredentials. Initially, there will be one SummaryCredential,\nwhich conflates all relevant information. This is intended as interim solution and will later be replaced with a more\nappropriate structure."),(0,i.kt)("h3",{id:"relevant-terminology"},"Relevant terminology"),(0,i.kt)("p",null,"Please make sure to be at least somewhat familiar with the following terms before you read on:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"VerifiableCredential"),(0,i.kt)("li",{parentName:"ul"},"VerifiablePresentation"),(0,i.kt)("li",{parentName:"ul"},"JWT - JSON Web Token"),(0,i.kt)("li",{parentName:"ul"},"DSP - the DataSpace Protocol")),(0,i.kt)("h3",{id:"preconditions"},"Preconditions"),(0,i.kt)("p",null,"All of these preconditions must be met before Tractus-X EDC ",(0,i.kt)("inlineCode",{parentName:"p"},"v0.5.x")," is usable in a production use case. Please read\nthem carefully and make sure you understand the implications."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"every connector instance must have a\nsigned ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/eclipse-tractusx/ssi-docu/tree/main/docs/credentials/summary"},"SummaryCredential")," sitting in\nthe MIW. This is typically done by the Portal during participant onboarding."),(0,i.kt)("li",{parentName:"ul"},"the connector must have an account with KeyCloak and be able to obtain access tokens."),(0,i.kt)("li",{parentName:"ul"},"the connector must be able to reach both MIW and KeyCloak via HTTP")),(0,i.kt)("h3",{id:"authentication-flow---quick-intro"},"Authentication flow - quick intro"),(0,i.kt)("p",null,"The basic workflow for a connector runtime to authenticate an incoming request is described in this section. Please note\nthat this procedure is limited to connector-to-connector communication via the Dataspace Protocol (DSP), it does not\nrelate to other APIs such as the Management API."),(0,i.kt)("p",null,"When a request is made by the Consumer, it obtains an access token from KeyCloak, which it uses to authenticate to MIW.\nIt then requests its SummaryCredential from MIW, which is returned in the form of a signed JWT that contains a\nVerifiablePresentation (VP). That JWT is attached to the outgoing request as authorization header.\nThe Provider then decodes the JWT, validates its claims, and then uploads the VP to MIW for verification. Upon\nsuccessful verification, the Provider proceeds to process the request."),(0,i.kt)("p",null,"Please also check\nout ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-tractusx/ssi-docu/blob/main/docs/architecture/cx-3-2/flow.svg"},"this flow diagram")," and\nthe associated ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-tractusx/ssi-docu/tree/main/docs/architecture/cx-3-2"},"documentation"),"."),(0,i.kt)("h3",{id:"connecting-to-miw"},"Connecting to MIW"),(0,i.kt)("p",null,"For connector onboarding, please contact the Portal Team. After that, you should receive:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"the issuer BPN: this is the BPN of the MIW"),(0,i.kt)("li",{parentName:"ul"},"your client id: this is the KeyCloak Client ID"),(0,i.kt)("li",{parentName:"ul"},"your client secret: this the KeyCloak Client Secret. Please store this in a secure vault and remember the ",(0,i.kt)("inlineCode",{parentName:"li"},"alias"),".\n",(0,i.kt)("em",{parentName:"li"},"Do not leak or publish this!"))),(0,i.kt)("p",null,"In order to establish a connection to MIW, and you are using EDC on code level, please be sure to\nfollow ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-tractusx/tractusx-edc/tree/main/edc-extensions/ssi/ssi-miw-credential-client"},"this documentation"),".\nIf you are using the official Helm charts, please check\nout ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-tractusx/tractusx-edc/blob/main/charts/tractusx-connector/README.md"},"this documentation"),"."),(0,i.kt)("p",null,"If you are using the MIW and KeyCloak instances deployed to ",(0,i.kt)("inlineCode",{parentName:"p"},"INT"),", the following values apply:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"MIW Url: ",(0,i.kt)("a",{parentName:"li",href:"https://managed-identity-wallets-new.int.demo.catena-x.net"},"https://managed-identity-wallets-new.int.demo.catena-x.net")),(0,i.kt)("li",{parentName:"ul"},"KeyCloak Token URL: ",(0,i.kt)("a",{parentName:"li",href:"https://centralidp.int.demo.catena-x.net/auth/realms/CX-Central/protocol/openid-connect/token"},"https://centralidp.int.demo.catena-x.net/auth/realms/CX-Central/protocol/openid-connect/token")),(0,i.kt)("li",{parentName:"ul"},"Authority BPN: ",(0,i.kt)("inlineCode",{parentName:"li"},"BPNL00000003CRHK"))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Please be aware that the above values are ",(0,i.kt)("em",{parentName:"p"},"only")," valid for the Catena-X INT environment and ",(0,i.kt)("em",{parentName:"p"},"will")," change on other\nenvironments! For instructions on how to set up a local MIW + KeyCloak, please take a look\nat ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/catenax-ng/tx-managed-identity-wallets/blob/features/java-did-web/README.md"},"this documentation"),".")),(0,i.kt)("h3",{id:"further-documentation-on-ssi"},"Further documentation on SSI"),(0,i.kt)("p",null,"Please find more information in\nthe ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-tractusx/ssi-docu/tree/main/docs/architecture/cx-3-2"},"SSI Documentation Repository"),"."),(0,i.kt)("h3",{id:"noteworthy-things-and-caveats"},"Noteworthy things and Caveats"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"the MIWs REST API is secured with a token that can be obtained from a KeyCloak instance. This KeyCloak instance must\nbe configured appropriately ahead of time."),(0,i.kt)("li",{parentName:"ul"},"connectors have to be able to obtain a token from KeyCloak, so it must have an account with that KeyCloak instance"),(0,i.kt)("li",{parentName:"ul"},"we do ",(0,i.kt)("strong",{parentName:"li"},"not")," ship either MIW or KeyCloak nor do we provide support for either of them. Please contact the respective\nTractus-X projects for instructions how to set them up."),(0,i.kt)("li",{parentName:"ul"},"our official Helm charts now use SSI instead of DAPS. However, the charts do ",(0,i.kt)("strong",{parentName:"li"},"not")," include a dependency onto MIW of\nKeyCloak, nor do they contain configuration for them. They do, however, contain a configuration section (titled ",(0,i.kt)("inlineCode",{parentName:"li"},"ssi"),")\nthat configures EDC."),(0,i.kt)("li",{parentName:"ul"},"our Helm charts can be installed, and the connector application will boot up, but unless MIW and KeyCloak are\nconfigured properly and both can be reached over network by the connector, every DSP request to another connector will\nfail. However, the ManagementAPI can still be used to create Assets, Policies and ContractDefinitions."),(0,i.kt)("li",{parentName:"ul"},"At the time of releasing Tractus-X EDC ",(0,i.kt)("inlineCode",{parentName:"li"},"0.5.0"),", a couple of critical issues regarding MIW are\nstill ",(0,i.kt)("a",{parentName:"li",href:"https://jira.catena-x.net/projects/CGD/issues/CGD-291"},"in progress"),", and the code base is still on a feature\nbranch. For those reasons we recommend to use ",(0,i.kt)("em",{parentName:"li"},"non-production data only"),"!"),(0,i.kt)("li",{parentName:"ul"},"the centralized MIW is an interim solution, and is bound to be replaced with a decentralized/distributed architecture\nin upcoming Catena-X releases.")),(0,i.kt)("h2",{id:"the-observability-api-changes"},"The Observability API changes"),(0,i.kt)("p",null,"The following settings are removed because the ",(0,i.kt)("inlineCode",{parentName:"p"},"observability-api-customization")," extension will be no longer used.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"Observability API")," extension will be used instead"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"observability.port")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"observability.path")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"observability.insecure"))),(0,i.kt)("p",null,"The status (",(0,i.kt)("inlineCode",{parentName:"p"},"/health"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"/startup"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"/liveness"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"/readiness"),") of the EDC can be checked by using the default endpoint."),(0,i.kt)("h2",{id:"the-consumer-pull-flow-changes"},"The Consumer Pull flow changes"),(0,i.kt)("p",null,"Starting from ",(0,i.kt)("inlineCode",{parentName:"p"},"0.5.0-rc5")," which incorporates ",(0,i.kt)("inlineCode",{parentName:"p"},"EDC")," 0.1.3, the consumer pull has been simplified in upstream, and it\ncan cause some breaking changes on users usage. The change is reflected in\nthis ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-edc/Connector/blob/main/docs/developer/architecture/data-transfer/diagrams/transfer-data-plane-consumer-pull.png"},"diagram"),"."),(0,i.kt)("p",null,"The main difference is that in the previous iteration of the pull flow there were two EDRs involved. One created by the\nprovider while serving\na transfer request, and one created by the consumer (wrapping the provider one). The consumer one then was dispatched to\nthe EDR receivers for requesting\nthe data via consumer dataplane."),(0,i.kt)("p",null,'In the current iteration the receivers now receive directly the provider EDR without the double "wrapping" and can be\nused directly to fetch data\nfrom the provider dataplane, without passing thought to the consumer dataplane.'),(0,i.kt)("p",null,"The shape of the EDR has not been changed so, if in the backend systems the EDR#endpoint was used as url for fetching\ndata, it should not cause any\nbreaking changes."),(0,i.kt)("p",null,"If the backend system manually forward the EDR to the consumer dataplane or tries to decode it via consumer validate\ntoken APIs,\nthis will not work with signature check errors, as the EDR is the one signed by the provider."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note the custom property ",(0,i.kt)("inlineCode",{parentName:"p"},"cid")," in the EDR, it's not available anymore. The property it's still available inside the\nJWT ",(0,i.kt)("inlineCode",{parentName:"p"},"authCode"))))}d.isMDXComponent=!0}}]);