"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[23662],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(r),m=a,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return r?n.createElement(h,i(i({ref:t},p),{},{components:r})):n.createElement(h,i({ref:t},p))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},91221:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var n=r(87462),a=(r(67294),r(3905));const o={},i="Helm Charts",c={unversionedId:"kits/tractusx-edc/charts/README",id:"version-23.12/kits/tractusx-edc/charts/README",title:"Helm Charts",description:"Chart Linting",source:"@site/docs-kits_versioned_docs/version-23.12/kits/tractusx-edc/charts/README.md",sourceDirName:"kits/tractusx-edc/charts",slug:"/kits/tractusx-edc/charts/",permalink:"/docs-kits/23.12/kits/tractusx-edc/charts/",draft:!1,tags:[],version:"23.12",frontMatter:{},sidebar:"kits",previous:{title:"Setting up a local EDC Data Plane",permalink:"/docs-kits/23.12/kits/tractusx-edc/docs/kit/operation-view/page04_local_setup_dataplane"},next:{title:"tractusx-connector",permalink:"/docs-kits/23.12/kits/tractusx-edc/charts/tractusx-connector/"}},s={},l=[{value:"Chart Linting",id:"chart-linting",level:2},{value:"Generate Chart Readme&#39;s",id:"generate-chart-readmes",level:2},{value:"Confidential EDC Settings",id:"confidential-edc-settings",level:2}],p={toc:l};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"helm-charts"},"Helm Charts"),(0,a.kt)("h2",{id:"chart-linting"},"Chart Linting"),(0,a.kt)("p",null,"Chart linting is performed using ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/helm/chart-testing"},"helm's CT tool"),"."),(0,a.kt)("p",null,"Configuration files for ",(0,a.kt)("a",{parentName:"p",href:"../ct.yaml"},"CT"),", ",(0,a.kt)("a",{parentName:"p",href:"../chart_schema.yaml"},"Yamale")," and ",(0,a.kt)("a",{parentName:"p",href:"../lintconf.yaml"},"Yamllint")," have been provided."),(0,a.kt)("h2",{id:"generate-chart-readmes"},"Generate Chart Readme's"),(0,a.kt)("p",null,"To generate chart README.md files from its respective values.yaml file we use the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/norwoodj/helm-docs"},"helm-docs tool"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'docker run --rm --volume "$(pwd):/helm-docs" -u $(id -u) jnorwood/helm-docs:v1.10.0\n')),(0,a.kt)("h2",{id:"confidential-edc-settings"},"Confidential EDC Settings"),(0,a.kt)("p",null,"Some EDC settings should better not be part of the actual deployment (like credentials to the database or the vault). Therefore, it is possible to deploy a secret with these confidential settings beforehand, and make it known to the deployment by setting the secret name in the ",(0,a.kt)("inlineCode",{parentName:"p"},"envSecretName")," field of the deployment."))}u.isMDXComponent=!0}}]);