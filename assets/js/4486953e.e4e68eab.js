"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[51499,61803],{9887:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"kits/industry-core-kit/software-development-view/aspect-models","title":"Aspect Models","description":"Industry Core KIT","source":"@site/docs-kits/kits/industry-core-kit/software-development-view/aspect-models.mdx","sourceDirName":"kits/industry-core-kit/software-development-view","slug":"/kits/industry-core-kit/software-development-view/aspect-models","permalink":"/docs-kits/next/kits/industry-core-kit/software-development-view/aspect-models","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"aspect-models","title":"Aspect Models","description":"Industry Core KIT","sidebar_position":2},"sidebar":"kits","previous":{"title":"Digital Twins","permalink":"/docs-kits/next/kits/industry-core-kit/software-development-view/digital-twins"},"next":{"title":"Notifications","permalink":"/docs-kits/next/kits/industry-core-kit/software-development-view/notifications"}}');var a=n(74848),s=n(28453),l=n(79209);const r={id:"aspect-models",title:"Aspect Models",description:"Industry Core KIT",sidebar_position:2},o=void 0,c={},d=[...l.toc,{value:"PartTypeInformation",id:"parttypeinformation",level:3},{value:"Example: Aspect Model <code>PartTypeInformation 1.0.0</code> for a part type",id:"example-aspect-model-parttypeinformation-100-for-a-part-type",level:4},{value:"SingleLevelBomAsPlanned",id:"singlelevelbomasplanned",level:3},{value:"Example: Aspect Model <code>SingleLevelBomAsPlanned 3.0.0</code> for a Catalog Part",id:"example-aspect-model-singlelevelbomasplanned-300-for-a-catalog-part",level:4},{value:"SingleLevelUsageAsPlanned",id:"singlelevelusageasplanned",level:3},{value:"Example: Aspect Model <code>SingleLevelUsageAsPlanned 2.0.0</code> for a Catalog Part",id:"example-aspect-model-singlelevelusageasplanned-200-for-a-catalog-part",level:4},{value:"Creation of Aspect Model SingleLevelUsageAsPlanned",id:"creation-of-aspect-model-singlelevelusageasplanned",level:4},{value:"SerialPart",id:"serialpart",level:3},{value:"Example: Aspect Model <code>SerialPart 3.0.0</code> for a Vehicle",id:"example-aspect-model-serialpart-300-for-a-vehicle",level:4},{value:"Example: Aspect Model <code>SerialPart 3.0.0</code> for a Serialized Part (Non-Vehicle)",id:"example-aspect-model-serialpart-300-for-a-serialized-part-non-vehicle",level:4},{value:"Creation of Aspect Model SerialPart",id:"creation-of-aspect-model-serialpart",level:4},{value:"Batch",id:"batch",level:3},{value:"Example: Aspect Model <code>Batch 3.0.0</code> for a Batch of Raw Material",id:"example-aspect-model-batch-300-for-a-batch-of-raw-material",level:4},{value:"Creation of Aspect Model Batch",id:"creation-of-aspect-model-batch",level:4},{value:"JustInSequencePart",id:"justinsequencepart",level:3},{value:"Example: Aspect Model <code>JustInSequencePart 3.0.0</code> for a non-serialized component",id:"example-aspect-model-justinsequencepart-300-for-a-non-serialized-component",level:4},{value:"Creation of Aspect Model JustInSequencePart",id:"creation-of-aspect-model-justinsequencepart",level:4},{value:"SingleLevelBomAsBuilt",id:"singlelevelbomasbuilt",level:3},{value:"Example: Aspect Model <code>SingleLevelBomAsBuilt 3.0.0</code> for a Serialized Part",id:"example-aspect-model-singlelevelbomasbuilt-300-for-a-serialized-part",level:4},{value:"Aspect Model <code>SingleLevelBomAsBuilt 3.0.0</code> for a Batch",id:"aspect-model-singlelevelbomasbuilt-300-for-a-batch",level:4},{value:"Creation of Aspect Model SingleLevelBomAsBuilt",id:"creation-of-aspect-model-singlelevelbomasbuilt",level:4},{value:"SingleLevelUsageAsBuilt",id:"singlelevelusageasbuilt",level:3},{value:"Example: Aspect Model <code>SingleLevelUsageAsBuilt 3.0.0</code> for a Serialized Part",id:"example-aspect-model-singlelevelusageasbuilt-300-for-a-serialized-part",level:4},{value:"Aspect Model <code>SingleLevelUsageAsBuilt 3.0.0</code> for a Batch",id:"aspect-model-singlelevelusageasbuilt-300-for-a-batch",level:4},{value:"Creation of Aspect Model SingleLevelUsageAsBuilt",id:"creation-of-aspect-model-singlelevelusageasbuilt",level:4},{value:"NOTICE",id:"notice",level:2}];function p(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Industry Core kit banner",src:n(33438).A+"",width:"264",height:"245"})}),"\n",(0,a.jsx)(t.p,{children:"Aspect models are mostly easy to create by transforming a company's internal data into the target aspect model. Transformations are mostly straightforward in these cases. If necessary, special steps in creating aspect models are mentioned in the corresponding sections."}),"\n",(0,a.jsx)(l.default,{components:e.components}),"\n",(0,a.jsx)(t.h3,{id:"parttypeinformation",children:"PartTypeInformation"}),"\n",(0,a.jsxs)(t.p,{children:["A Part Type Information represents an item in the Catena-X Bill of Material (BOM) on a type level in a specific version.\nIt replaces the aspect model PartAsPlanned 2.0.0 (",(0,a.jsx)(t.a,{href:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.part_as_planned/2.0.0",children:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.part_as_planned/2.0.0"}),")"]}),"\n",(0,a.jsx)(t.p,{children:"Aspect model in GitHub:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Version 1.0.0: ",(0,a.jsx)(t.a,{href:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.part_type_information/1.0.0",children:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.part_type_information/1.0.0"})]}),"\n"]}),"\n",(0,a.jsxs)(t.h4,{id:"example-aspect-model-parttypeinformation-100-for-a-part-type",children:["Example: Aspect Model ",(0,a.jsx)(t.code,{children:"PartTypeInformation 1.0.0"})," for a part type"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'{\n  "catenaXId" : "580d3adf-1981-44a0-a214-13d6ceed9379",\n  "partTypeInformation" : {\n    "partClassification" : [\n      {\n        "classificationStandard": "GIN 20510-21513",\n        "classificationID": "1004716",\n        "classificationDescription": "Generic standard for classification of parts in the automotive industry."\n      },\n      {\n        "classificationStandard": "OEM Part Classification 1022-102",\n        "classificationID": "Exterior mirror",\n        "classificationDescription": "OEM standard for classification of parts."\n      }\n    ],\n    "manufacturerPartId" : "123-0.740-3434-A",\n    "nameAtManufacturer" : "Mirror left"\n  },\n  "partSitesInformationAsPlanned" : [\n    {\n      "functionValidUntil" : "2024-01-29T12:00:00.123+02:00",\n      "catenaXsiteId" : "BPNS1234567890ZZ",\n      "function" : "production",\n      "functionValidFrom" : "2024-01-29T12:00:00.123+02:00"\n    }\n  ]\n}\n'})}),"\n",(0,a.jsx)(t.h3,{id:"singlelevelbomasplanned",children:"SingleLevelBomAsPlanned"}),"\n",(0,a.jsx)(t.p,{children:'The single-level Bill of Material represents one sub-level of an assembly and does not include any lower-level subassemblies. In as planned lifecycle state all variants are covered ("120% BoM"). If multiple versions of child parts exist that can be assembled into the same parent part, all versions of the child part are included in the BoM. If there are multiple suppliers for the same child part, each supplier has an entry for their child part in the BoM.'}),"\n",(0,a.jsx)(t.p,{children:"Aspect model in GitHub:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Version 3.0.0: ",(0,a.jsx)(t.a,{href:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.single_level_bom_as_planned/3.0.0",children:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.single_level_bom_as_planned/3.0.0"})]}),"\n"]}),"\n",(0,a.jsxs)(t.h4,{id:"example-aspect-model-singlelevelbomasplanned-300-for-a-catalog-part",children:["Example: Aspect Model ",(0,a.jsx)(t.code,{children:"SingleLevelBomAsPlanned 3.0.0"})," for a Catalog Part"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'{\n  "catenaXId": "urn:uuid:055c1128-0375-47c8-98de-7cf802c3241d",\n  "childItems": [\n    {\n      "validityPeriod": {\n        "validFrom": "2023-03-21T08:17:29.187+01:00",\n        "validTo": "2024-07-01T16:10:00.000+01:00"\n      },\n      "catenaXId": "urn:uuid:055c1478-0395-47m8-94de-7cf802c5724a",\n      "quantity": {\n        "value": 5,\n        "unit": "unit:litre"\n      },\n      "businessPartner": "BPNL50096894aNXY",\n      "createdOn": "2022-02-03",\n      "lastModifiedOn": "2022-02-03T14:48:54.709Z"\n    }\n  ]\n}\n'})}),"\n",(0,a.jsx)(t.h3,{id:"singlelevelusageasplanned",children:"SingleLevelUsageAsPlanned"}),"\n",(0,a.jsxs)(t.p,{children:["The aspect provides the information in which parent part(s)/product(s)the given item is to be assembled into or used. This could be a 1:1 relationship in terms of a e.g. a brake component or 1",":n",' for e.g. coatings. The given item as well as the parent item must refer to a part type twin representing a generic part, e.g. a catalog part.\nIf one input product is regarded as an alternative to another input product (from same or different supplier), the relation should still be built, but marked with "IsOnlyPotentialParent".']}),"\n",(0,a.jsx)(t.p,{children:"Aspect model in GitHub:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Version 2.0.0: ",(0,a.jsx)(t.a,{href:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.single_level_usage_as_planned/2.0.0",children:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.single_level_usage_as_planned/2.0.0"})]}),"\n"]}),"\n",(0,a.jsxs)(t.h4,{id:"example-aspect-model-singlelevelusageasplanned-200-for-a-catalog-part",children:["Example: Aspect Model ",(0,a.jsx)(t.code,{children:"SingleLevelUsageAsPlanned 2.0.0"})," for a Catalog Part"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'{\n  "catenaXId": "urn:uuid:055c1128-0375-47c8-98de-7cf802c3241d",\n  "parentItems": [\n    {\n      "validityPeriod": {\n        "validFrom": "2023-03-21T08:17:29.187+01:00",\n        "validTo": "2024-07-01T16:10:00.000+01:00"\n      },\n      "catenaXId": "urn:uuid:055c1478-0395-47m8-94de-7cf802c5724a",\n      "quantity": {\n        "value": 2,\n        "unit": "unit:litre"\n      },\n      "businessPartner": "BPNL50096894aNXY",\n      "createdOn": "2022-02-03",\n      "lastModifiedOn": "2022-02-03T14:48:54.709Z"\n    }\n  ],\n  "customers": [\n    "BPNL50096894aNXY"\n  ]\n}\n'})}),"\n",(0,a.jsx)(t.h4,{id:"creation-of-aspect-model-singlelevelusageasplanned",children:"Creation of Aspect Model SingleLevelUsageAsPlanned"}),"\n",(0,a.jsx)(t.p,{children:"The SingleLevelUsageAsPlanned aspect can only be completed by combining supplier and customer information. Only the supplier will create and update the Usage aspects. The missing information can be provided by the customer(s) with the help of Unique ID Push notifications."}),"\n",(0,a.jsx)(t.p,{children:'For better understanding, simplified names "parents", "child", "customers" are used in the description.'}),"\n",(0,a.jsx)(t.p,{children:"These expressions \u201cparents\u201d, \u201cchild\u201d and \u201ccustomers\u201d can be translated into the attributes of the aspect model."}),"\n",(0,a.jsx)(t.p,{children:"Translation into SingleLevelUsageAsPlanned aspect:"}),"\n",(0,a.jsx)(t.p,{children:"\u201cparents\u201d -> \u201ccatenaXId\u201d in \u201cparentItems\u201d\n\u201cchild\u201d -> overall \u201ccatenaXId\u201d in aspect\n\u201ccustomers\u201d -> \u201cbusinessPartner\u201d in \u201ccustomers\u201d"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsx)(t.li,{children:"Supplier creates Digital Twin for his own part type or material with corresponding \u201cpart\u201d aspect (partType). In addition, the supplier creates a singleLevelUsageAsPlanned aspect and attaches it to that Digital Twin. At this point of time the singleLevelUsageAsPlanned aspect cannot contain \u201cparents\u201d information, only \u201cchild\u201d (unique ID of own product) and \u201ccustomers\u201d (BPNL of customers)."}),"\n",(0,a.jsx)(t.li,{children:"The customer plans tp produce a product or material and creates a Digital Twin for it. When the customer plans to use the supplier part or material to produce the new product, he does not create an additional Digital Twin for the supplier product. Instead, the customer sends an appropriate notification to the supplier. This could happen when creating the singleLevelBomAsPlanned aspect, because at this point of time all information is available at the sender side. The customer sends a notification to the supplier, containing the missing \u201cparents\u201d information for that input product (\u201cchild\u201d), both specified by the uniqueId, plus optional additional information like quantity and dates. \u201cParents\u201d is the to be produced product at the customer, \u201cchild\u201d is the to be used product coming from the supplier."}),"\n",(0,a.jsx)(t.li,{children:"Supplier receives notification from customer and updates own singleLevelUsageAsPlanned aspect with the \u201cparents\u201d and additional information, if provided, like quantity and dates."}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"The customer MAY give access to the supplier for the Digital Twin and the partType aspect but it is not requested. The only information that is shared via notification is the catenaXID of the product to be used by the customer, plus quantity and date."}),"\n",(0,a.jsx)(t.p,{children:"The customer MAY NOT give access to the singleLevelBomAsPlanned aspect that belongs to the Digital Twin of his own product because it may also contain information relating to other suppliers that may not be shared."}),"\n",(0,a.jsx)(t.h3,{id:"serialpart",children:"SerialPart"}),"\n",(0,a.jsx)(t.p,{children:"A serialized part is an instantiation of a (design-) part, where the particular instantiation can be uniquely identified by means of a serial numbers or a similar identifier (e.g. VAN) or a combination of multiple identifiers (e.g. combination of manufacturer, date and number)"}),"\n",(0,a.jsx)(t.p,{children:"Aspect model in GitHub:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Version 3.0.0: ",(0,a.jsx)(t.a,{href:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.serial_part/3.0.0",children:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.serial_part/3.0.0"})]}),"\n"]}),"\n",(0,a.jsxs)(t.h4,{id:"example-aspect-model-serialpart-300-for-a-vehicle",children:["Example: Aspect Model ",(0,a.jsx)(t.code,{children:"SerialPart 3.0.0"})," for a Vehicle"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'{\n  "localIdentifiers": [\n    {\n      "key": "manufacturerId",\n      "value": "BPNL7588787849VQ"\n    },\n    {\n      "key": "partInstanceId",\n      "value": "OEM-A-F8LM95T92WJ9KNDD3HA5P"\n    },\n    {\n      "key": "van",\n      "value": "OEM-A-F8LM95T92WJ9KNDD3HA5P"\n    }\n  ],\n  "manufacturingInformation": {\n    "date": "2022-02-04T14:48:54",\n    "country": "DEU",\n    "sites": [\n      {\n        "catenaXsiteId": "BPNS1234567890ZZ",\n        "function": "production"\n      }\n    ]\n  },\n  "catenaXId": "urn:uuid:580d3adf-1981-44a0-a214-13d6ceed9379",\n  "partTypeInformation": {\n    "manufacturerPartId": "95657362-83",\n    "nameAtManufacturer": "Vehicle Model A",\n    "partClassification": [\n      {\n        "classificationStandard": "GIN 20510-21513",\n        "classificationID": "1004712",\n        "classificationDescription": "Generic standard for classification of parts in the automotive industry."\n      },\n      {\n        "classificationStandard": "OEM Part Classification 1022-102",\n        "classificationID": "Electric vehicle",\n        "classificationDescription": "OEM standard for classification of parts."\n      }\n    ],\n  }\n}\n'})}),"\n",(0,a.jsxs)(t.h4,{id:"example-aspect-model-serialpart-300-for-a-serialized-part-non-vehicle",children:["Example: Aspect Model ",(0,a.jsx)(t.code,{children:"SerialPart 3.0.0"})," for a Serialized Part (Non-Vehicle)"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'{\n  "localIdentifiers": [\n    {\n      "key": "manufacturerId",\n      "value": "BPNL7588787849VQ"\n    },\n    {\n      "key": "partInstanceId",\n      "value": "NO-574868639429552535768526"\n    }\n  ],\n  "manufacturingInformation": {\n    "date": "2022-02-04T14:48:54",\n    "country": "DEU",\n    "sites": [\n      {\n        "catenaXsiteId": "BPNS1234567890ZZ",\n        "function": "production"\n      }\n    ]\n  },\n  "catenaXId": "urn:uuid:d60b99b0-f269-42f5-94d0-64fe0946ed04",\n  "partTypeInformation": {\n    "manufacturerPartId": "95657362-83",\n    "customerPartId": "798-515297795-A",\n    "nameAtManufacturer": "High Voltage Battery",\n    "nameAtCustomer": "High Voltage Battery",\n    "partClassification": [\n      {\n        "classificationStandard": "GIN 20510-21513",\n        "classificationID": "1004713",\n        "classificationDescription": "Generic standard for classification of parts in the automotive industry."\n      },\n      {\n        "classificationStandard": "OEM Part Classification 1022-102",\n        "classificationID": "Traction Battery",\n        "classificationDescription": "OEM standard for classification of parts."\n      }\n    ],\n  }\n}\n'})}),"\n",(0,a.jsx)(t.h4,{id:"creation-of-aspect-model-serialpart",children:"Creation of Aspect Model SerialPart"}),"\n",(0,a.jsx)(t.p,{children:"The only special step in creating this aspect model is the initial creation of the Unique ID for the corresponding part."}),"\n",(0,a.jsx)(t.h3,{id:"batch",children:"Batch"}),"\n",(0,a.jsx)(t.p,{children:"A batch is a quantity of (semi-) finished products or (raw) material product that have been produced under the same circumstances (e.g. same production location), as specified groups or amounts, within a certain time frame. Every batch can differ in the number or amount of products. Different batches can have varied specifications, e.g., different colors. A batch is identified via a Batch ID."}),"\n",(0,a.jsx)(t.p,{children:"Aspect model in GitHub:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Version 3.0.0: ",(0,a.jsx)(t.a,{href:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.batch/3.0.0",children:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.batch/3.0.0"})]}),"\n"]}),"\n",(0,a.jsxs)(t.h4,{id:"example-aspect-model-batch-300-for-a-batch-of-raw-material",children:["Example: Aspect Model ",(0,a.jsx)(t.code,{children:"Batch 3.0.0"})," for a Batch of Raw Material"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'{\n "localIdentifiers": [\n   {\n     "value": "BID12345678",\n     "key": "batchId"\n   },\n   {\n     "value": "BPNL7588787849VQ",\n     "key": "manufacturerId"\n   },\n ],\n "manufacturingInformation": {\n   "date": "2022-02-04T14:48:54",\n   "country": "DEU",\n   "sites": [\n     {\n       "catenaXsiteId": "BPNS1234567890ZZ",\n       "function": "production"\n     }\n   ]\n },\n "catenaXId": "580d3adf-1981-44a0-a214-13d6ceed9379",\n "partTypeInformation": {\n   "partClassification": [\n     {\n       "classificationStandard": "GIN 20510-21513",\n       "classificationID": "1004714",\n       "classificationDescription": "Generic standard for classification of parts in the automotive industry."\n     },\n     {\n       "classificationStandard": "OEM Part Classification 1022-102",\n       "classificationID": "Two-component adhesive",\n       "classificationDescription": "OEM standard for classification of parts."\n     }\n   ],\n   "manufacturerPartId": "123-0.740-3434-A",\n   "nameAtManufacturer": "PA66-GF30"\n }\n}\n'})}),"\n",(0,a.jsx)(t.h4,{id:"creation-of-aspect-model-batch",children:"Creation of Aspect Model Batch"}),"\n",(0,a.jsx)(t.p,{children:"The only special step in creating this aspect model is the initial creation of the Unique ID for the corresponding batch."}),"\n",(0,a.jsx)(t.h3,{id:"justinsequencepart",children:"JustInSequencePart"}),"\n",(0,a.jsx)(t.p,{children:"A just-in-sequence part is an instantiation of a (design-) part, where the particular instantiation can be uniquely identified by means of a combination of several IDs related to a just-in-sequence process."}),"\n",(0,a.jsx)(t.p,{children:"Aspect model in GitHub:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Version 3.0.0: ",(0,a.jsx)(t.a,{href:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.just_in_sequence_part/3.0.0",children:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.just_in_sequence_part/3.0.0"})]}),"\n"]}),"\n",(0,a.jsxs)(t.h4,{id:"example-aspect-model-justinsequencepart-300-for-a-non-serialized-component",children:["Example: Aspect Model ",(0,a.jsx)(t.code,{children:"JustInSequencePart 3.0.0"})," for a non-serialized component"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'{\n  "localIdentifiers": [\n    {\n      "key": "manufacturerId",\n      "value": "BPNL7588787849VQ"\n    },\n    {\n      "key": "jisNumber",\n      "value": "894651684"\n    },\n    {\n      "key": "parentOrderNumber",\n      "value": "OEM-A-F8LM95T92WJ9KNDD3HA5P"\n    },\n    {\n      "key": "jisCallDate",\n      "value": "2022-01-24T09:13:34"\n    }\n  ],\n  "manufacturingInformation": {\n    "date": "2022-02-04T14:48:54",\n    "country": "DEU",\n    "sites": [\n      {\n        "catenaXsiteId": "BPNS1234567890ZZ",\n        "function": "production"\n      }\n    ]\n  },\n  "catenaXId": "urn:uuid:580d3adf-1981-44a0-a214-13d6ceed9379",\n  "partTypeInformation": {\n    "partClassification": [\n      {\n        "classificationStandard": "GIN 20510-21513",\n        "classificationID": "1004715",\n        "classificationDescription": "Generic standard for classification of parts in the automotive industry."\n      },\n      {\n        "classificationStandard": "OEM Part Classification 1022-102",\n        "classificationID": "Front row seat",\n        "classificationDescription": "OEM standard for classification of parts."\n      }\n    ],\n    "manufacturerPartId": "84816168424",\n    "nameAtManufacturer": "Black Leather Front Row Seat for Vehicle Model B",\n  }\n}\n'})}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsx)(t.p,{children:"Please note that if a just-in-sequence part is also a serialized part, SerialPart should be used instead."}),"\n"]}),"\n",(0,a.jsx)(t.h4,{id:"creation-of-aspect-model-justinsequencepart",children:"Creation of Aspect Model JustInSequencePart"}),"\n",(0,a.jsx)(t.p,{children:"The only special step in creating this aspect model is the initial creation of the Unique ID for the corresponding part."}),"\n",(0,a.jsx)(t.h3,{id:"singlelevelbomasbuilt",children:"SingleLevelBomAsBuilt"}),"\n",(0,a.jsx)(t.p,{children:"The aspect provides the child parts (one structural level down) which the given object assembles."}),"\n",(0,a.jsx)(t.p,{children:"Aspect model in GitHub:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Version 3.0.0: ",(0,a.jsx)(t.a,{href:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.single_level_bom_as_built/3.0.0",children:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.single_level_bom_as_built/3.0.0"})]}),"\n"]}),"\n",(0,a.jsxs)(t.h4,{id:"example-aspect-model-singlelevelbomasbuilt-300-for-a-serialized-part",children:["Example: Aspect Model ",(0,a.jsx)(t.code,{children:"SingleLevelBomAsBuilt 3.0.0"})," for a Serialized Part"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'{\n  "catenaXId": "urn:uuid:580d3adf-1981-44a0-a214-13d6ceed9379",\n  "childItems": [\n    {\n      "catenaXId": "urn:uuid:d60b99b0-f269-42f5-94d0-64fe0946ed04",\n      "quantity": {\n        "value": 1.0,\n        "unit": "unit:piece"\n      },\n      "hasAlternatives": false,\n      "createdOn": "2022-02-03",\n      "businessPartner": "BPNL50096894aNXY",\n      "lastModifiedOn": "2022-02-03T14:48:54.709Z"\n    }\n  ]\n}\n'})}),"\n",(0,a.jsxs)(t.h4,{id:"aspect-model-singlelevelbomasbuilt-300-for-a-batch",children:["Aspect Model ",(0,a.jsx)(t.code,{children:"SingleLevelBomAsBuilt 3.0.0"})," for a Batch"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'{\n  "catenaXId": "urn:uuid:580d3adf-1981-44a0-a214-13d6ceed9379",\n  "childItems": [\n    {\n      "catenaXId": "urn:uuid:d60b99b0-f269-42f5-94d0-64fe0946ed04",\n      "quantity": {\n        "value": 5.0,\n        "unit": "unit:kilogram"\n      },\n      "hasAlternatives": false,\n      "createdOn": "2022-02-03",\n      "businessPartner": "BPNL50096894aNXY",\n      "lastModifiedOn": "2022-02-03T14:48:54.709Z"\n    }\n  ]\n}\n'})}),"\n",(0,a.jsx)(t.h4,{id:"creation-of-aspect-model-singlelevelbomasbuilt",children:"Creation of Aspect Model SingleLevelBomAsBuilt"}),"\n",(0,a.jsx)(t.p,{children:"The creation of the aspect model SingleLevelBomAsBuilt is more complicated. This aspect model contains the Unique ID of the manufacturer's part (attribute catenaXId) which is created - as described above - when the part's SerialPart or Batch aspect model is created. But it also contains the Unique IDs of the built-in parts (attributes childItems.catenaXId), as shown in the example above."}),"\n",(0,a.jsx)(t.p,{children:"For the build-in parts (child items), their Unique ID is not known to the manufacturer initially. Only known are the local identifiers that are printed on the physical part (serialized part or batch), i.e., manufacturer (BPN), manufacturer part ID and serial or batch number. To get the Unique ID of a built-in part, a data provider therefore has to do the following:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Get all necessary local IDs for the built-in part:","\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"manufacturer (BPN), manufacturer part ID and serial number for serialized parts"}),"\n",(0,a.jsx)(t.li,{children:"manufacturer (BPN), manufacturer part ID and batch number for batches"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["The next step is about getting the Unique ID of all built-in parts. There are two ways:","\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Unique IDs for built-in parts might already be available locally if Unique ID Push is supported by the data provider and the suppliers of the built-in parts."}),"\n",(0,a.jsx)(t.li,{children:"Query a supplier's Digital Twin Registry to find the digital twin for this built-in part"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t.h3,{id:"singlelevelusageasbuilt",children:"SingleLevelUsageAsBuilt"}),"\n",(0,a.jsxs)(t.p,{children:["The aspect provides the information in which parent part instance(s)/product(s) the given item is assembled into or used. This could be a 1:1 relationship in terms of e.g. a brake component or 1",":n",' for e.g. coatings. The parent item must refer to an object from the as built lifecycle phase, the child item may refer to an object from the as built or the as planned lifecycle phase. If one input part instance is regarded as an alternative to another input part instance (from same or different supplier), the relation should still be built, but marked with "IsOnlyPotentialParent".']}),"\n",(0,a.jsx)(t.p,{children:"Aspect model in GitHub:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Version 3.0.0: ",(0,a.jsx)(t.a,{href:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.single_level_usage_as_built/3.0.0",children:"https://github.com/eclipse-tractusx/sldt-semantic-models/tree/main/io.catenax.single_level_usage_as_built/3.0.0"})]}),"\n"]}),"\n",(0,a.jsxs)(t.h4,{id:"example-aspect-model-singlelevelusageasbuilt-300-for-a-serialized-part",children:["Example: Aspect Model ",(0,a.jsx)(t.code,{children:"SingleLevelUsageAsBuilt 3.0.0"})," for a Serialized Part"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'{\n  "catenaXId": "urn:uuid:580d3adf-1981-44a0-a214-13d6ceed9379",\n  "parentItems": [\n    {\n      "catenaXId": "urn:uuid:055c1128-0375-47c8-98de-7cf802c3241d",\n      "isOnlyPotentialParent": false,\n      "quantity": {\n        "value": 1.0,\n        "unit": "unit:piece"\n      },\n      "createdOn": "2022-02-03",\n      "businessPartner": "BPNL50096894aNXY",\n      "lastModifiedOn": "2022-02-03T14:48:54.709Z"\n    }\n  ],\n  "customers": [\n    "BPNL50096894aNXY"\n  ]\n}\n'})}),"\n",(0,a.jsxs)(t.h4,{id:"aspect-model-singlelevelusageasbuilt-300-for-a-batch",children:["Aspect Model ",(0,a.jsx)(t.code,{children:"SingleLevelUsageAsBuilt 3.0.0"})," for a Batch"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'{\n  "catenaXId": "urn:uuid:580d3adf-1981-44a0-a214-13d6ceed9379",\n  "parentItems": [\n    {\n      "catenaXId": "urn:uuid:055c1128-0375-47c8-98de-7cf802c3241d",\n      "isOnlyPotentialParent": false,\n      "quantity": {\n        "value": 25.0,\n        "unit": "unit:kilogram"\n      },\n      "createdOn": "2022-02-03",\n      "businessPartner": "BPNL50096894aNXY",\n      "lastModifiedOn": "2022-02-03T14:48:54.709Z"\n    }\n  ],\n  "customers": [\n    "BPNL50096894aNXY"\n  ]\n}\n'})}),"\n",(0,a.jsx)(t.h4,{id:"creation-of-aspect-model-singlelevelusageasbuilt",children:"Creation of Aspect Model SingleLevelUsageAsBuilt"}),"\n",(0,a.jsx)(t.p,{children:"The SingleLevelUsageAsBuilt aspect can only be completed by combining supplier and customer information. Only the supplier will create and update the Usage aspects. The missing information can be provided by the customer(s) with the help of notifications."}),"\n",(0,a.jsx)(t.p,{children:'For better understanding, simplified names "parents", "child", "customers" are used in the description.'}),"\n",(0,a.jsx)(t.p,{children:"These expressions \u201cparents\u201d, \u201cchild\u201d and \u201ccustomers\u201d can be translated into the attributes of the aspect model."}),"\n",(0,a.jsx)(t.p,{children:"Translation into SingleLevelUsageAsBuilt aspect (mapping):"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"\u201cparents\u201d -> \u201ccatenaXId\u201d in \u201cparentItems\u201d"}),"\n",(0,a.jsx)(t.li,{children:"\u201cchild\u201d -> overall \u201ccatenaXId\u201d in aspect"}),"\n",(0,a.jsx)(t.li,{children:"\u201ccustomers\u201d -> \u201cbusinessPartner\u201d in \u201ccustomers\u201d"}),"\n"]}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsx)(t.li,{children:"Supplier creates Digital Twin for his own produced part or material with corresponding \u201cpart\u201d aspect (partInstance or similar). In addition, the supplier creates a SingleLevelUsageAsBuilt aspect and attaches it to that Digital Twin. At this point of time the SingleLevelUsageAsBuilt aspect cannot contain \u201cparents\u201d information, only \u201cchild\u201d (unique ID of own product) and \u201ccustomers\u201d (BPNL of customers)."}),"\n",(0,a.jsx)(t.li,{children:"The customer produces a new product or material and creates a Digital Twin for it. When the customer uses the supplier part or material to produce the new product, he does not create an additional Digital Twin for the supplier product. Instead, the customer sends an appropriate notification to the supplier. This could happen when creating the SingleLevelBomAsBuilt aspect, because at this point of time all information is available at the sender side. The customer sends a notification to the supplier, containing the missing \u201cparents\u201d information for that input product (\u201cchild\u201d), both specified by the uniqueId, plus optional additional information like quantity and dates. \u201cParents\u201d is the produced product at the customer, \u201cchild\u201d is the used product coming from the supplier."}),"\n",(0,a.jsx)(t.li,{children:"Supplier receives notification from customer and updates own SingleLevelUsageAsBuilt aspect with the \u201cparents\u201d and additional information, if provided, like quantity and dates.\nIn case of a batch, the customer can use one batch to create several products. In that case, either several notifications can be sent, or one notification may contain several \u201cparents\u201d relations.\nIn case of a batch, parts of it can also be sold to several customers. So, the supplier has to put several \u201ccustomers\u201d into the SingleLevelUsageAsBuilt aspect and has to be ready to receive notifications from several customers that result in an update of the aspect\nThe customer MAY give access to the supplier for the Digital Twin, partType or similar aspect but it is not requested. The only information that is shared via notification is the catenaXID of the product that has been manufactured by the customer plus quantity and date."}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"The customer MAY NOT give access to the SingleLevelBomAsBuilt aspect that belongs to the Digital Twin of his own produced product because it may also contain information relating to other suppliers that may not be shared."}),"\n",(0,a.jsx)(t.h2,{id:"notice",children:"NOTICE"}),"\n",(0,a.jsxs)(t.p,{children:["This work is licensed under the ",(0,a.jsx)(t.a,{href:"https://creativecommons.org/licenses/by/4.0/legalcode",children:"CC-BY-4.0"}),"."]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"SPDX-License-Identifier: CC-BY-4.0"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2023 BASF SE"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2023 Bayerische Motoren Werke Aktiengesellschaft (BMW AG)"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2023 Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e.V. (represented by Fraunhofer ISST & Fraunhofer IML)"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2023 German Edge Cloud GmbH & Co. KG"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2023 Mercedes Benz AG"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2023 Robert Bosch Manufacturing Solutions GmbH"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2023 SAP SE"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2023 Siemens AG"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2023 T-Systems International GmbH"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2023 ZF Friedrichshafen AG"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2023 Contributors to the Eclipse Foundation"}),"\n",(0,a.jsxs)(t.li,{children:["Source URL: ",(0,a.jsx)(t.a,{href:"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io/tree/main/docs-kits/kits/industry-core-kit",children:"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io/tree/main/docs-kits/kits/industry-core-kit"})," (latest version)"]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>r});var i=n(96540);const a={},s=i.createContext(a);function l(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),i.createElement(s.Provider,{value:t},e.children)}},33438:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/industry-core-kit-logo-3d08fb630d6aee1f3c31ce2f65fa4dac.svg"},79209:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"kits/industry-core-kit/software-development-view/parts/aspect-model-overview","title":"aspect-model-overview","description":"\x3c!--","source":"@site/docs-kits/kits/industry-core-kit/software-development-view/parts/aspect-model-overview.mdx","sourceDirName":"kits/industry-core-kit/software-development-view/parts","slug":"/kits/industry-core-kit/software-development-view/parts/aspect-model-overview","permalink":"/docs-kits/next/kits/industry-core-kit/software-development-view/parts/aspect-model-overview","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"sidebar_class_name":"hidden"},"sidebar":"kits","previous":{"title":"Policies","permalink":"/docs-kits/next/kits/industry-core-kit/software-development-view/policies"},"next":{"title":"uniqueidpush","permalink":"/docs-kits/next/kits/industry-core-kit/software-development-view/parts/uniqueidpush"}}');var a=n(74848),s=n(28453);const l={sidebar_class_name:"hidden"},r=void 0,o={},c=[];function d(e){const t={p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"The following section shows an overview of all aspect models that are currently attached to part type or part instance twins by Catena-X use cases."}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{style:{textAlign:"left"},children:"Digital Twin Type"}),(0,a.jsx)(t.th,{style:{textAlign:"left"},children:"Aspect Model"}),(0,a.jsx)(t.th,{style:{textAlign:"left"},children:"Mandatory Version"}),(0,a.jsx)(t.th,{style:{textAlign:"left"},children:"Optional Versions"}),(0,a.jsx)(t.th,{style:{textAlign:"left"},children:"KIT"}),(0,a.jsx)(t.th,{style:{textAlign:"left"},children:"Standard"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"PartType"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"PartTypeInformation"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"1.0.0"}),(0,a.jsx)(t.td,{style:{textAlign:"left"}}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"Industry Core"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"CX-0126 Industry Core: Part Type v2.0.0"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{style:{textAlign:"left"}}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"SingleLevelBomAsPlanned"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"3.0.0"}),(0,a.jsx)(t.td,{style:{textAlign:"left"}}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"Industry Core"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"CX-0126 Industry Core: Part Type v2.0.0"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{style:{textAlign:"left"}}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"SingleLevelUsageAsPlanned"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"2.0.0"}),(0,a.jsx)(t.td,{style:{textAlign:"left"}}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"Industry Core"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"CX-0126 Industry Core: Part Type v2.0.0"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"PartInstance"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"SerialPart"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"3.0.0"}),(0,a.jsx)(t.td,{style:{textAlign:"left"}}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"Industry Core"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"CX-0127 Industry Core: Part Instance v2.0.0"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{style:{textAlign:"left"}}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"Batch"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"3.0.0"}),(0,a.jsx)(t.td,{style:{textAlign:"left"}}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"Industry Core"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"CX-0127 Industry Core: Part Instance v2.0.0"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{style:{textAlign:"left"}}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"JustInSequencePart"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"3.0.0"}),(0,a.jsx)(t.td,{style:{textAlign:"left"}}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"Industry Core"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"CX-0127 Industry Core: Part Instance v2.0.0"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{style:{textAlign:"left"}}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"SingleLevelBomAsBuilt"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"3.0.0"}),(0,a.jsx)(t.td,{style:{textAlign:"left"}}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"Industry Core"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"CX-0127 Industry Core: Part Instance v2.0.0"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{style:{textAlign:"left"}}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"SingleLevelUsageAsBuilt"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"3.0.0"}),(0,a.jsx)(t.td,{style:{textAlign:"left"}}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"Industry Core"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"CX-0127 Industry Core: Part Instance v2.0.0"})]})]})]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);