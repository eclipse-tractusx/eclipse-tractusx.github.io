"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[68826],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>h});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),d=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=d(e.components);return i.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},g=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=d(n),g=r,h=p["".concat(c,".").concat(g)]||p[g]||u[g]||a;return n?i.createElement(h,o(o({ref:t},s),{},{components:n})):i.createElement(h,o({ref:t},s))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=g;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var d=2;d<a;d++)o[d]=n[d];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}g.displayName="MDXCreateElement"},59116:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var i=n(87462),r=(n(67294),n(3905));const a={id:"PCF Exchange Kit Changelog",title:"Changelog",description:"PCF Exchange Kit",sidebar_position:1},o=void 0,l={unversionedId:"kits/PCF Exchange Kit/PCF Exchange Kit Changelog",id:"kits/PCF Exchange Kit/PCF Exchange Kit Changelog",title:"Changelog",description:"PCF Exchange Kit",source:"@site/docs-kits/kits/PCF Exchange Kit/changelog.md",sourceDirName:"kits/PCF Exchange Kit",slug:"/kits/PCF Exchange Kit/PCF Exchange Kit Changelog",permalink:"/docs-kits/next/kits/PCF Exchange Kit/PCF Exchange Kit Changelog",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"PCF Exchange Kit Changelog",title:"Changelog",description:"PCF Exchange Kit",sidebar_position:1},sidebar:"kits",previous:{title:"PCF Exchange KIT",permalink:"/docs-kits/next/category/pcf-exchange-kit"},next:{title:"Adoption View",permalink:"/docs-kits/next/kits/PCF Exchange Kit/Adoption View"}},c={},d=[{value:"PCF Exchange KIT",id:"pcf-exchange-kit",level:2},{value:"1.0.0 - 2024-03-08",id:"100---2024-03-08",level:2},{value:"Added",id:"added",level:3},{value:"Changed",id:"changed",level:3},{value:"Removed",id:"removed",level:3},{value:"0.1.0 - 2023-08-23",id:"010---2023-08-23",level:2},{value:"Added",id:"added-1",level:3},{value:"Changed",id:"changed-1",level:3},{value:"Removed",id:"removed-1",level:3}],s={toc:d};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"pcf-exchange-kit"},"PCF Exchange KIT"),(0,r.kt)("p",null,"All notable changes to this Kit will be documented in this file."),(0,r.kt)("h2",{id:"100---2024-03-08"},"[1.0.0]"," - 2024-03-08"),(0,r.kt)("h3",{id:"added"},"Added"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Flow description in case no material twin or PCF submodel exists"),(0,r.kt)("li",{parentName:"ul"},"Versions of referenced standards")),(0,r.kt)("h3",{id:"changed"},"Changed"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Open API updated to version 1.0.0 (Rel.24.03)"),(0,r.kt)("li",{parentName:"ul"},"Asset and Policy definitions updated"),(0,r.kt)("li",{parentName:"ul"},"Link to Framework Agreement updated"),(0,r.kt)("li",{parentName:"ul"},"Minor bugs fixed")),(0,r.kt)("h3",{id:"removed"},"Removed"),(0,r.kt)("p",null,"N/A"),(0,r.kt)("h2",{id:"010---2023-08-23"},"[0.1.0]"," - 2023-08-23"),(0,r.kt)("h3",{id:"added-1"},"Added"),(0,r.kt)("p",null,"Initial Version of the PCF exchange KIT including adoption and development view incl. all relevant API specifications."),(0,r.kt)("h3",{id:"changed-1"},"Changed"),(0,r.kt)("p",null,"N/A"),(0,r.kt)("h3",{id:"removed-1"},"Removed"),(0,r.kt)("p",null,"N/A"))}p.isMDXComponent=!0}}]);