"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([["86620"],{87001:function(e,t,n){n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var a=n(33656),i=n(74848),s=n(84429);let r={sidebar_position:1,title:"Adoption View",description:"The adoption view describes the basic infrastructure of cross-enterprise data exchange",id:"adoption-view"},o=void 0,c={},d=[{value:"Vision &amp; Mission",id:"vision--mission",level:2},{value:"Vision",id:"vision",level:3},{value:"Mission",id:"mission",level:3},{value:"Important terms and definitions",id:"important-terms-and-definitions",level:2},{value:"Basic values and principles",id:"basic-values-and-principles",level:2},{value:"Basic Concepts used for Dataspace Connectivity",id:"basic-concepts-used-for-dataspace-connectivity",level:2},{value:"Reasoning of the usage of the dataspace concept",id:"reasoning-of-the-usage-of-the-dataspace-concept",level:3},{value:"Decentralization",id:"decentralization",level:4},{value:"Scalability",id:"scalability",level:4},{value:"Data Sovereignty",id:"data-sovereignty",level:4},{value:"Interoperability",id:"interoperability",level:4},{value:"Use Case",id:"use-case",level:2},{value:"Business Architecture",id:"business-architecture",level:2},{value:"Definition of central terms used within the described processes",id:"definition-of-central-terms-used-within-the-described-processes",level:3},{value:"Contract Definition",id:"contract-definition",level:4},{value:"Contract Offer",id:"contract-offer",level:4},{value:"Catalog",id:"catalog",level:4},{value:"Contract Negotiation",id:"contract-negotiation",level:4},{value:"Contract Agreement",id:"contract-agreement",level:4},{value:"Transfer Process",id:"transfer-process",level:4},{value:"Interaction Overview",id:"interaction-overview",level:3},{value:"Reference Implementation",id:"reference-implementation",level:4},{value:"Contract Definition Design",id:"contract-definition-design",level:3},{value:"Discovery of Connectors",id:"discovery-of-connectors",level:3},{value:"Additional Resources",id:"additional-resources",level:2},{value:"Tutorial &amp; Whitepapers",id:"tutorial--whitepapers",level:3},{value:"Catena-X Standards",id:"catena-x-standards",level:3},{value:"Notice",id:"notice",level:2}];function h(e){let t={a:"a",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",mermaid:"mermaid",ol:"ol",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Connector kit banner",src:n(18433).A+"",width:"264",height:"245"})}),"\n",(0,i.jsxs)(t.p,{children:["The Connector KIT describes the basic infrastructure that is used for any cross-enterprise data exchange within\nCatena-X. The infrastructure is based on ",(0,i.jsx)(t.a,{href:"https://internationaldataspaces.org/",children:"Dataspaces"})," and\n",(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Self-sovereign_identity",children:"Self-Sovereign Identity"})," as basic mechanisms to achieve the targeted goals."]}),"\n",(0,i.jsx)(t.h2,{id:"vision--mission",children:"Vision & Mission"}),"\n",(0,i.jsx)(t.h3,{id:"vision",children:"Vision"}),"\n",(0,i.jsx)(t.p,{children:"Sharing data along the automotive supply chain adds great value for every participant. A wide range of use cases\nsupport efficiency in engineering, production and logistics. A prerequisite of the support of the transfer use cases\nis trust between the involved partners and a clear scope on which data is transfered and under which conditions it\ncan be used. The technologies described in the Connector KIT provide exactly that framework that allows trustworthy\nexchange within the automotive supply chain."}),"\n",(0,i.jsx)(t.h3,{id:"mission",children:"Mission"}),"\n",(0,i.jsx)(t.p,{children:"Data transfer between companies needs trust. But what exactly does trust mean? From a data provider side, it requires\nthat data is only given to authenticated consumers under defined conditions for the usage of the data. From a\nconsumer side, the data used has to be trustworthy, i.e., the source of the data is trusted and the semantics of the\ndata transferred is defined. For both sides, it is important to allow easy integration into existing IT landscapes\nand the usage of a wide variety of technologies to meet the diverse transfer use cases."}),"\n",(0,i.jsx)(t.p,{children:"Although there are established solutions on the internet for transferring and streaming data, the chosen dataspace\ntechnology provides features that exceed the capabilities of those solutions, as will be described in the upcoming\nsections."}),"\n",(0,i.jsx)(t.p,{children:"The mission of the Connector KIT is to provide all necessary information and technology references to perform\ntrustful data exchange within Catena-X. It bundles the interaction patterns, relevant standards, APIs, and reference\nimplementations for developers. The green boxes in the diagram below show what is in scope of this KIT."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Scope of the KIT",src:n(29814).A+"",width:"660",height:"420"})}),"\n",(0,i.jsx)(t.h2,{id:"important-terms-and-definitions",children:"Important terms and definitions"}),"\n",(0,i.jsx)(t.p,{children:"Before going into details, some basic terms need to be described as they are used throughout the KIT."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Dataspace: The overall term for the principles with which data transfer is organized within Catena-X. The technical\ndetails of those principles are the scope of this KIT. It is based on concepts developed by the ",(0,i.jsx)(t.a,{href:"https://internationaldataspaces.org/",children:"IDSA"}),"."]}),"\n",(0,i.jsx)(t.li,{children:"Data Provider: A data provider in Catena-X is a company, that owns data and offers that data to others."}),"\n",(0,i.jsx)(t.li,{children:"Data Consumer: A data consumer in Catena-X is a company, that consumes data offered by a data provider."}),"\n",(0,i.jsx)(t.li,{children:"Dataspace participant: A company acting as data provider or data consumer or both."}),"\n",(0,i.jsxs)(t.li,{children:["Connector: Is the common term for a technical component that is formally named (dataspace) participant agent, see\n",(0,i.jsx)(t.a,{href:"https://catenax-ev.github.io/docs/standards/overview",children:"CX-0018"})," for reference. It provides central features needed to act as data provider or\nconsumer within the Catena-X dataspace."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"basic-values-and-principles",children:"Basic values and principles"}),"\n",(0,i.jsx)(t.p,{children:"The data exchange in Catena-X follows a set of values and derived principles that drive the interaction patterns. In\ndetail, they are:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Decentralization: The data transfer from a data provider to a consumer is a peer-to-peer activity which does not\nrequire the involvement of third parties like a central authority. This comes with two major goals:","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"The data transfer cannot be observed outside of the two acting companies, especially the data is directly\ntransfered between the two parties."}),"\n",(0,i.jsx)(t.li,{children:"Data transfer activities are not blocked by outages of central services."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.li,{children:"Scalability: Efforts from an individual dataspace participant to maintain connections to relevamt participants as\nwell as the overall effort to support a dataspace with a virtually unlimited number of participants are both within\nreasonable limits."}),"\n",(0,i.jsx)(t.li,{children:"Data Sovereignty: Data providers have full control over who has access to the offered data and under which conditions\nthe data may be used. Data consumers have full knowledge over the conditions, resp. policies under which data is\navailable before committing to use an offer. The data transfer is preceded by a formal acceptance of the conditions\nof the transfer by both parties."}),"\n",(0,i.jsxs)(t.li,{children:["Interoperability: The data transfer is standardized in a way, that allows a data consumer to identify","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"which type of data is offered and what to expect semantically as content of the data,"}),"\n",(0,i.jsx)(t.li,{children:"how the data is transfered, i.e., which protocols resp. which APIs to use for accessing it,"}),"\n",(0,i.jsx)(t.li,{children:"under which conditions the data can be used."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"basic-concepts-used-for-dataspace-connectivity",children:"Basic Concepts used for Dataspace Connectivity"}),"\n",(0,i.jsxs)(t.p,{children:["The basic concept followed in Catana-X to achieve the targeted goals is the use of dataspace technology which is\nbased on the existence of a connector. A connector provides the technical implementation of the dataspace principles\nusing standardized protocols and assets maintained by the ",(0,i.jsx)(t.a,{href:"https://dataspace.eclipse.org",children:"Eclipse Dataspace Working Group"}),". The assets are\nbased on concepts created by the ",(0,i.jsx)(t.a,{href:"https://internationaldataspaces.org/",children:"IDSA"})," and are in accordance to principles of ",(0,i.jsx)(t.a,{href:"https://www.data-infrastructure.eu/GAIAX/Navigation/EN/Home/home.html",children:"Gaia-X"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"In detail, the relevant assets are:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https://github.com/eclipse-dataspace-protocol-base/DataspaceProtocol",children:"Dataspace Protocol (DSP)"}),": The DSP is a specified protocol for the interaction of a data consumer with a\ndata provider in order to find data offerings, get access to the data and managing the data transfer. In Catena-X,\nthe protocol is used with its HTTP binding, i.e., the requests and responses defined in the DSP are translated to\nREST API endpoints."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Identity: The DSP requires trustworthy identities for dataspace participants. For Catena-X, there are two relevant\nidentifiers which represent a participant's identity."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["A ",(0,i.jsx)(t.em,{children:"Business Partner Number"})," represents a company, resp., a legal entity (BPNL) by a persistent, globally unique,\nlegally binding identifier. Every legal entity can have at most one BPNL."]}),"\n",(0,i.jsx)(t.p,{children:"Due to those properties, BPNLs are used as unique reference for legal purposes."}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["A ",(0,i.jsx)(t.a,{href:"https://www.w3.org/TR/did-1.0",children:(0,i.jsx)(t.em,{children:"Decentralized Identifier"})})," (DID) is a globally unique identifier. Within Catena-X they are always\nassociated with a legal entity. DIDs are not persistent and a legal entity can have more than one DID associated\nwith it."]}),"\n",(0,i.jsxs)(t.p,{children:["The used ",(0,i.jsx)(t.a,{href:"https://w3c-ccg.github.io/did-method-web",children:"WEB-DID"})," technology allows the associated company to publish metadata, like service endpoints\nor public keys in a DID document, which can be accessed simply through knowledge of the DID."]}),"\n",(0,i.jsx)(t.p,{children:"DIDs, and especially the availability of required metadata in the DID document enable the targeted dentralization\ngoals. DIDs are, therefore, required as implementation technology."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Verifiable Credentials: Verifiable Credentials (VCs) are the digital equivalent to physical, printed and signed\ncertificates. They proof in a tamper-resistant way a set of claims to be valid for the holder as attested by the\nissuer of the VC."}),"\n",(0,i.jsx)(t.p,{children:"In Catena-X, VCs are used to provide proof of the membership in the Catena-X dataspace, of the identity of a\ndataspace participant by providing a claim that associates the BPNL to the holder of the VC, and of the acceptance\nof the general terms and conditions for the data exchange with a claim that attests the acceptance of the framework\nagreement."}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Self-sovereign_identity",children:"Self-Sovereign Identity (SSI)"}),": SSI is an approach to digital identity that gives\nthe owner of the identity control over the information used to prove this identity to services and applications\nacross the web. It makes use of ",(0,i.jsx)(t.em,{children:"Verifiable Credentials"})," which are stored in an owned wallet and provided directly to\nthe data provider in authentication scenarios proving the identity without involving any third party. The data\nprovider can verify the authenticity of the request by checking the validity through a trusted signature used\nby the VCs issuer during creation."]}),"\n",(0,i.jsx)(t.p,{children:"The following diagram shows the general interaction pattern of a SSI solution."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.mermaid,{value:"sequenceDiagram\n    participant P as Provider\n    participant C as Consumer\n    participant I as Issuance Authority\n\n    opt One-Time VC Issuance\n        C->>+I: Request VCs\n        I->>-C: Present VCs\n    end\n\n    C->>+P: Request access to data\n    P--\x3e>+C: Request VCs\n    C--\x3e>-P: Present VCs\n    P--\x3e>P: Verify validity of access request\n    P->>-C: Provide access details (e.g., a token)\n    C->>+P: Request data with access details\n    P->>-C: Requested data"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/eclipse-dataspace-dcp/decentralized-claims-protocol",children:"Decentralized Claims Protocol (DCP)"}),": The protocol used for exchanging verifiable credentials within\nCatena-X. In the scope of this KIT it allows a provider's connector to access the consumer's wallet to retrieve\nrelevant verifiable credentials. This is needed to authenticate the consumer, i.e., to enable the provider to\nidentify the consumer and to check prerequisites necessary to grant access to the offered data."]}),"\n",(0,i.jsxs)(t.li,{children:["Policies: A data offering by a data provider always comes with a contract proposal, i.e., a set of conditions under\nwhich the data can be accessed. These conditions are expressed in the form of\n",(0,i.jsxs)(t.a,{href:"https://www.w3.org/TR/odrl-model",children:[(0,i.jsx)(t.em,{children:"Open Digital Rights Language"})," (ODRL)"]})," policies. In Catena-X, there is a formal specification of a set\nof policy constraints which provide the legal definition to clarify the meaning of the constraint when used in a\ndata transfer contract. See the extra page on ",(0,i.jsx)(t.a,{href:"/docs-kits/next/kits/connector-kit/adoption-view/policies-in-catena",children:"policies"})," for a deeper insight into how policies are\nused within Catena-X."]}),"\n",(0,i.jsx)(t.li,{children:"Discovery: Based on the DID of a data provider, Catena-X defines a decentral discovery mechanism that allows to\nidentify connector services in order to initiate data transfer use cases. The discovery mechanism uses the DID\ndocument to provide information on connector endpoints in a decentral manner."}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["The described technologies are complete to initiate and conduct data transfers. The only prerequisite is knowledge of\nthe data provider's identifiers, both BPNL and DID. Catena-X defines additional mechanisms that allow to retrieve\nthis information. These mechanisms are out-of-scope for the Connector KIT. We refer to the\n",(0,i.jsx)(t.a,{href:"https://eclipse-tractusx.github.io/docs-kits/next/kits/business-partner-kit/adoption-view",children:"business partner KIT"})," for further information."]}),"\n",(0,i.jsx)(t.h3,{id:"reasoning-of-the-usage-of-the-dataspace-concept",children:"Reasoning of the usage of the dataspace concept"}),"\n",(0,i.jsx)(t.p,{children:"There are established interaction patterns in the internet, which have already proven their applicability in many\ndifferent use cases of typical interactions. An important technology in this regard is OAuth2 which is the de-facto\nstandard for authentication and authorization. Not sticking to such well-established standards, but instead using a\nnew technology for data transfer scenarios inside Catena-X requires solid justification."}),"\n",(0,i.jsx)(t.p,{children:"The rationale behind the need for using dataspace technology is basically driven from the underlying principles\ndescribed above. So let's look at how the dataspace technology supports favorably the achievement of those principles:"}),"\n",(0,i.jsx)(t.h4,{id:"decentralization",children:"Decentralization"}),"\n",(0,i.jsx)(t.p,{children:"With the knowledge of the transfer partner's identity, the whole process does only involve peer-to-peer interactions.\nThis is achieved mainly with the usage of the DID mechanism which allows to publish information on technical systems\ninvolved in the data transfer on the data provider side. With the use of the Self-Sovereign Identity mechanism,\nauthentication is driven by verifiable credentials which are a trustworthy mechanism that does not involve a third\nparty in the data transfer activity."}),"\n",(0,i.jsx)(t.h4,{id:"scalability",children:"Scalability"}),"\n",(0,i.jsx)(t.p,{children:"A major driver of scalability is the decentral nature of data transfer. This prevents bottlenecks or\nsingle-point-of-failures in the system."}),"\n",(0,i.jsxs)(t.p,{children:["Another pillar of scalability is the management of data exchange partners. Common approaches typically require either\na central system, like a central Identity Provider that centralizes identity management, or in a decentral approach\nan n",":m"," relationship in managing identities between the partners, i.e., every partner has to exchange in advance and\nwith every other partner bilaterally information like available service endpoints and access credentials which is a\nmajor effort."]}),"\n",(0,i.jsxs)(t.p,{children:["Using the Self-Sovereign Identity mechanism, these efforts are reduced to an one time issuance of the required\n",(0,i.jsx)(t.em,{children:"Verifiable Credentials"}),". Data transfer activities then do not require any authentication information exchange in\nadvance."]}),"\n",(0,i.jsx)(t.p,{children:"The dataspace technology handles peer-to-peer during the data transfer. This includes identification of data offerings,\nsemantics of the data transfer and content, authentication and authorization to gain access, or the concrete policies\nunder which the data consumer can use the data."}),"\n",(0,i.jsx)(t.h4,{id:"data-sovereignty",children:"Data Sovereignty"}),"\n",(0,i.jsx)(t.p,{children:"The main vehicle for data sovereignty are the policies associated to a data transfer. They ensure that the terms and\nconditions for the usage of the data are clear. As they are part of the authentication process, these conditions\nare transparent and from a provider side can be individualized to different partners. This enables maximum control on\nthe provisioning and the usage of the data."}),"\n",(0,i.jsxs)(t.p,{children:["A second important mechanism is the usage of verifiable credentials, as they can be used to prove certain claims. In\nCatena-X, the ",(0,i.jsx)(t.em,{children:"DataExchangeGovernance"})," credential ensures that a data consumer has accepted the framework agreement of\ndata transfer within the network, i.e., he agreed in advance to the underlying terms and conditions within Catena-X."]}),"\n",(0,i.jsx)(t.p,{children:"Policies support a wide range of terms and conditions. In a simple case, they can express the check of a set of\nverifiable credentials to prove the identity of the data consumer. A slightly more complex case is well suited for\nsupply chains which represent the dominant pattern adopted in Catena-X today. In such situations, the data transfer\nis driven by a pre-existing contract about the delivery of real world goods from a supplier to a customer. This contract\ntypically regulates the data transfer needs as well, so that the policy used for the data offers in the connector can\nsimply refer to that contract. More complex cases allow to express a whole range of constraints that can be used to\nspecify a detailed contract that applies to the data transfer."}),"\n",(0,i.jsx)(t.h4,{id:"interoperability",children:"Interoperability"}),"\n",(0,i.jsx)(t.p,{children:"Interoperability cannot be ensured by the concepts in the scope of this KIT. But the described infrastructure features\nenable interoperability on use case levels by providing general means to organize the data transfer. These features\nsupport"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"finding data offerings,"}),"\n",(0,i.jsx)(t.li,{children:"understanding the semantics of the transfer protocol used and the data provided,"}),"\n",(0,i.jsx)(t.li,{children:"agreeing on the policies under which data is available,"}),"\n",(0,i.jsx)(t.li,{children:"and, finally, gaining access to the data"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"All these features are provided by the dataspace technology out-of-the-box."}),"\n",(0,i.jsx)(t.p,{children:"Important to note is, that the applied pattern for initiating data transfers is applicable to a whole range of\ndifferent technologies. E.g., it is possible to use standard REST API access control using tokens. In this case the end\nresult can not be distinguished from the way OAuth2 handles the access to a resource server."}),"\n",(0,i.jsx)(t.p,{children:"But the connector can also handle other ways of interaction, like push scenarios, where data is actively pushed from the\nprovider to the consumer in a one time fashion or as a stream of data. The technical means, like a cloud storage or a\ntechnology to receive a constant stream of information has to be provided, but the overall mechanism to get access and\nto manage the data transfer is standardized within the mechanisms of the Dataspace Protocol."}),"\n",(0,i.jsx)(t.h2,{id:"use-case",children:"Use Case"}),"\n",(0,i.jsx)(t.p,{children:"The connector framework is basically an enabler for all kinds of use cases. By supporting different transfer\ntechnologies, there is no real limit concerning the support of different transfer requirements. The gain is a\nreliable framework that ensures the principles targeted at by Catena-X. That is the reason why all use cases defined\nby Catena-X are required to use the connector technology in order to facilitate the data exchange scenarios of the\nuse case."}),"\n",(0,i.jsx)(t.h2,{id:"business-architecture",children:"Business Architecture"}),"\n",(0,i.jsxs)(t.p,{children:["The dataspace protocol suggests a ",(0,i.jsx)(t.em,{children:"Connector"}),", which implements the state machines and interactions patterns\nspecified in the protocol. A connector is thereby separated into two distinguished concepts the ",(0,i.jsx)(t.em,{children:"Control Plane"}),",\nwhich implements the protocol interactions, and a ",(0,i.jsx)(t.em,{children:"Data Plane"}),", which realizes the data transfer with a specific\ntransfer protocol. The control plane as such is a static concept which can be implemented and used in multiple\ntransfer scenarios, whereas the data plane is a virtual concept that is provided in multiple facets in order to\nimplement different data transfer types, like standard http rest api access, transferring binary large objects, or\ncontinuous data streaming."]}),"\n",(0,i.jsx)(t.p,{children:"The following sequence diagram shows the general interaction patterns of the control plane, explained afterwards in\nmore detail."}),"\n",(0,i.jsx)(t.mermaid,{value:"sequenceDiagram\n    Consumer Control Plane->>+Provider Control Plane: Catalog Request\n    Provider Control Plane->>-Consumer Control Plane: Catalog\n\n    Consumer Control Plane->>Provider Control Plane: Contract Negotiation Request\n    Consumer Control Plane->>+Provider Control Plane: Contract Negotiation Status?\n    Provider Control Plane->>-Consumer Control Plane: Status of Contract Negotiation Process\n\n    Consumer Control Plane->>+Provider Control Plane: Start Transfer Process\n\n    alt Pull Scenario\n        Consumer Control Plane->>+Provider Control Plane: Status Transfer Process?\n        Provider Control Plane->>-Consumer Control Plane: Status of Transfer Process + EDR if started\n    else Push Scenario\n        Provider Control Plane->>Provider Data Plane: Initiate data Transfer\n    end"}),"\n",(0,i.jsx)(t.p,{children:"The general interaction pattern is driven by the Dataspace Protocol which defines three levels of interaction:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Catalog Request:\nThe catalog request provides to the consumer a list of availabe data offerings. The catalog thereby is a\n",(0,i.jsx)(t.a,{href:"https://www.w3.org/TR/vocab-dcat-3",children:"DCAT catalog"})," that provides a list of ",(0,i.jsx)(t.em,{children:"Datasets"}),". A dataset describes a concrete data offer with\nrelevant metadata, like the type of data, transfer technology, api type and most important the ",(0,i.jsx)(t.em,{children:"Usage Policy"}),"\nunder which the data is offered for usage. The dataset also provides a link to the endpoint which allows to start\nthe contract negotiation."]}),"\n",(0,i.jsxs)(t.p,{children:["The catalog only contains data offers which are accessible by the requesting data consumer. When defining data\noffers, the data provider in addition to the usage policy has to define an ",(0,i.jsx)(t.em,{children:"Access Policy"}),", which is basically a\nfilter applied by the provider connector during the creation of the catalog. The access policy typically limits\naccess to a defined dataset, so that only legitimate consumers can see the data offer in the provided catalog."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Contract Negotiation:\nAccess to a data offer is provided via a contract, which is basically an agreed upon usage policy. In Catena-X this\nagreement of a policy is a legally binding contract."}),"\n",(0,i.jsxs)(t.p,{children:["The necessary information needed to start a negotiation is provided in a dataset. This includes the endpoint to\ncall for initiating the negotiation and the usage policy that is the contract proposal for the data consumer to\ngain access. Based on this information, a consumer starts the contract negotiation process by calling the\ncorresponding endpoint. In DSP, this is an asynchronous process, so the data consumer has to check frequently,\nwhether the process has finished. The concrete state machine, the negotiation passes through is described in the\n",(0,i.jsx)(t.a,{href:"https://github.com/eclipse-dataspace-protocol-base/DataspaceProtocol",children:"DSP spec"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"In Catena-X, the usage policy in a dataset has to be used literally when initiating a contract negotiation. As of\ntoday, DSP features concerning policy negotiation are disabled and the consumer only has the choice to accept the\nproposed usage policy or to not negotiate for the offer."}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Transfer Process:\nWhen the contract is finalized, the data is accessible. To finally do the transfer, the consumer has to initiate a\ntransfer process. The main purpose of the transfer process is to provide access information, so that the data\ntransfer can actually be executed. For that, it has to be distinguished between ",(0,i.jsx)(t.em,{children:"Pull"})," and ",(0,i.jsx)(t.em,{children:"Push"})," transfers."]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"In a pull transfer, the consumer is the active part, i.e., he is initiating a request and receives the data as\nresponse. The typical example for this is using a REST API. In this case, initiating a transfer process results\nin the return of a data structure called Endpoint Data Reference (EDR). It contains all necessary information to\naccess the intended resource server, i.e., the endpoint url and the necessary access token. In the Tractus-X\nconnector, the EDR contains refresh information, i.e., the endpoint url and the refresh token to renew the\naccess token if expired."}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"In a push transfer, initiating the transfer ends with the provider to be actively pushing data to a consumer\nowned data sink. This can be a cloud storage service or a REST API to which data is send via, e.g., a post request.\nTo enable the provider to send the data, the access information, i.e., the endpoint url of the sink and the access\ncredentials have to be provided by the consumer in the transfer process request."}),"\n",(0,i.jsx)(t.p,{children:"Push transfers are by default a one time transfer, i.e., a transfer process is initiated, the provider pushes\nthe contracted data to the sink and finalizes the transfer process. An additional transfer mechanism to be\nestablished soon is a non-finite push, i.e., the transfer process is not terminated and the provider sends new\ndata elements as soon as they are created until the process is stopped manually or by expiry of the access\ninformation."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"After the transfer process is started, the data plane is responsible for the data transfer, i.e., it mediates between\nthe consuming service and the providing service to get the data transfered. The data plane is a transfer technology\nspecific implementation that connects an existing technology to the concepts of the dataspace concept. The technology\nspecific information on data endpoints used and access information needed are part of the transfer process creation."}),"\n",(0,i.jsx)(t.h3,{id:"definition-of-central-terms-used-within-the-described-processes",children:"Definition of central terms used within the described processes"}),"\n",(0,i.jsx)(t.h4,{id:"contract-definition",children:"Contract Definition"}),"\n",(0,i.jsxs)(t.p,{children:["A ",(0,i.jsx)(t.em,{children:"Contract Definition"})," is the data offer as it is managed by a data provider. The contract definition has three major\nparts:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["The technical data source that provides the data, often called ",(0,i.jsx)(t.em,{children:"Asset"}),". This consists of a description of the type\nof data, e.g., the data model with a version indicator, the way to access the data, e.g., a REST API reference or\nan object reference to push to a cloud storage, and additional metadata that is needed by a consumer to identify\nthe type of data and the way to access it technically."]}),"\n",(0,i.jsx)(t.li,{children:"The usage policy that specifies the conditions under which the data can be used."}),"\n",(0,i.jsx)(t.li,{children:"For internal usage, the contract definition refers to an access policy. The access policy specifies the visibility\nof the contract definition, i.e., the conditions that have to be met to provide the definition in a catalog\nrequested by a certain data consumer."}),"\n"]}),"\n",(0,i.jsx)(t.h4,{id:"contract-offer",children:"Contract Offer"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.em,{children:"Contract Offer"})," is a representation of the ",(0,i.jsx)(t.a,{href:"#contract-definition",children:"contract definition"})," for a specific consumer\nand serves as basis for a particular contract negotiation. It is created in a catalog request by the data provider.\nThe data provider iterates over all contract definitions, checks the visibility by applying the access policy, and,\nif applicable, creates the data offer, by instantiating the definition to an unique one time offer, that a consumer can\nnegotiate for. The contract offer is represented as a ",(0,i.jsx)(t.em,{children:"Dataset"})," in the catalog following the ",(0,i.jsx)(t.a,{href:"https://www.w3.org/TR/vocab-dcat-3",children:"DCAT"}),"\nspecification."]}),"\n",(0,i.jsx)(t.h4,{id:"catalog",children:"Catalog"}),"\n",(0,i.jsxs)(t.p,{children:["A ",(0,i.jsx)(t.em,{children:"Catalog"})," is an aggregation of contract offer objects expressed as ",(0,i.jsx)(t.a,{href:"https://www.w3.org/TR/vocab-dcat-3",children:"DCAT"})," datasets. It is the result of a\ncatalog request and lists all offers a particular data consumer is able to negotiate for."]}),"\n",(0,i.jsx)(t.h4,{id:"contract-negotiation",children:"Contract Negotiation"}),"\n",(0,i.jsxs)(t.p,{children:["A ",(0,i.jsx)(t.em,{children:"Contract Negotiation"})," is the process in which a contract offer requested by a data consumer for negotiation is\ntransformed into a contract agreement that is the confirmed contract between the two parties. This process is inherently\nasynchronous. It is built by a state machine which is passed through during the process."]}),"\n",(0,i.jsx)(t.h4,{id:"contract-agreement",children:"Contract Agreement"}),"\n",(0,i.jsxs)(t.p,{children:["A ",(0,i.jsx)(t.em,{children:"Contract Agreement"})," represents the agreed-upon terms of access of offered data between the data provider and the\ndata consumer. Contract agreements are long living objects, the typical validity period of a contract agreement is\none year and it can be used as often as necessary during that time frame."]}),"\n",(0,i.jsx)(t.h4,{id:"transfer-process",children:"Transfer Process"}),"\n",(0,i.jsxs)(t.p,{children:["After a successful contract agreement, a ",(0,i.jsx)(t.em,{children:"Transfer Process"})," can be started from the consumer connector to initiate a\ndata transfer based on a contract agreement. A transfer process is represented by a state machine as well. Once started\nit can be used multiple times to execute a transfer of data from provider to consumer. It can be terminated manually or\nautomatically, depending on the transfer type and aspects like expiry of access information. Transfer processes can be\nstarted as long as a contract assigment has not expired."]}),"\n",(0,i.jsx)(t.p,{children:"The transfer process carries access information between consumer and provider. Depending on the direction of the data\ntransfer, push or pull, access credentials, like tokens need to be sent, so that the active part can transfer the\ndata from the data source to the data sink."}),"\n",(0,i.jsx)(t.h3,{id:"interaction-overview",children:"Interaction Overview"}),"\n",(0,i.jsx)(t.p,{children:"The following figure shows the involved services and the basic interaction between the services."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Basic Service Interaction",src:n(47488).A+"",width:"810",height:"700"})}),"\n",(0,i.jsxs)(t.p,{children:["The figure shows the interaction between a consumer ",(0,i.jsx)(t.em,{children:"Participant A"})," and a provider ",(0,i.jsx)(t.em,{children:"Participant B"}),". In the following,\nthe different interactions are described in detail."]}),"\n",(0,i.jsx)(t.p,{children:"The first interaction is done on the provider side, by preparing the data and creating the contract definition to\noffer the data to potential consumers."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"P1: Manage the data offers and policies. Build contract definitions by combining offered data with an usage and an\naccess policy."}),"\n",(0,i.jsxs)(t.li,{children:["P2: Provide the data according to the offered contract definitions and in the transfer type technology used, e.g.,\noperate a resource server like a ",(0,i.jsx)(t.em,{children:"Digital Twin Registry"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["With these steps, data is available and offered in a way that it can be found by consumers and access can be\nnegotiated. The ",(0,i.jsx)(t.em,{children:"Provider Business Application"})," is a service that allows to manage provided data, e.g., manually or\nfor larger setups, by automation of translating data created in an internal IT system into the required data structures."]}),"\n",(0,i.jsxs)(t.p,{children:["The data transfer is initiated at the consumer. If the consumer does not have the necessary details, to initiate the\ntransfer, he has to check some centrally operated services (step R1), that provide him with the necessary identifiers\n(BPNL and DID) to initiate the decentral data transfer. The central services work in a way, that it is impossible to\ntrack the concrete interest in a company, e.g., the mentioned ",(0,i.jsx)(t.em,{children:"BDRS"})," (BPN-DID Resolution Service) provides a list of\nall known mappings between BPNLs and DIDs. It is a local mechanism in the consumer connector to identify the concrete\nmapping needed in a certain situation."]}),"\n",(0,i.jsx)(t.p,{children:"Based on the identifiers, the data transfer can be negotiated. This is done with the following steps:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["N1: The ",(0,i.jsx)(t.em,{children:"Consumer Business Application"})," executes a request as defined in the Dataspace Protocol to be executed by the\n",(0,i.jsx)(t.em,{children:"Control Plane"})," of the consumer connector."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["N2: The ",(0,i.jsx)(t.em,{children:"Control Plane"})," resolves the provider's DID to access the corresponding DID document. Since Catena-X uses\nthe ",(0,i.jsxs)(t.a,{href:"https://w3c-ccg.github.io/did-method-web",children:["did",":web"]})," method, the control plane uses the URL in the DID to identify the endpoint at which the\nDID document is hosted."]}),"\n",(0,i.jsx)(t.p,{children:"The whole step can be omited if the DID document is already cached."}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["N3: To initiate a DSP request, the consumer ",(0,i.jsx)(t.em,{children:"Control Plane"})," has to provide an access token, that allows the\nproviders ",(0,i.jsx)(t.em,{children:"Control Plane"})," to retrieve verifiable credentials in order to check whether the request is valid and all\nprerequisites are met. This token is provided by the consumer's ",(0,i.jsx)(t.em,{children:"Wallet"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["N4: The consumer ",(0,i.jsx)(t.em,{children:"Control Plane"})," executes the intended DSP request by calling the corresponding DSP endpoint at the\nprovider ",(0,i.jsx)(t.em,{children:"Control Plane"}),". With the request, the consumer sends the token retrieved in step N3."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["N5: The provider ",(0,i.jsx)(t.em,{children:"Control Plane"})," retrieves the verifiable credentials necessary to validate the legitimacy of the\nrequest by calling the consumer's ",(0,i.jsx)(t.em,{children:"Wallet"})," of the consumer using the token created in step N3. The control plane\ngets access to the credentials and checks their validity. In addition, the control plane checks whether all other\nconditions like further policy constraints are met and if successful executes the request and provides an appropriate\nresponse to the consumer control plane."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"The steps N1 to N5 are bascially the same for every DSP call, be it to request the catalog, to initiate a contract\nnegotiation or to start of a transfer request. The Consumer Business Application executes the required DSP requests\nin the appropriate order basing the next request on data received in the previous request. In the day-to-day business\nsituations, the dominating action on DSP level is the management of transfer requests, as the catalog retrieval and\nthe contract negotiation are only necessary, if access to a new data offering is required. If the concept is applied\nefficiently, such requests are the exception, as most data can be retrieved using existing contracts."}),"\n",(0,i.jsxs)(t.p,{children:["The final step is the concrete data transfer, after the ",(0,i.jsx)(t.em,{children:"Transfer Process"})," is started. The figure shows the standard\npull case, where the ",(0,i.jsx)(t.em,{children:"Consumer Business Application"})," has received an access token which is used to access the\nprovided resource. In the current setup, the access is controlled by the ",(0,i.jsx)(t.em,{children:"Data Plane"})," of the provider, i.e., the data\nplane service acts as a proxy that receives the request (step T1) and forwards it to the actual ",(0,i.jsx)(t.em,{children:"Data Source"})," (step\nT2). On the way back, the data is again forwarded by the ",(0,i.jsx)(t.em,{children:"Data Plane"})," to the calling ",(0,i.jsx)(t.em,{children:"Business Application"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["In the push case, the transfer is immediately executed when a ",(0,i.jsx)(t.em,{children:"Transfer Process"})," is started on DSP level. The\n",(0,i.jsx)(t.em,{children:"Control Plane"})," of the provider initiates the data transfer by providing the request to the ",(0,i.jsx)(t.em,{children:"Data Plane"}),". The Data\nPlane uses the given access information to copy the requested data object from the data source to the consumer given\ndata sink. In the finite case, it terminates the ",(0,i.jsx)(t.em,{children:"Transfer Process"}),". The new infinite push transfer keeps the\n",(0,i.jsx)(t.em,{children:"Transfer Process"})," open and, initiated by the availability of new data, executes another push of the new data object\nto the consumer provided data sink."]}),"\n",(0,i.jsx)(t.h4,{id:"reference-implementation",children:"Reference Implementation"}),"\n",(0,i.jsxs)(t.p,{children:["Eclipse Tractus-X provides a reference implementation of a connector in the repository\n",(0,i.jsx)(t.a,{href:"https://github.com/eclipse-tractusx/tractusx-edc",children:"tractusx-edc"}),". The reference implementation provides a full fledged implementation of the\ndescribed features and principles, ready to be used in productive environments. The implementation is based on the\n",(0,i.jsx)(t.a,{href:"https://eclipse-edc.github.io",children:"Eclipse Dataspace Components connector"})," implementation, which is by itself a reference implementation for\nthe specifications provided by the ",(0,i.jsx)(t.a,{href:"https://dataspace.eclipse.org",children:"EDWG"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["The reference implementation offers a non-standardized API for a dataspace participant to manage the operated\nconnector. More information on how the reference implementation can be used in your environment are given in the\n",(0,i.jsx)(t.a,{href:"/docs-kits/next/kits/connector-kit/software-development-view/architecture",children:"development-view"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"contract-definition-design",children:"Contract Definition Design"}),"\n",(0,i.jsx)(t.p,{children:"An important aspect for an efficient usage of the dataspace technology is the design of contract definitions. Due to\nthe longevity of contract agreements and the overhead implied by catalog requests and contract negotiations, it makes\nsense to create data offers which provide not only one data point. In general, it should not be necessary to\nnegotiate for the same type of data more than once."}),"\n",(0,i.jsxs)(t.p,{children:["The aspect of contract definition design is discussed in an ",(0,i.jsx)(t.a,{href:"/docs-kits/next/kits/connector-kit/adoption-view/contract-definition-design",children:"extra page"})," of the adotion view."]}),"\n",(0,i.jsx)(t.h3,{id:"discovery-of-connectors",children:"Discovery of Connectors"}),"\n",(0,i.jsx)(t.p,{children:"Catena-X provides a decentral discovery mechanism where all offered connector endpoints are contained in a\nparticipant's DID document. A DID document is public and can be accessed by anyone who has knowledge of the\ncorresponding DID."}),"\n",(0,i.jsx)(t.p,{children:"The referenced endpoint is actually pointing to a specific version metadata endpoint in a connector that provides\ninformation on supported DSP versions. As for backward compatibility, a connector must be capable to communicate with\nmultiple version of the DSP. This intermediate step is necessary to identify the correct DSP endpoint family. An\nimplicaton that comes with this regulation is, that a connector provides a certain DSP protocol version as separate\nsubtree of its REST API endpoint tree."}),"\n",(0,i.jsx)(t.p,{children:"With the information retrieved from the version metadata endpoint, the consumer can build the final endpoint address\nto execute a DSP request, e.g., a catalog request. The reference implementation will provide a support endpoint that\nexecutes the whole discovery process and the selection of the right version endpoint, so that a consumer using the\nconnector to go through the DSP protocol cycle does not need to do path calculations on its own."}),"\n",(0,i.jsxs)(t.p,{children:["For technical details on this process, please refer to the ",(0,i.jsx)(t.a,{href:"/docs-kits/next/kits/connector-kit/software-development-view/architecture",children:"development view"})," which will guide you to\nthe details of the interactions."]}),"\n",(0,i.jsx)(t.h2,{id:"additional-resources",children:"Additional Resources"}),"\n",(0,i.jsx)(t.h3,{id:"tutorial--whitepapers",children:"Tutorial & Whitepapers"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["There is a extensive tutorial on setting up and using an EDC in the context of the Catena-X dataspace in the\n",(0,i.jsx)(t.a,{href:"https://eclipse-tractusx.github.io/docs/tutorials/e2e",children:"Tutorials"})," section of this website."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"catena-x-standards",children:"Catena-X Standards"}),"\n",(0,i.jsxs)(t.p,{children:["The Connector KIT builds on the ",(0,i.jsx)(t.a,{href:"https://catenax-ev.github.io/docs/standards/overview",children:"Catena-X Standards"}),". Every data consumer and provider in Catena-X\nis required to comply with these standards. The described concepts in this KIT are defined in these standards:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://catenax-ev.github.io/docs/standards/overview",children:"CX-0018 Eclipse Data Space Connector (EDC)"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://catenax-ev.github.io/docs/standards/overview",children:"CX-0049 DID Document Schema"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://catenax-ev.github.io/docs/standards/overview",children:"CX-0050 Catenea-X Specific Credential"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://catenax-ev.github.io/docs/standards/overview",children:"CX-0152 Policy Constraints For Data Exchange"})}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"notice",children:"Notice"}),"\n",(0,i.jsxs)(t.p,{children:["This work is licensed under the ",(0,i.jsx)(t.a,{href:"https://creativecommons.org/licenses/by/4.0/legalcode",children:"CC-BY-4.0"}),"."]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"SPDX-License-Identifier: CC-BY-4.0"}),"\n",(0,i.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2024 Contributors of the Eclipse Foundation"}),"\n",(0,i.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2025 Cofinity-X GmbH"}),"\n",(0,i.jsxs)(t.li,{children:["Source URL: ",(0,i.jsx)(t.a,{href:"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io/blob/main/docs-kits/kits/connector-kit/adoption-view/adoption-view.md",children:"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io/blob/main/docs-kits/kits/connector-kit/adoption-view/adoption-view.md"})]}),"\n",(0,i.jsxs)(t.li,{children:["Images: ",(0,i.jsx)(t.a,{href:"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io/blob/main/docs-kits/kits/connector-kit/adoption-view/assets",children:"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io/blob/main/docs-kits/kits/connector-kit/adoption-view/assets"})]}),"\n"]})]})}function l(e={}){let{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},47488:function(e,t,n){n.d(t,{A:()=>a});let a=n.p+"assets/images/connector_interactions.drawio-c1cb3aa85f96ab9600f42770a4d27cc8.png"},29814:function(e,t,n){n.d(t,{A:()=>a});let a=n.p+"assets/images/kit_scope.drawio-7fe13ed41d836a1871066a186264e460.png"},18433:function(e,t,n){n.d(t,{A:()=>a});let a=n.p+"assets/images/connector-kit-logo-8456c4e8c495465295c71b90a21353ba.svg"},84429:function(e,t,n){n.d(t,{R:()=>r,x:()=>o});var a=n(96540);let i={},s=a.createContext(i);function r(e){let t=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(s.Provider,{value:t},e.children)}},33656:function(e){e.exports=JSON.parse('{"id":"kits/connector-kit/adoption-view/adoption-view","title":"Adoption View","description":"The adoption view describes the basic infrastructure of cross-enterprise data exchange","source":"@site/docs-kits/kits/connector-kit/adoption-view/adoption-view.md","sourceDirName":"kits/connector-kit/adoption-view","slug":"/kits/connector-kit/adoption-view/","permalink":"/docs-kits/next/kits/connector-kit/adoption-view/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Adoption View","description":"The adoption view describes the basic infrastructure of cross-enterprise data exchange","id":"adoption-view"},"sidebar":"kits","previous":{"title":"Changelog","permalink":"/docs-kits/next/kits/connector-kit/changelog"},"next":{"title":"Adoption View","permalink":"/docs-kits/next/kits/connector-kit/adoption-view/"}}')}}]);