"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[43483],{17309:(e,i,t)=>{t.d(i,{A:()=>n});const n=t.p+"assets/images/quality_notifications-23f7bdd131c428a32023090beb6ed807.svg"},28453:(e,i,t)=>{t.d(i,{R:()=>s,x:()=>r});var n=t(96540);const a={},o=n.createContext(a);function s(e){const i=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),n.createElement(o.Provider,{value:i},e.children)}},28470:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"kits/traceability-kit/software-development-view/app-provider","title":"App Provider","description":"Traceability Kit","source":"@site/docs-kits_versioned_docs/version-24.12/kits/traceability-kit/software-development-view/app-provider.mdx","sourceDirName":"kits/traceability-kit/software-development-view","slug":"/kits/traceability-kit/software-development-view/app-provider","permalink":"/docs-kits/24.12/kits/traceability-kit/software-development-view/app-provider","draft":false,"unlisted":false,"tags":[],"version":"24.12","sidebarPosition":2,"frontMatter":{"id":"app-provider","title":"App Provider","description":"Traceability Kit","sidebar_position":2},"sidebar":"kits","previous":{"title":"Data Provider","permalink":"/docs-kits/24.12/kits/traceability-kit/software-development-view/data-provider"},"next":{"title":"aspect-models","permalink":"/docs-kits/24.12/kits/traceability-kit/software-development-view/parts/aspect-models"}}');var a=t(74848),o=t(28453);const s={id:"app-provider",title:"App Provider",description:"Traceability Kit",sidebar_position:2},r=void 0,c={},l=[{value:"Quality Notifications",id:"quality-notifications",level:2},{value:"Quality Notification Process",id:"quality-notification-process",level:3},{value:"Quality Notification API",id:"quality-notification-api",level:3},{value:"Block Notifications",id:"block-notifications",level:2},{value:"Block Status Model",id:"block-status-model",level:3},{value:"Block Notification API",id:"block-notification-api",level:3},{value:"Asset Registration via Connector",id:"asset-registration-via-connector",level:2},{value:"Asset Creation",id:"asset-creation",level:3},{value:"Policy Creation",id:"policy-creation",level:3},{value:"Asset Consumption via Connector",id:"asset-consumption-via-connector",level:2},{value:"Versioning",id:"versioning",level:3},{value:"Policy Check",id:"policy-check",level:3},{value:"NOTICE",id:"notice",level:2}];function d(e){const i={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.p,{children:(0,a.jsx)(i.img,{alt:"Traceability kit banner",src:t(39005).A+"",width:"285",height:"244"})}),"\n",(0,a.jsx)(i.p,{children:"The following page offers specific developer resources, including payloads and API endpoints for data consumer and app provider. It is important to read the business and architecture view first to understand everything."}),"\n",(0,a.jsx)(i.h2,{id:"quality-notifications",children:"Quality Notifications"}),"\n",(0,a.jsxs)(i.p,{children:["The traceability app providers are supposed to implement the capabilities to enable the standardized exchange of information on quality notifications in Catena-X network (Quality Alert and Quality Investigation).\n",(0,a.jsx)(i.strong,{children:"Quality investigations"})," refer to sending standardized notifications to direct suppliers (top-down) while ",(0,a.jsx)(i.strong,{children:"Quality Alerts"})," refer to sending notifications to direct customers (bottom-up). This allows supply chain stakeholders to promptly transmit quality notifications to their immediate business partners, in instances where quality issues pertain to supplied products or impact already manufactured items incorporating the defective component, until the root of the problem or affected end-products are determined.\nThis feature will enable the whole industry to exchange and act upon quality issues in a more standardized, integrated, accelerated and precise manner in order to streamline claim management, avoid general and inaccurate recalls as well as reduce cost and safeguard brand reputation."]}),"\n",(0,a.jsxs)(i.p,{children:["In order to uniquely reference the affected parts across the network in the context of a quality incident, the exchange of quality notifications uses Catena-X Unique ID, which are the network-wide unique identifiers for a serialized part or batch, for which a digital twin has been created. Therefore, an app provider should also deliver capabilities for standardized creation of digital twins of vehicles, parts and materials as described in the ",(0,a.jsx)(i.a,{href:"../../../category/industry-core-kit",children:"Industry Core KIT"})," and ",(0,a.jsx)(i.a,{href:"../../../category/digital-twin-kit",children:"Digital Twin KIT"}),"."]}),"\n",(0,a.jsx)(i.p,{children:(0,a.jsx)(i.img,{alt:"Quality Notifications",src:t(17309).A+""})}),"\n",(0,a.jsx)(i.h3,{id:"quality-notification-process",children:"Quality Notification Process"}),"\n",(0,a.jsx)(i.p,{children:"The notification process takes place between traceability applications or application stacks, and the focus is on minimal interaction, which must be supported by all applications participating in a quality notification or quality investigation scenario. This minimal interaction includes sending and receiving of quality notification as well as updating of the notification state.  Application internals like user journeys, process steps or workflows for notification creation and management in an application are not standardized within Catena-X, and therefore omitted."}),"\n",(0,a.jsxs)(i.p,{children:["The notification states and their cycle are described in the following figure.\n",(0,a.jsx)(i.img,{alt:"Notification State Model",src:t(71319).A+"",width:"601",height:"473"})]}),"\n",(0,a.jsx)(i.h3,{id:"quality-notification-api",children:"Quality Notification API"}),"\n",(0,a.jsxs)(i.p,{children:["A standardized set of APIs and payloads are specified to enable partners to send quality notifications in a standardized way while already knowing which parts (i.e., serialized parts or batches) and which direct customers or suppliers are affected. Notifications are - in contrast to classical data offers in Catena-X which is created for consumption by external stakeholders - a way to push notification related data from a sender to a receiver. For now, this notification API is limited to the sending and receiving of quality notifications as well as the update of the notification status following a state model.\nIt is important to mention that the notification API shall be implemented into each participant's traceability solution or solution stack in order to be able to receive information related to quality issues. The implemented endpoints shall be able to process the defined request body and respond with the HTTP status codes and - if required - reply with the defined response body.\nMeanwhile, this notification API shall only be accessible after successful contract negotiation via Connector based on ",(0,a.jsx)(i.a,{href:"https://docs.internationaldataspaces.org/dataspace-protocol/",children:"Dataspace Protocol (DSP)"}),", since the API is made available as part of an EDC data asset with usage policy attached. Please refer to the corresponding Notification API specifications for more details:"]}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:(0,a.jsx)(i.a,{href:"https://eclipse-tractusx.github.io/api-hub/eclipse-tractusx.github.io/kit-traceability-notifications-openAPI-1.2.1/swagger-ui/",children:"Notification API (v1.2.1)"})}),"\n",(0,a.jsx)(i.li,{children:(0,a.jsx)(i.a,{href:"https://eclipse-tractusx.github.io/api-hub/eclipse-tractusx.github.io/kit-traceability-notifications-openAPI-2.0.0/swagger-ui/",children:"Notification API (v2.0.0)"})}),"\n"]}),"\n",(0,a.jsxs)(i.blockquote,{children:["\n",(0,a.jsxs)(i.p,{children:["\u270b"," For the current release, ",(0,a.jsx)(i.strong,{children:"version 1.2.1 is mandatory"})," and must be supported by every App provider. The newer version 2.0.0 can be supported optionally."]}),"\n"]}),"\n",(0,a.jsx)(i.h2,{id:"block-notifications",children:"Block Notifications"}),"\n",(0,a.jsx)(i.p,{children:"While quality notifications are primarily aimed at (first) contact between business partners, block notifications represent an extended form of data exchange in order to actively initiate an immediate measure to block or sort out the produced parts at the customer's production or logistics. As the quality notifications, block notifications take place between traceability applications or other application stacks, so that this functionality must be implemented by both business partners application."}),"\n",(0,a.jsxs)(i.p,{children:["In this case, block notifications include a ",(0,a.jsx)(i.strong,{children:"notification status similar to quality notifications"})," to track communication, but ",(0,a.jsx)(i.strong,{children:"also include a new status model"})," for each individual part of the block notification to provide additional information. For example, whether the part was blocked or whether the process to block a part was canceled."]}),"\n",(0,a.jsxs)(i.blockquote,{children:["\n",(0,a.jsxs)(i.p,{children:["\u270b"," Since the Catena-x unique ID is used for the individually listed (damaged) parts in the block notification, the app provider should also provide functions for the standardized creation of digital twins of vehicles, parts and materials, as already mentioned in the quality notifications section."]}),"\n"]}),"\n",(0,a.jsx)(i.h3,{id:"block-status-model",children:"Block Status Model"}),"\n",(0,a.jsxs)(i.p,{children:["In order to track the blocking process in the Catena X network, a defined status model is used for each part of the block notification:\n",(0,a.jsx)(i.img,{alt:"Block Status Model",src:t(88920).A+""})]}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"ACTIVE means that the part has been identified as a damaged and safety-critical part and must therefore be blocked on the customer side."}),"\n",(0,a.jsx)(i.li,{children:"PART_BLOCKED is used when the recipient has received the block notification and actually blocks / sorts out the damaged parts as a measure."}),"\n",(0,a.jsx)(i.li,{children:"CANCELED serves as the update status of the component originally identified to be blocked if the supplier subsequently determines that the original part does meet safety requirements, is not damaged or that the information was sent by mistake. This status can also be set by the manufacturer if, after an (initial) analysis, the part does not require a block."}),"\n"]}),"\n",(0,a.jsx)(i.h3,{id:"block-notification-api",children:"Block Notification API"}),"\n",(0,a.jsxs)(i.p,{children:["A standardized API and corresponding payloads are specified for block notification to enable and ensure the exchange of information that is critical to the blocking process in a standardized way. At this point, the notification API is focused on sending and receiving notifications with a full stack of block information and on updating a previously sent notification by changing the block status. The implemented endpoints shall be able to process the defined request body and respond with the HTTP status codes and - if required - reply with the defined response body. Meanwhile, the Block Notification API shall only be accessible after successful contract negotiation via Connector based on ",(0,a.jsx)(i.a,{href:"https://docs.internationaldataspaces.org/dataspace-protocol/",children:"Dataspace Protocol (DSP)"}),", since the API is made available as part of an EDC data asset with usage policy attached. Please refer to the corresponding Block Notification API specification for more details:"]}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:(0,a.jsx)(i.a,{href:"https://eclipse-tractusx.github.io/api-hub/eclipse-tractusx.github.io/kit-traceability-block-notifications-openAPI-1.0.0/swagger-ui/",children:"Block Notification API (v1.0.0)"})}),"\n"]}),"\n",(0,a.jsxs)(i.blockquote,{children:["\n",(0,a.jsxs)(i.p,{children:["\u270b"," For  the current release, ",(0,a.jsx)(i.strong,{children:"version 1.0.0 is optional"})," and MUST be supported by every App provider from the next (major) release. The block notifications are not standardized yet, but will be released as a new optional functionality in the CX-0125 Traceability Use Case Standard as of the next release 25.03."]}),"\n"]}),"\n",(0,a.jsx)(i.h2,{id:"asset-registration-via-connector",children:"Asset Registration via Connector"}),"\n",(0,a.jsx)(i.p,{children:"Since the notification APIs are published towards the network using a data asset/contract definition in terms of the dataspace protocol (DSP), there are general guidelines defined for registering a notification receiving endpoint within a data asset. The traceability solutions are supposed to implement a similar data asset with the same structure and provisioning towards Catena-X.\nIt is important to mention that it could be possible that more than one notification endpoint needs to be made available in parallel towards the network in order to support the versioning and compatibility strategy in the Catena-X ecosystem."}),"\n",(0,a.jsx)(i.h3,{id:"asset-creation",children:"Asset Creation"}),"\n",(0,a.jsxs)(i.p,{children:["The notification endpoint providers must set properties ",(0,a.jsx)(i.code,{children:"dct:type"})," and ",(0,a.jsx)(i.code,{children:"cx-common:version"})," which are used to classify the asset so that partner app providers are able to filter the right assets."]}),"\n",(0,a.jsxs)(i.p,{children:["In general, during EDC asset creation, the notification API version needs to provided for ",(0,a.jsx)(i.code,{children:"cx-common:version"})," as specified in OpenAPI documentation. For ",(0,a.jsx)(i.code,{children:"dct:type"})," the following asset typizations should be used during implementation:"]}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"ReceiveQualityInvestigationNotification"}),"\n",(0,a.jsx)(i.li,{children:"UpdateQualityInvestigationNotification"}),"\n",(0,a.jsx)(i.li,{children:"ReceiveQualityAlertNotification"}),"\n",(0,a.jsx)(i.li,{children:"UpdateQualityAlertNotification"}),"\n",(0,a.jsx)(i.li,{children:"ReceiveBlockNotification"}),"\n",(0,a.jsx)(i.li,{children:"UpdateBlockNotification"}),"\n"]}),"\n",(0,a.jsxs)(i.p,{children:["Please refer to the ",(0,a.jsx)(i.a,{href:"../../../category/digital-twin-kit",children:"Digital Twin KIT"})," for more details."]}),"\n",(0,a.jsx)(i.p,{children:(0,a.jsx)(i.strong,{children:"Example Payload for Asset Creation:"})}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-json",children:'{\n  "@context": {\n    "edc": "https://w3id.org/edc/v0.0.1/ns/",\n    "cx-common": "https://w3id.org/catenax/ontology/common#",\n    "cx-taxo": "https://w3id.org/catenax/taxonomy#",\n    "dct": "https://purl.org/dc/terms/"\n  },\n  "@id": "{{ _.edcAssetId }}",\n  "properties": {\n    "dct:type": {\n      "@id": "cx-taxo:ReceiveQualityInvestigationNotification"\n    },\n    "cx-common:version": "1.2",\n  },\n  "privateProperties": {\n  },\n  "dataAddress": {\n    "@type": "DataAddress",\n    "type": "HttpData",\n    "baseUrl": "{{ _.url_backend }}",\n    "proxyQueryParams": "true",\n    "proxyPath": "true",\n    "proxyMethod": "false",\n    "oauth2:tokenUrl": "{{ _.url_keycl_backend }}",\n    "oauth2:clientId": "{{ _.client_id_backend }}",\n    "oauth2:clientSecretKey": "{{ _.sec_name_vault }}"\n  }\n}\n'})}),"\n",(0,a.jsx)(i.h3,{id:"policy-creation",children:"Policy Creation"}),"\n",(0,a.jsxs)(i.p,{children:["For general guidelines for policy creation, please refer to ",(0,a.jsx)(i.a,{href:"../../../category/industry-core-kit",children:"Industry Core KIT"})," and ",(0,a.jsx)(i.a,{href:"../../../category/connector-kit",children:"Connector KIT"}),'.\nIt is possible to restrict visibility of data offer for notification API with access policy either for members of Catena-X (\u201cMembership\u201d) and one or several Data Consumers identified by a specific business partner number ("BusinessPartnerNumber").\nAs for usage policy, participants and related services must restrict the data usage for notification endpoints by using the following policy rules:']}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:['Data Exchange Governance (leftOperand: \u201cFrameworkAgreement\u201d) \u2013 The official "Data Exchange Governance" is published on ',(0,a.jsx)(i.a,{href:"https://catena-x.net/en/catena-x-introduce-implement/governance-framework-for-data-space-operations",children:"Catena-X website"})]}),"\n",(0,a.jsxs)(i.li,{children:["at least one use case purpose (\u201cUsagePurpose\u201d) from the ",(0,a.jsx)(i.a,{href:"https://github.com/catenax-eV/cx-odrl-profile",children:"ODRL policy repository"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"for quality notifications, the corresponding usage policy MUST be used (leftOperand: \u201cqualityNotifications\u201d)"}),"\n",(0,a.jsx)(i.li,{children:"for block notifications, the same usage policy as quality notifications MUST be used (leftOperand: \u201cqualityNotifications\u201d)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"Additionally, respective usage policies MAY include the following policy rule:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"Reference Contract (\u201cContractReference\u201d)."}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:(0,a.jsx)(i.strong,{children:"Example Payloads for Policy Creation:"})}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://w3id.org/edc/v0.0.1/ns/"\n   },\n   "@id": "<POLICY-ID>",\n   "policy": {\n     "@context": [\n       "http://www.w3.org/ns/odrl.jsonld",\n         {\n           "cx-policy": "https://w3id.org/catenax/policy/"\n         }\n      ],\n        "@type": "Set",\n        "profile": "cx-policy:profile2405",\n        "permission": [\n      {\n      "action": "use",\n        "constraint": {\n          "and": [\n            {\n              "leftOperand": "cx-policy:FrameworkAgreement",\n              "operator": "eq",\n              "rightOperand": "DataExchangeGovernance:1.0"\n            },\n            {\n              "leftOperand": "cx-policy:UsagePurpose",\n              "operator": "eq",\n              "rightOperand": "cx.core.qualityNotifications:1"\n            }\n          ]\n        }\n      }\n    ]\n  }\n}\n'})}),"\n",(0,a.jsx)(i.h2,{id:"asset-consumption-via-connector",children:"Asset Consumption via Connector"}),"\n",(0,a.jsx)(i.h3,{id:"versioning",children:"Versioning"}),"\n",(0,a.jsxs)(i.p,{children:["The notification sender as well as a requestor of an asset must be able to handle multiple assets for this endpoint, being differentiated only by the version (",(0,a.jsx)(i.code,{children:"cx-common:version"}),") and should choose the asset with the highest compatible version number implemented by themselves. If the requestor cannot find a compatible version with their own, the requestor must not initiate contract negotiation."]}),"\n",(0,a.jsx)(i.h3,{id:"policy-check",children:"Policy Check"}),"\n",(0,a.jsxs)(i.p,{children:["Meanwhile, the requesting application must be able to validate whether the attached policy constraints (see section ",(0,a.jsx)(i.em,{children:"Policy Creation"})," above) in the data assets follow company-defined rules and regulations, while selecting the appropriate offer. If no data offer is compliant with company rules for a queried data asset, the requestor must terminate the data transfer."]}),"\n",(0,a.jsx)(i.h2,{id:"notice",children:"NOTICE"}),"\n",(0,a.jsxs)(i.p,{children:["This work is licensed under the ",(0,a.jsx)(i.a,{href:"https://creativecommons.org/licenses/by/4.0/legalcode",children:"CC-BY-4.0"}),"."]}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"SPDX-License-Identifier: CC-BY-4.0"}),"\n",(0,a.jsx)(i.li,{children:"SPDX-FileCopyrightText: 2023 BASF SE"}),"\n",(0,a.jsx)(i.li,{children:"SPDX-FileCopyrightText: 2023 Bayerische Motoren Werke Aktiengesellschaft (BMW AG)"}),"\n",(0,a.jsx)(i.li,{children:"SPDX-FileCopyrightText: 2023 Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e.V. (represented by Fraunhofer ISST & Fraunhofer IML)"}),"\n",(0,a.jsx)(i.li,{children:"SPDX-FileCopyrightText: 2023 German Edge Cloud GmbH & Co. KG"}),"\n",(0,a.jsx)(i.li,{children:"SPDX-FileCopyrightText: 2023 Mercedes Benz AG"}),"\n",(0,a.jsx)(i.li,{children:"SPDX-FileCopyrightText: 2023 Robert Bosch Manufacturing Solutions GmbH"}),"\n",(0,a.jsx)(i.li,{children:"SPDX-FileCopyrightText: 2023 SAP SE"}),"\n",(0,a.jsx)(i.li,{children:"SPDX-FileCopyrightText: 2023 Siemens AG"}),"\n",(0,a.jsx)(i.li,{children:"SPDX-FileCopyrightText: 2023 T-Systems International GmbH"}),"\n",(0,a.jsx)(i.li,{children:"SPDX-FileCopyrightText: 2023 ZF Friedrichshafen AG"}),"\n",(0,a.jsx)(i.li,{children:"SPDX-FileCopyrightText: 2023 Contributors to the Eclipse Foundation"}),"\n",(0,a.jsxs)(i.li,{children:["Source URL: ",(0,a.jsx)(i.a,{href:"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io/tree/main/docs-kits/kits/traceability-kit",children:"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io/tree/main/docs-kits/kits/traceability-kit"})," (latest version)"]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},39005:(e,i,t)=>{t.d(i,{A:()=>n});const n=t.p+"assets/images/doc-traceability_header-minified-114fb0cc97a4825a22f0ae83af993b2a.png"},71319:(e,i,t)=>{t.d(i,{A:()=>n});const n=t.p+"assets/images/notification-state-model-ba6b4e2b7c7173004d15a2eb76e6863b.png"},88920:(e,i,t)=>{t.d(i,{A:()=>n});const n=t.p+"assets/images/block-notification-state-model-1acddcabe687c9c99ee717367f287d51.svg"}}]);