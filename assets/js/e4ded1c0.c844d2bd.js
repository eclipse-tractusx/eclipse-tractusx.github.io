"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[15242],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),h=r,m=d["".concat(p,".").concat(h)]||d[h]||u[h]||o;return n?a.createElement(m,i(i({ref:t},c),{},{components:n})):a.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=h;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},64684:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const o={},i="DataPlane Proxy Consumer API",l={unversionedId:"kits/tractusx-edc/edc-extensions/dataplane-proxy/edc-dataplane-proxy-consumer-api/README",id:"version-23.12/kits/tractusx-edc/edc-extensions/dataplane-proxy/edc-dataplane-proxy-consumer-api/README",title:"DataPlane Proxy Consumer API",description:"This is an API extension that interacts with the EDR/cache for directly fetching the data",source:"@site/docs-kits_versioned_docs/version-23.12/kits/tractusx-edc/edc-extensions/dataplane-proxy/edc-dataplane-proxy-consumer-api/README.md",sourceDirName:"kits/tractusx-edc/edc-extensions/dataplane-proxy/edc-dataplane-proxy-consumer-api",slug:"/kits/tractusx-edc/edc-extensions/dataplane-proxy/edc-dataplane-proxy-consumer-api/",permalink:"/docs-kits/23.12/kits/tractusx-edc/edc-extensions/dataplane-proxy/edc-dataplane-proxy-consumer-api/",draft:!1,tags:[],version:"23.12",frontMatter:{},sidebar:"kits",previous:{title:"Data Encryption Extension",permalink:"/docs-kits/23.12/kits/tractusx-edc/edc-extensions/data-encryption/"},next:{title:"DataPlane Proxy Provider API",permalink:"/docs-kits/23.12/kits/tractusx-edc/edc-extensions/dataplane-proxy/edc-dataplane-proxy-provider-api/"}},p={},s=[{value:"Configuration",id:"configuration",level:2}],c={toc:s};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"dataplane-proxy-consumer-api"},"DataPlane Proxy Consumer API"),(0,r.kt)("p",null,"This is an API extension that interacts with the EDR/cache for directly fetching the data\nwithout knowing the EDR."),(0,r.kt)("p",null,"It contains only one endpoint with ",(0,r.kt)("inlineCode",{parentName:"p"},"POST")," for fetching data:"),(0,r.kt)("p",null,"The path is ",(0,r.kt)("inlineCode",{parentName:"p"},"<proxyContext>/aas/request")," and the body is something like this example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "assetId": "1",\n  "endpointUrl": "http://localhost:8181/api/gateway/aas/test"\n}\n')),(0,r.kt)("p",null,"The body should contain the ",(0,r.kt)("inlineCode",{parentName:"p"},"assetId")," or the ",(0,r.kt)("inlineCode",{parentName:"p"},"transferProcessId")," which identify the data that we want to fetch\nand an ",(0,r.kt)("inlineCode",{parentName:"p"},"endpointUrl")," which is the provider gateway on which the data is available. More info ",(0,r.kt)("a",{parentName:"p",href:"/docs-kits/23.12/kits/tractusx-edc/edc-extensions/dataplane-proxy/edc-dataplane-proxy-provider-api/"},"here")," on the gateway."),(0,r.kt)("p",null,"Alternatively if the ",(0,r.kt)("inlineCode",{parentName:"p"},"endpointUrl")," is not known or the gateway on the provider side is not configured, it can be omitted and the ",(0,r.kt)("inlineCode",{parentName:"p"},"Edr#endpointUrl"),"\nwill be used. In this scenario if needed users can provide additional properties to the request for composing the final\nurl:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pathSegments")," sub path to append to the base url"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"queryParams")," query parameters to add to the url")),(0,r.kt)("p",null,"Example with base url ",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:8080/test")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "assetId": "1",\n  "pathSegments": "/sub",\n  "queryParams": "foo=bar"\n}\n')),(0,r.kt)("p",null,"The final url will look like ",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:8080/test/sub?foo=bar")," composed by the DataPlane manager with the Http request flow,"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note: the endpoint is not protected with configured ",(0,r.kt)("inlineCode",{parentName:"p"},"AuthenticationService"),", which most likely will be the token based (auth key) one.")),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"web.http.proxy.port"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"8186")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"web.http.proxy.path"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"/proxy")))))}d.isMDXComponent=!0}}]);