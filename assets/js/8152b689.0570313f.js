"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[8843],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>h});var i=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},s=Object.keys(e);for(i=0;i<s.length;i++)t=s[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)t=s[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=i.createContext({}),l=function(e){var n=i.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=l(e.components);return i.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},m=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=l(t),m=r,h=u["".concat(c,".").concat(m)]||u[m]||d[m]||s;return t?i.createElement(h,a(a({ref:n},p),{},{components:t})):i.createElement(h,a({ref:n},p))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,a=new Array(s);a[0]=m;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o[u]="string"==typeof e?e:r,a[1]=o;for(var l=2;l<s;l++)a[l]=t[l];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8475:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var i=t(87462),r=(t(67294),t(3905));const s={},a="Business Partner Validation Extension",o={unversionedId:"kits/tractusx-edc/edc-extensions/business-partner-validation/README",id:"version-23.12/kits/tractusx-edc/edc-extensions/business-partner-validation/README",title:"Business Partner Validation Extension",description:"Using the Business Partner Validation Extension it's possible to add configurable validation against",source:"@site/docs-kits_versioned_docs/version-23.12/kits/tractusx-edc/edc-extensions/business-partner-validation/README.md",sourceDirName:"kits/tractusx-edc/edc-extensions/business-partner-validation",slug:"/kits/tractusx-edc/edc-extensions/business-partner-validation/",permalink:"/docs-kits/23.12/kits/tractusx-edc/edc-extensions/business-partner-validation/",draft:!1,tags:[],version:"23.12",frontMatter:{},sidebar:"kits",previous:{title:"EDC Extensions",permalink:"/docs-kits/23.12/kits/tractusx-edc/docs/kit/operation-view/page10_extensions"},next:{title:"Tractus-X OAuth2 Extension",permalink:"/docs-kits/23.12/kits/tractusx-edc/edc-extensions/cx-oauth2/"}},c={},l=[{value:"Single BusinessPartnerNumber example",id:"single-businesspartnernumber-example",level:2},{value:"Multiple BusinessPartnerNumber example",id:"multiple-businesspartnernumber-example",level:2},{value:"Important: EDC Policies are input sensitive",id:"important-edc-policies-are-input-sensitive",level:2},{value:"Example 1 for accidentially public",id:"example-1-for-accidentially-public",level:3},{value:"Example 2 for accidentially public",id:"example-2-for-accidentially-public",level:3}],p={toc:l};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"business-partner-validation-extension"},"Business Partner Validation Extension"),(0,r.kt)("p",null,"Using the Business Partner Validation Extension it's possible to add configurable validation against\nBPNs in the ",(0,r.kt)("inlineCode",{parentName:"p"},"ContractDefinition.AccessPolicy"),". Using a BPN in ",(0,r.kt)("inlineCode",{parentName:"p"},"ContractDefinition.ContractPolicy")," is possible, too, but once the contract is complete there is no policy enforcement in place from the EDC."),(0,r.kt)("p",null,"It is recommended to have a basic understanding of the EDC contract/policy domain before using this extension. The\ncorresponding documentation can be found in the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/eclipse-edc/Connector"},"EDC GitHub Repository"),"."),(0,r.kt)("p",null,"The business partner number of another connector is part of its DAPS token. Once a BPN constraint is used in an access\npolicy the connector checks the token before sending out contract offers."),(0,r.kt)("p",null,"Example of business partner constraint:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "leftExpression": {\n    "value": "BusinessPartner"\n  },\n  "rightExpression": {\n    "value": "BPNLCDQ90000X42KU"\n  },\n  "operator": "EQ"\n}\n')),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"leftExpression")," must always contain 'BusinessPartner', so that the policy functions of this extension are invoked.\nAdditionally, the only ",(0,r.kt)("inlineCode",{parentName:"p"},"operator")," that is supported by these policy functions is 'EQ'. Finally, the ",(0,r.kt)("inlineCode",{parentName:"p"},"rightExpression"),"\nmust contain the Business Partner Number."),(0,r.kt)("h2",{id:"single-businesspartnernumber-example"},"Single BusinessPartnerNumber example"),(0,r.kt)("p",null,"The most simple BPN policy would allow the usage of certain data to a single Business Partner. An example ",(0,r.kt)("inlineCode",{parentName:"p"},"Policy")," is\nshown below. In this example the ",(0,r.kt)("inlineCode",{parentName:"p"},"edctype")," properties are added, so that this policy may even be sent to the Management API."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "uid": "<PolicyId>",\n  "prohibitions": [],\n  "obligations": [],\n  "permissions": [\n    {\n      "edctype": "dataspaceconnector:permission",\n      "action": {\n        "type": "USE"\n      },\n      "constraints": [\n        {\n          "edctype": "AtomicConstraint",\n          "leftExpression": {\n            "edctype": "dataspaceconnector:literalexpression",\n            "value": "BusinessPartnerNumber"\n          },\n          "rightExpression": {\n            "edctype": "dataspaceconnector:literalexpression",\n            "value": "<BPN>"\n          },\n          "operator": "EQ"\n        }\n      ]\n    }\n  ]\n}\n')),(0,r.kt)("h2",{id:"multiple-businesspartnernumber-example"},"Multiple BusinessPartnerNumber example"),(0,r.kt)("p",null,"To define multiple BPN and allow multiple participants to use the data the ",(0,r.kt)("inlineCode",{parentName:"p"},"orconstraint")," should be used.\nIt will permit the constraints contained to be evaluated using the ",(0,r.kt)("inlineCode",{parentName:"p"},"OR")," operator."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "permissions": [\n    {\n      "edctype": "dataspaceconnector:permission",\n      "action": {\n        "type": "USE"\n      },\n      "constraints": [\n        {\n          "edctype": "dataspaceconnector:orconstraint",\n          "constraints": [\n            {\n              "edctype": "AtomicConstraint",\n              "leftExpression": {\n                "edctype": "dataspaceconnector:literalexpression",\n                "value": "BusinessPartnerNumber"\n              },\n              "rightExpression": {\n                "edctype": "dataspaceconnector:literalexpression",\n                "value": "<BPN1>"\n              },\n              "operator": "EQ"\n            },\n            {\n              "edctype": "AtomicConstraint",\n              "leftExpression": {\n                "edctype": "dataspaceconnector:literalexpression",\n                "value": "BusinessPartnerNumber"\n              },\n              "rightExpression": {\n                "edctype": "dataspaceconnector:literalexpression",\n                "value": "<BPN2>"\n              },\n              "operator": "EQ"\n            },\n            \n            ...\n            \n            // other constraints can be added\n          ]\n        }\n      ],\n      "duties": []\n    }\n  ]\n}\n')),(0,r.kt)("h2",{id:"important-edc-policies-are-input-sensitive"},"Important: EDC Policies are input sensitive"),(0,r.kt)("p",null,"Please be aware that the EDC ignores all Rules and Constraint it does not understand. This could cause your constrained policies to be public."),(0,r.kt)("h3",{id:"example-1-for-accidentially-public"},"Example 1 for accidentially public"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "uid": "1",\n  "prohibitions": [],\n  "obligations": [],\n  "permissions": [\n    {\n      "edctype": "dataspaceconnector:permission",\n      "action": {\n        "type": "MY-USE"\n      },\n      "constraints": [\n        {\n          "edctype": "AtomicConstraint",\n          "leftExpression": {\n            "edctype": "dataspaceconnector:literalexpression",\n            "value": "BusinessPartnerNumber"\n          },\n          "rightExpression": {\n            "edctype": "dataspaceconnector:literalexpression",\n            "value": "BPNLCDQ90000X42KU"\n          },\n          "operator": "EQ"\n        }\n      ]\n    }\n  ]\n}\n')),(0,r.kt)("p",null,"This policy is public available, even though the constraint is described correct. The reason is, that this extension only registeres the Policy.Action ",(0,r.kt)("inlineCode",{parentName:"p"},"USE")," within the EDC. Any other Action Type will have the EDC ignore the corresponding permission, hence interpret the polics as public policy."),(0,r.kt)("h3",{id:"example-2-for-accidentially-public"},"Example 2 for accidentially public"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "uid": "1",\n  "prohibitions": [],\n  "obligations": [],\n  "permissions": [\n    {\n      "edctype": "dataspaceconnector:permission",\n      "action": {\n        "type": "USE"\n      },\n      "constraints": [\n        {\n          "edctype": "AtomicConstraint",\n          "leftExpression": {\n            "edctype": "dataspaceconnector:literalexpression",\n            "value": "BusinesPartnerNumber"\n          },\n          "rightExpression": {\n            "edctype": "dataspaceconnector:literalexpression",\n            "value": "BPNLCDQ90000X42KU"\n          },\n          "operator": "EQ"\n        }\n      ]\n    }\n  ]\n}\n')),(0,r.kt)("p",null,"This policy is public available, too. The cause is a typo in the left-expression of the constraint. This extension only registers the ",(0,r.kt)("inlineCode",{parentName:"p"},"Constraint.LeftExpression")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BusinessPartnerNumber")," within the EDC. Any other term will have the EDC ignore the corresponding constraint, hence interpret the policies as public policy."))}u.isMDXComponent=!0}}]);