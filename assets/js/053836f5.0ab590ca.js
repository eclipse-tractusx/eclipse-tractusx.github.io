"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[91995],{7512:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/notification-state-model-f8cd5276c90367b6e8a2d9e87262810e.svg"},11273:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/notification_send-receive-alert-7631791cddaac9cb91334fccf6befb98.svg"},23488:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/notification_send-receive-14e40f6ad0ea7444c724d1c1f1280a9e.svg"},28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>o});var n=i(96540);const a={},s=n.createContext(a);function r(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(s.Provider,{value:t},e.children)}},29684:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/notification_update-investigation-c58e58d53a99194ce69a2962fa499457.svg"},38472:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"kits/traceability-kit/architecture-view","title":"Architecture View","description":"Traceability Kit","source":"@site/docs-kits_versioned_docs/version-24.12/kits/traceability-kit/architecture-view.mdx","sourceDirName":"kits/traceability-kit","slug":"/kits/traceability-kit/architecture-view","permalink":"/docs-kits/24.12/kits/traceability-kit/architecture-view","draft":false,"unlisted":false,"tags":[],"version":"24.12","sidebarPosition":2,"frontMatter":{"id":"architecture-view","title":"Architecture View","description":"Traceability Kit","sidebar_position":2},"sidebar":"kits","previous":{"title":"Business View","permalink":"/docs-kits/24.12/kits/traceability-kit/business-view"},"next":{"title":"Operation View","permalink":"/docs-kits/24.12/kits/traceability-kit/software-operation-view"}}');var a=i(74848),s=i(28453);const r={id:"architecture-view",title:"Architecture View",description:"Traceability Kit",sidebar_position:2},o=void 0,l={},c=[{value:"Scope and Context",id:"scope-and-context",level:2},{value:"Building Block View",id:"building-block-view",level:2},{value:"Traceability Components",id:"traceability-components",level:3},{value:"Catena-X Core Services",id:"catena-x-core-services",level:3},{value:"Data Provisioning",id:"data-provisioning",level:2},{value:"Basic Data Processing Flow",id:"basic-data-processing-flow",level:3},{value:"Digital Twins and Aspect Models",id:"digital-twins-and-aspect-models",level:3},{value:"Policies",id:"policies",level:3},{value:"Access Policies",id:"access-policies",level:3},{value:"Usage Policies",id:"usage-policies",level:3},{value:"Traceability App",id:"traceability-app",level:2},{value:"Functional Requirements",id:"functional-requirements",level:3},{value:"Non-Functional Requirements",id:"non-functional-requirements",level:3},{value:"Quality Investigations &amp; Quality Alerts",id:"quality-investigations--quality-alerts",level:3},{value:"Notification State Model",id:"notification-state-model",level:4},{value:"Block Information",id:"block-information",level:3},{value:"Block Notification Interaction",id:"block-notification-interaction",level:4},{value:"Runtime View",id:"runtime-view",level:2},{value:"Processes for Sending, Updating and Resolving Quality Notifications",id:"processes-for-sending-updating-and-resolving-quality-notifications",level:3},{value:"Sending and Receiving of a Quality Investigation",id:"sending-and-receiving-of-a-quality-investigation",level:4},{value:"Sending and Receiving of a Quality Alert",id:"sending-and-receiving-of-a-quality-alert",level:4},{value:"Update of a Quality Investigation",id:"update-of-a-quality-investigation",level:4},{value:"Update of a Quality Alert",id:"update-of-a-quality-alert",level:4},{value:"Processes for Sending, Updating and Resolving Block Notifications",id:"processes-for-sending-updating-and-resolving-block-notifications",level:3},{value:"Sending and Receiving of Block Information",id:"sending-and-receiving-of-block-information",level:4},{value:"Update of Block Information",id:"update-of-block-information",level:4},{value:"Standards",id:"standards",level:2},{value:"NOTICE",id:"notice",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Traceability kit banner",src:i(39005).A+"",width:"285",height:"244"})}),"\n",(0,a.jsx)(t.p,{children:"The following page offers an architecture perspective including the main building blocks and information regarding communication between different components, shown as sequence diagrams in a runtime view."}),"\n",(0,a.jsx)(t.p,{children:"The architecture of Traceability is built upon several other components of Catena-X. You need to be familiar with these components to understand the Traceability architecture:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Industry Core for a basic understanding of digital twins and aspect models,"}),"\n",(0,a.jsx)(t.li,{children:"Asset Administration Shell (AAS) as the underlying standard for digital twins,"}),"\n",(0,a.jsx)(t.li,{children:"Digital Twin Registry (DTR) as the main service to store, publish, and search digital twins, and"}),"\n",(0,a.jsxs)(t.li,{children:["A Connector as the central data sharing infrastructure of Catena-X.","\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"One example is the Tractus-X EDC, based on the Connector of the Eclipse Dataspace Components (EDC)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Additionally you might make yourself familiar with"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Item Relationship Service for traversing digital twin data chains based on the Data Chain Template,"}),"\n",(0,a.jsx)(t.li,{children:"EDC Discovery for finding the EDC of a Catena-X partner, and"}),"\n",(0,a.jsx)(t.li,{children:"SAMM as the modelling standard for aspect models."}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"scope-and-context",children:"Scope and Context"}),"\n",(0,a.jsx)(t.p,{children:"This KIT describes two core capabilties of Traceability:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Data Provisioning: This capability focusses on how data providers must prepare and publish their data (from their internal systems) to participate in the Traceability use case (and other use cases that want to use Traceability data)."}),"\n",(0,a.jsx)(t.li,{children:"Traceability App: This capability defines what mandatory features a Traceability app must provide and how to implement them to be interoperable with other Traceability apps. Additionally, optional features of Traceability apps are also included. This information is used by software vendors to develop Traceability-compliant apps for Catena-X."}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"building-block-view",children:"Building Block View"}),"\n",(0,a.jsx)(t.p,{children:"This overview shows the two core capabilities of Traceabilty and the Catena-X Core Services onto which Traceability is built and which are required by the Traceability architecture."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Architecture - Level 1",src:i(60551).A+""})}),"\n",(0,a.jsx)(t.h3,{id:"traceability-components",children:"Traceability Components"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{style:{textAlign:"left"},children:"Subsystem"}),(0,a.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"Data Provisioning"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"This component extracts data from a company's internal systems,  transforms it into digital twins, and publishes these digital twins in the DTR and their data in the EDC (as submodels, based on aspect models). The published data is used by Traceability apps as well as other use cases that require Traceabiilty data."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"Traceability App"}),(0,a.jsxs)(t.td,{style:{textAlign:"left"},children:["A Traceability app has three core functionalities:",(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{children:"providing an UI to show the parts manufactured by a company and published as digital twins"}),(0,a.jsx)("li",{children:"create and process quality alerts and quality investigations for quality actions"}),(0,a.jsx)("li",{children:"create and transfer block information in real time to separate or quarantine faulty parts in the supply chain to prevent them from being used in the production process (currently optional app feature)"})]})]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"Internal Systems"}),(0,a.jsxs)(t.td,{style:{textAlign:"left"},children:["These are existing internal systems of a Catena-X partner which provides data to Traceability components, e.g.,",(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{children:"for data provisioning: The data provided to Catena-X is fetched from a partner's internal PLM and parts master data systems."}),(0,a.jsx)("li",{children:"for Traceability apps: A Traceability app may show more data to a user than just the data that is provided to Catena-X. Generally, the business scope of COTS software is bigger than just Traceability and they have existing interfaces to fetch all data they need for their business functionality (and not only Traceability data)."})]}),"Both components can also send data back to internal systems. That's at the discretion of the Catena-X partner and neither required nor prohibited by the Traceability use case."]})]})]})]}),"\n",(0,a.jsx)(t.h3,{id:"catena-x-core-services",children:"Catena-X Core Services"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{style:{textAlign:"left"},children:"Subsystem"}),(0,a.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{style:{textAlign:"left"},children:(0,a.jsx)(t.a,{href:"https://eclipse-tractusx.github.io/docs-kits/category/digital-twin-kit",children:"Digital Twin Registry (DTR)"})}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"The Digital Twin Registry acts as an address book for digital twins. Data Providers register their digital twins in their own DTR. Data consumers query a DTR to find digital twins and interact with them further, i.e., fetch data for a digtil twin."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{style:{textAlign:"left"},children:(0,a.jsx)(t.a,{href:"https://eclipse-tractusx.github.io/docs-kits/category/data-chain-kit/",children:"Item Relationship Service (IRS)"})}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:'The IRS builds a digital representation of a product (digital twin) and the relationships of items the product consists of in a hierarchical structure. The result is an item graph in which each node represents a digital item of the product - this graph is called "Item Graph".'})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{style:{textAlign:"left"},children:(0,a.jsx)(t.a,{href:"https://eclipse-tractusx.github.io/docs-kits/category/connector-kit",children:"Eclipse Dataspace Components (EDC)"})}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"The EDC as a connector implements a framework agreement for sovereign, cross-organizational data sharing. The International Data Spaces Standard (IDS) and relevant principles in connection with GAIA-X were implemented. The connector is designed to be extensible to support alternative protocols and to be integrated into different ecosystems."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{style:{textAlign:"left"},children:(0,a.jsx)(t.a,{href:"https://eclipse-tractusx.github.io/docs-kits/kits/digital-twin-kit/software-development-view#discovery-sequence",children:"Discovery Service"})}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"The EDC / dataspace discovery interface is a CX network public available endpoint which can get used to retrieve EDC endpoints and the related BPNs, as well as search for endpoints via the BPN."})]})]})]}),"\n",(0,a.jsx)(t.h2,{id:"data-provisioning",children:"Data Provisioning"}),"\n",(0,a.jsx)(t.p,{children:"This capability focusses on how data providers must prepare and publish their data (from their internal systems) to participate in the Traceability use case (and other use cases that want to use Traceability data)."}),"\n",(0,a.jsx)(t.h3,{id:"basic-data-processing-flow",children:"Basic Data Processing Flow"}),"\n",(0,a.jsx)(t.p,{children:"The following diagram shows a basic data processing flow how a company's internal data can be transformed into a Traceability-compliant format. Implementations of data providers can deviate from this basic flow as it's just one way to do it. But it should give a basic idea what the essential steps are."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Data Processing Flow",src:i(70610).A+"",width:"1921",height:"1241"})}),"\n",(0,a.jsx)(t.h3,{id:"digital-twins-and-aspect-models",children:"Digital Twins and Aspect Models"}),"\n",(0,a.jsxs)(t.p,{children:["Data provisioning of Traceabilty is built on the data provisioning of the ",(0,a.jsx)(t.a,{href:"../industry-core-kit/architecture-view",children:"Industry Core KIT"}),", i.e., Traceability extends the digital twins PartType and PartInstance with additional aspect models:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:['Digital Twin "PartType"',"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"N/A"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:['Digital Twin "PartInstance"',"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Aspect model ",(0,a.jsx)(t.a,{href:"https://eclipse-tractusx.github.io/docs-kits/kits/traceability-kit/software-development-view/data-provider#tractionbatterycode",children:'"TractionBatteryCode"'})]}),"\n",(0,a.jsxs)(t.li,{children:["Aspect model ",(0,a.jsx)(t.a,{href:"https://eclipse-tractusx.github.io/docs-kits/kits/traceability-kit/software-development-view/data-provider#softwareinformation",children:'"SoftwareInformation"'})]}),"\n",(0,a.jsxs)(t.li,{children:["Aspect model ",(0,a.jsx)(t.a,{href:"https://eclipse-tractusx.github.io/docs-kits/kits/traceability-kit/software-development-view/data-provider#certificatesigningrequests",children:'"CertificateSigningRequests"'})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["Details about these aspect models, i.e., the SAMM data model as well as example data, can be found in the ",(0,a.jsx)(t.a,{href:"../traceability-kit/software-development-view/data-provider",children:"Developer View"}),"."]}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["\u270b"," Beware that the aspect models ",(0,a.jsx)(t.strong,{children:(0,a.jsx)(t.em,{children:"SoftwareInformation"})})," and ",(0,a.jsx)(t.strong,{children:(0,a.jsx)(t.em,{children:"CertificateSigningRequests"})})," are not standardized yet, but MAY be released as standardized aspect models in future releases of the CX-0125 Traceability Use Case Standard."]}),"\n"]}),"\n",(0,a.jsx)(t.h3,{id:"policies",children:"Policies"}),"\n",(0,a.jsxs)(t.p,{children:["To enable data sovereignty, access and usage policies are important to protect the data assets of a data provider in the EDC, described in the following. Further details are described in the ",(0,a.jsx)(t.a,{href:"#standards",children:"CX - 0018 Sovereign Data Exchange"})," standard."]}),"\n",(0,a.jsx)(t.h3,{id:"access-policies",children:"Access Policies"}),"\n",(0,a.jsx)(t.p,{children:"To decide which company has access to the data assets, access policy should be used. Note that without protecting data assets with access policies, they become publicly available in the Catena-X network which is not recommended. Therefore, every asset should be protected and only be made available for specific companies, identified through their business partner number (BPN)."}),"\n",(0,a.jsxs)(t.p,{children:["Implementation details and examples can be found ",(0,a.jsx)(t.a,{href:"../industry-core-kit/software-development-view/policies",children:"in the Industry Core KIT"}),"."]}),"\n",(0,a.jsx)(t.h3,{id:"usage-policies",children:"Usage Policies"}),"\n",(0,a.jsx)(t.p,{children:"To decide which company can use the data asset under specific conditions, usage policies (or contract policies) are used. Therefore, they are more specific than access policies and only used just after access is granted. Currently, the usage policies aren't technically enforced but based on a legal framework (keep this in mind when publishing data assets)."}),"\n",(0,a.jsxs)(t.p,{children:["Implementation details and examples can be found ",(0,a.jsx)(t.a,{href:"../industry-core-kit/software-development-view/policies",children:"in the Industry Core KIT"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"traceability-app",children:"Traceability App"}),"\n",(0,a.jsx)(t.p,{children:"This capability defines what mandatory features a Traceability app must provide and how to implement them to be interoperable with other Traceability apps. Additionally, optional features of Traceability apps are also included. This information is used by software vendors to develop Traceability-compliant apps for Catena-X."}),"\n",(0,a.jsx)(t.h3,{id:"functional-requirements",children:"Functional Requirements"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{style:{textAlign:"left"},children:"Requirement"}),(0,a.jsx)(t.th,{style:{textAlign:"center"},children:"Mandatory"}),(0,a.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"Visualize Digital Twin Data"}),(0,a.jsx)(t.td,{style:{textAlign:"center"},children:"Yes"}),(0,a.jsxs)(t.td,{style:{textAlign:"left"},children:["A Traceability app must be able to visualize data from PartInstance digital twins. This data will also be used by quality investigations & alerts, so it's essential for a Traceability app. The data for the manufacturer's parts is retrieved from the manufacturer's internal systems; the data for built-in parts from suppliers must be retrieved from the supplier's EDC as this is a cross-company data transfer (if necessary).",(0,a.jsx)("br",{}),"The data for the manufacturer's parts can be retrieved from a company's internal systems:",(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{children:"via a dedicated interface for the Traceability app"}),(0,a.jsx)("li",{children:"via the EDC using the data also provided to other partner's in the Catena-X ecosystem"})]}),"It is not mandatory to use EDC to retrieve this data as this is not a cross-company data transfer, but a data transfer from one application of the company to another application of the company."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsxs)(t.td,{style:{textAlign:"left"},children:["Data Sharing via ",(0,a.jsx)(t.a,{href:"#standards",children:"CX-0018"})," compliant connector"]}),(0,a.jsx)(t.td,{style:{textAlign:"center"},children:"Yes"}),(0,a.jsxs)(t.td,{style:{textAlign:"left"},children:["The data sharing with other Catena-X partners (for Traceability partners, these are their customers and suppliers mostly) must be done via via a ",(0,a.jsx)(t.a,{href:"#standards",children:"CX-0018"})," compliant connector (e.g. EDC)."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"Data Sovereignty"}),(0,a.jsx)(t.td,{style:{textAlign:"center"},children:"Yes"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"The usage of data in the Traceability app is compliant with the Access and Usage Policies as defined in this KIT."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"Quality Alerts"}),(0,a.jsx)(t.td,{style:{textAlign:"center"},children:"Yes"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"In the event of an incident the partner's value chain, the partner would like to be informed promptly and in a structured manner by the triggering partners (e.g., manufacturing problem, field problems) so that the partner can respond as quickly as possible (Supplier/Customer). In the same way, the partner wants to inform their value chain partners easily and specifically in the event of relevant incidents. The traceability apps are able to exchange the alerts in the same interoperable way."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"Quality Investigations"}),(0,a.jsx)(t.td,{style:{textAlign:"center"},children:"Yes"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"For a given incident in a partner's supply chain, the partner would like to be able to narrow down the affected products as sharply as possible in order to carry out suitable actions in a targeted manner. The partners in the value chain use interoperable Traceability apps for this purpose."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"Block Information"}),(0,a.jsx)(t.td,{style:{textAlign:"center"},children:"No"}),(0,a.jsx)(t.td,{style:{textAlign:"left"},children:"The blocking process is a event  where faulty parts in the supply chain are separated or quarantined to prevent them from being used in the production process. Due to the criticality, this part-specific information must be forwarded to the affected manufacturers as quickly as possible so that they can react immediately to sorting out the corresponding components. To overcome this challenge, this information is provided and transmitted via a standardized API."})]})]})]}),"\n",(0,a.jsx)(t.h3,{id:"non-functional-requirements",children:"Non-Functional Requirements"}),"\n",(0,a.jsx)(t.p,{children:"There are no non-functional requirements defined for this release."}),"\n",(0,a.jsx)(t.h3,{id:"quality-investigations--quality-alerts",children:"Quality Investigations & Quality Alerts"}),"\n",(0,a.jsx)(t.p,{children:"Notifications are - in contrast to classical data offers - a way to push data from a sender to a receiver. In the below paragraphs, the implementation is described to realize quality notifications. In that sense, the below specification has not the scope and intention to be a general solution pattern for notifications across various use cases. For now, it is limited to the sending and receiving of quality notifications as well as the update of the notification status (following a predefined status model)."}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["\u270b"," Detailed Open API specifications for Quality Alerts & Investigations are available in the Software Development View. For the current release, ",(0,a.jsx)(t.a,{href:"https://eclipse-tractusx.github.io/api-hub/eclipse-tractusx.github.io/kit-traceability-notifications-openAPI-1.2.1/swagger-ui/",children:"version 1.2.1"})," is mandatory and must be supported by every App provider. The newer ",(0,a.jsx)(t.a,{href:"https://eclipse-tractusx.github.io/api-hub/eclipse-tractusx.github.io/kit-traceability-notifications-openAPI-2.0.0/swagger-ui/",children:"version 2.0.0"})," can be supported optionally."]}),"\n"]}),"\n",(0,a.jsx)(t.h4,{id:"notification-state-model",children:"Notification State Model"}),"\n",(0,a.jsx)(t.p,{children:"The notification itself has various states. The states and their cycle are described in the following figure:"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Notification State Model",src:i(7512).A+""})}),"\n",(0,a.jsx)(t.h3,{id:"block-information",children:"Block Information"}),"\n",(0,a.jsx)(t.p,{children:"The blocking process is a process in the automotive industry to segregate or quarantine nonconforming parts in the supply chain to prevent using them in the production process. Therefore, the supplier must send all relevant information to the customer, so that he is able to identify the affected parts for example at the assembly line or in logistics."}),"\n",(0,a.jsx)(t.p,{children:"Catena-X is to be used to transfer this information in a standardized manner and to trace the individual parts back to see whether they have been blocked and sorted out on the customer side in order to prevent subsequent damage or major product recalls. In addition, the notification is intended to improve the quality and speed of the block information provided."}),"\n",(0,a.jsx)(t.h4,{id:"block-notification-interaction",children:"Block Notification Interaction"}),"\n",(0,a.jsxs)(t.p,{children:["The interaction of block notifications is based on events that can be triggered by both the sender and the recipient. These events are represented by a status model and are used to track the progress of the parts that need to be blocked or respectively sorted out by the customer. Details about these status model and the Open API specification for Block Notifications are available in the ",(0,a.jsx)(t.a,{href:"../traceability-kit/software-development-view/data-provider",children:"Developer View"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Scenario 1:"})," In this case, it is assumed that the sender sends a list of parts with the associated block information to the recipient. The block status of each part is set to ACTIVE by default."]}),"\n",(0,a.jsx)(t.p,{children:"When all block information has been received by the recipient, checked internally, further processed and finally all affected parts were blocked or sorted out, this information is sent back to the sender through a status update (PART_BLOCKED)."}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["\u270b"," Note that the update notification whether one or more parts have been blocked and therefore sorted out by the customer is ",(0,a.jsx)(t.strong,{children:"not mandatory"}),". The decision to provide suppliers with this information through a feedback notification ",(0,a.jsx)(t.strong,{children:"MUST"})," have been negotiated and accepted by both business partners before implemented."]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Scenario 2:"}),"\nIn this case, the sender identified that the block information sent from Scenario 1 was sent incorrectly or unintentionally."]}),"\n",(0,a.jsx)(t.p,{children:"In order to inform the recipient of this error, the block status of the affected parts is set to CANCELED via an update notification, so that these parts cannot be sorted out and used to be installed by the recipient."}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["\u270b"," The CANCELED status can also be updated by the recipient if it has been determined that the part(s) are faultless and therefore does not need to be sorted out."]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Block State Model Interaction",src:i(80263).A+""})}),"\n",(0,a.jsx)(t.h2,{id:"runtime-view",children:"Runtime View"}),"\n",(0,a.jsx)(t.p,{children:"In the sub-sections below the sequence for sending, updating and resolving of notifications between (traceability) applications is shown with UML sequence diagrams. In all cases, Http POST requests are used. Those Http endpoints are described in the corresponding sections:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://eclipse-tractusx.github.io/docs-kits/kits/traceability-kit/software-development-view/app-provider#quality-notifications",children:"(TRS) Quality Notification Endpoints"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://eclipse-tractusx.github.io/docs-kits/kits/traceability-kit/software-development-view/app-provider#block-notifications",children:"Block Notification Endpoints"})}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.a,{href:"https://eclipse-tractusx.github.io/docs-kits/kits/traceability-kit/software-development-view/app-provider#asset-registration-via-connector",children:"EDC Contract Offerings"}),"."]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"To read the UML sequence diagrams correctly, some remarks:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"The shown Notification EDC Adapter is not mandatory. It is just one option to send a notification via the EDC control and data plane. Important is that a similar functionality must be provided/implemented by the (traceability) application vendor. The Notification EDC Adapter or a similar component / functionality will not be provided as a central service from Catena-X."}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"To know where a notification must be send to, the (traceability) application must resolve the BPN of the receiver. This can either be happen because the (traceability) application has this information in its data model or it could - alternatively - also be resolved e.g. via a lookup of the digital twin in the central asset administration shell (AAS) registry."}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"The resolution of the EDC URL for a given BPN is done via the Discovery Service API. The entry for each EDC into this Discovery Service is done via the CX Portal."}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"In each UML sequence diagram the step [01] describes the publishing of the notification endpoints as described in the above sections"}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"Similarly, the Http POST request and response bodies are described in the above sections"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t.h3,{id:"processes-for-sending-updating-and-resolving-quality-notifications",children:"Processes for Sending, Updating and Resolving Quality Notifications"}),"\n",(0,a.jsx)(t.h4,{id:"sending-and-receiving-of-a-quality-investigation",children:"Sending and Receiving of a Quality Investigation"}),"\n",(0,a.jsx)(t.p,{children:"Below, the UML sequence diagram to send and receive a quality investigation is depicted. In addition to the above mentioned general remarks, the following remark:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"The status transition from SENT to RECEIVED has to be done by the sender once it received the Http status code 201 from the receiver"}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"NotificationSendReceive",src:i(23488).A+"",width:"1355",height:"1583"})}),"\n",(0,a.jsx)(t.h4,{id:"sending-and-receiving-of-a-quality-alert",children:"Sending and Receiving of a Quality Alert"}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["\u270b"," The (traceability) applications that fully rely on the AAS registry and the corresponding AAS submodels can only support quality investigations. With the release of the AAS submodel SingleLevelUsageAsBuilt or a similar AAS submodel that contains the information, which supply chain partner purchased/assembled a part / batch, it is possible to also support quality alerts for those (traceability) applications."]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Below, the UML sequence diagram to send and receive a quality alert is depicted. In addition to the above mentioned general remarks, the following remark:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"The status transition from SENT to RECEIVED has to be done by the sender once it received the Http status code 201 from the receiver"}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"NotificationSendReceiveAlert",src:i(11273).A+"",width:"1329",height:"1583"})}),"\n",(0,a.jsx)(t.h4,{id:"update-of-a-quality-investigation",children:"Update of a Quality Investigation"}),"\n",(0,a.jsx)(t.p,{children:"Below, the UML sequence diagram to update a quality investigation is depicted."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"NotificationUpdateInvestigation",src:i(29684).A+"",width:"1315",height:"1294"})}),"\n",(0,a.jsx)(t.h4,{id:"update-of-a-quality-alert",children:"Update of a Quality Alert"}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["\u270b"," The (traceability) applications that fully rely on the AAS registry and the corresponding AAS submodels can only support quality investigations. With the release of the AAS submodel SingleLevelUsageAsBuilt or a similar AAS submodel that contains the information, which supply chain partner purchased/assembled a part / batch, it is possible to also support quality alerts for those (traceability) applications."]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Below, the UML sequence diagram to update a quality alert is depicted."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"NotificationUpdateAlert",src:i(54628).A+"",width:"1280",height:"1294"})}),"\n",(0,a.jsx)(t.h3,{id:"processes-for-sending-updating-and-resolving-block-notifications",children:"Processes for Sending, Updating and Resolving Block Notifications"}),"\n",(0,a.jsx)(t.h4,{id:"sending-and-receiving-of-block-information",children:"Sending and Receiving of Block Information"}),"\n",(0,a.jsx)(t.p,{children:"Below, the UML sequence diagram to send and receive a block information is depicted."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"BlockNotificationSendReceive",src:i(90838).A+""})}),"\n",(0,a.jsx)(t.h4,{id:"update-of-block-information",children:"Update of Block Information"}),"\n",(0,a.jsx)(t.p,{children:"Below, the UML sequence diagram to update a block information is depicted."}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["\u270b"," The process for sending update notifications regarding an ongoing blocking process must be carried out in the same way as sending block information for the first time. The differences are limited to the following changes:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Another data asset \u201cBlockNotificationStatusUpdate\u201d is used for the update"}),"\n",(0,a.jsx)(t.li,{children:"The data model of the notification is limited to the ID and block status of a part and therefore does not include full block informations"}),"\n",(0,a.jsx)(t.li,{children:"Both 'CANCELED' and 'PART_BLOCKED' can be set for the status depending on which case applies to the notification"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"BlockNotificationUpdateStatus",src:i(69518).A+""})}),"\n",(0,a.jsx)(t.h2,{id:"standards",children:"Standards"}),"\n",(0,a.jsxs)(t.p,{children:["Our relevant standards can be downloaded from the official ",(0,a.jsx)(t.a,{href:"https://catena-x.net/de/standard-library",children:"Catena-X Standard Library"}),":"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Traceability is built on the Industry Core. Please check the relevant ",(0,a.jsx)(t.a,{href:"../industry-core-kit/architecture-view#standards",children:"standards of the Industry Core"}),"."]}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://catenax-ev.github.io/docs/next/standards/CX-0125-TraceabilityUseCase",children:"CX - 0125 Traceability Use Case v2.0.0"})}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"notice",children:"NOTICE"}),"\n",(0,a.jsxs)(t.p,{children:["This work is licensed under the ",(0,a.jsx)(t.a,{href:"https://creativecommons.org/licenses/by/4.0/legalcode",children:"CC-BY-4.0"}),"."]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"SPDX-License-Identifier: CC-BY-4.0"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2023 BASF SE"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2023 Bayerische Motoren Werke Aktiengesellschaft (BMW AG)"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2023 Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e.V. (represented by Fraunhofer ISST & Fraunhofer IML)"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2023 German Edge Cloud GmbH & Co. KG"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2023 Mercedes Benz AG"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2023 Robert Bosch Manufacturing Solutions GmbH"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2023 SAP SE"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2023 Siemens AG"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2023 T-Systems International GmbH"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2023 ZF Friedrichshafen AG"}),"\n",(0,a.jsx)(t.li,{children:"SPDX-FileCopyrightText: 2023 Contributors to the Eclipse Foundation"}),"\n",(0,a.jsxs)(t.li,{children:["Source URL: ",(0,a.jsx)(t.a,{href:"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io/tree/main/docs-kits/kits/traceability-kit",children:"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io/tree/main/docs-kits/kits/traceability-kit"})," (latest version)"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},39005:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/doc-traceability_header-minified-114fb0cc97a4825a22f0ae83af993b2a.png"},54628:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/notification_update-alert-57e62921c04120242ef8195538436ea8.svg"},60551:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/architecture_level_1-bc7906e73ca75c459d679ace98464405.svg"},69518:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/block-notification-update-status-477b473b68ce74e5ee9dfecb239b5f25.svg"},70610:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/data_provisioning_data_flow-f1e82901f5636a03f8bb3805ec3e426e.png"},80263:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/block-notification-state-model-interaction-88e5ece5afd32cebd10e88bd21643110.svg"},90838:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/block-notification-send-receive-f1076d8391066a1a01688bf3b4c50db9.svg"}}]);