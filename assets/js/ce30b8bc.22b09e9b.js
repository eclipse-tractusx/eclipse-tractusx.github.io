"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[48399],{3905:(t,e,i)=>{i.d(e,{Zo:()=>c,kt:()=>m});var n=i(67294);function r(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function a(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,n)}return i}function l(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?a(Object(i),!0).forEach((function(e){r(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}function o(t,e){if(null==t)return{};var i,n,r=function(t,e){if(null==t)return{};var i,n,r={},a=Object.keys(t);for(n=0;n<a.length;n++)i=a[n],e.indexOf(i)>=0||(r[i]=t[i]);return r}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)i=a[n],e.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(t,i)&&(r[i]=t[i])}return r}var s=n.createContext({}),p=function(t){var e=n.useContext(s),i=e;return t&&(i="function"==typeof t?t(e):l(l({},e),t)),i},c=function(t){var e=p(t.components);return n.createElement(s.Provider,{value:e},t.children)},d="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},g=n.forwardRef((function(t,e){var i=t.components,r=t.mdxType,a=t.originalType,s=t.parentName,c=o(t,["components","mdxType","originalType","parentName"]),d=p(i),g=r,m=d["".concat(s,".").concat(g)]||d[g]||u[g]||a;return i?n.createElement(m,l(l({ref:e},c),{},{components:i})):n.createElement(m,l({ref:e},c))}));function m(t,e){var i=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var a=i.length,l=new Array(a);l[0]=g;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o[d]="string"==typeof t?t:r,l[1]=o;for(var p=2;p<a;p++)l[p]=i[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,i)}g.displayName="MDXCreateElement"},8973:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var n=i(87462),r=(i(67294),i(3905));const a={id:"Operation View Digital Twin Kit",title:"Operation View",description:"Digital Twin Kit",sidebar_position:3},l=void 0,o={unversionedId:"kits/Digital Twin Kit/Operation View Digital Twin Kit",id:"version-24.03/kits/Digital Twin Kit/Operation View Digital Twin Kit",title:"Operation View",description:"Digital Twin Kit",source:"@site/docs-kits_versioned_docs/version-24.03/kits/Digital Twin Kit/page_software-operation-view.md",sourceDirName:"kits/Digital Twin Kit",slug:"/kits/Digital Twin Kit/Operation View Digital Twin Kit",permalink:"/docs-kits/24.03/kits/Digital Twin Kit/Operation View Digital Twin Kit",draft:!1,tags:[],version:"24.03",sidebarPosition:3,frontMatter:{id:"Operation View Digital Twin Kit",title:"Operation View",description:"Digital Twin Kit",sidebar_position:3},sidebar:"kits",previous:{title:"Adoption View",permalink:"/docs-kits/24.03/kits/Digital Twin Kit/Adoption View Digital Twin Kit"},next:{title:"Developing with the DT KIT",permalink:"/docs-kits/24.03/kits/Digital Twin Kit/Software Development View/dt-kit-software-development-view"}},s={},p=[{value:"Digital Twin KIT",id:"digital-twin-kit",level:3},{value:"Deployment",id:"deployment",level:2},{value:"Setup Guide",id:"setup-guide",level:2},{value:"Notice",id:"notice",level:2}],c={toc:p};function d(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"DT Kit Pictotogram",src:i(60412).Z,width:"285",height:"244"})),(0,r.kt)("h3",{id:"digital-twin-kit"},"Digital Twin KIT"),(0,r.kt)("p",null,"Based on the information provided in this kit, it is possible to run and program against an infrastructure of\nDigital Twins the Catena-X-way. This infrastructure empowers Data Consumers to consume the network's data as agreed with\neach Data Provider and facilitated by an Operating Company. They run central and decentral services that allow them to\ndiscover each other, exchange information and contextualize it according to a standardized semantics."),(0,r.kt)("p",null,"The APIs for digital twins are based on the specifications of the Asset Administration Shell (AAS) as defined in\nCX-0002."),(0,r.kt)("h2",{id:"deployment"},"Deployment"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Service Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Reference Implementation"),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"th",href:"https://catena-x.net/de/standard-library"},"Standardized in")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Discovery Finder"),(0,r.kt)("td",{parentName:"tr",align:null},"A microservice resolving type of identifiers against a set of BPN-Discovery Servers."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/eclipse-tractusx/sldt-discovery-finder"},"Tractus-X Discovery Finder")),(0,r.kt)("td",{parentName:"tr",align:null},"CX - 0053")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"BPN Discovery"),(0,r.kt)("td",{parentName:"tr",align:null},"A microservice resolving a particular assetId against the registered BPN of its owner."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/eclipse-tractusx/sldt-bpn-discovery"},"Tractus-X BPN Discovery")),(0,r.kt)("td",{parentName:"tr",align:null},"CX - 0053")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"EDC Discovery"),(0,r.kt)("td",{parentName:"tr",align:null},"A microservice that resolves a BPN against an EDC endpoint."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/eclipse-tractusx/portal-backend"},"Tractus-X Portal including EDC Discovery API")),(0,r.kt)("td",{parentName:"tr",align:null},"CX - 0001")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Digital Twin Registry"),(0,r.kt)("td",{parentName:"tr",align:null},"A registry for digital twins, each digital twin providing the endpoints of its submodels. ",(0,r.kt)("br",null)," The registry is adhering to the AAS Registry API."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/eclipse-tractusx/sldt-digital-twin-registry"},"Tractus-X Digital Twin Registry")),(0,r.kt)("td",{parentName:"tr",align:null},"CX - 0002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Submodel Server"),(0,r.kt)("td",{parentName:"tr",align:null},"The data source adhering to a subset of the Submodel API as defined in AAS Part-2 3.0."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/FraunhoferIOSB/FAAAST-Service"},"FA\xb3ST-Framework"),", ",(0,r.kt)("br",null)," ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/eclipse-basyx/basyx-java-sdk"},"Eclipse Basyx"),", ",(0,r.kt)("br",null)," ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/admin-shell-io/aasx-server"},"AASX Server")),(0,r.kt)("td",{parentName:"tr",align:null},"CX - 0002")))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"High Level Architecture of an App leveraging the Digital Twin Kit",src:i(38751).Z,width:"2349",height:"2142"})),(0,r.kt)("h2",{id:"setup-guide"},"Setup Guide"),(0,r.kt)("p",null,"Detailed guidance on setup of the abovementioned components can be found in the repositories of their linked reference\nimplementations."),(0,r.kt)("h2",{id:"notice"},"Notice"),(0,r.kt)("p",null,"This work is licensed under the ",(0,r.kt)("a",{parentName:"p",href:"https://creativecommons.org/licenses/by/4.0/legalcode"},"CC-BY-4.0"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"SPDX-License-Identifier: CC-BY-4.0"),(0,r.kt)("li",{parentName:"ul"},"SPDX-FileCopyrightText: 2023 Contributors of the Eclipse Foundation"),(0,r.kt)("li",{parentName:"ul"},"Source URL: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/eclipse-tractusx/tractusx-edc"},"https://github.com/eclipse-tractusx/tractusx-edc"))))}d.isMDXComponent=!0},38751:(t,e,i)=>{i.d(e,{Z:()=>n});const n=i.p+"assets/images/DTKIT_high_level_arch-33f6eb88bb87d8f8ee625900f75f1f83.svg"},60412:(t,e,i)=>{i.d(e,{Z:()=>n});const n=i.p+"assets/images/DTKIT_pictogram_blue-27dcbba19b516a444d647f3f8377ce4f.png"}}]);