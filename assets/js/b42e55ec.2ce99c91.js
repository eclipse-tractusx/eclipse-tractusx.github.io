"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[76899],{54707:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>u,contentTitle:()=>d,default:()=>y,frontMatter:()=>l,metadata:()=>f,toc:()=>p});var a=t(87462),n=(t(67294),t(3905)),o=t(26389),s=t(94891),c=(t(75190),t(47507),t(24310)),r=(t(63303),t(75035),t(85162));const l={id:"receive-quality-notification",title:"receiveQualityNotification",description:"Receives a new quality notification",sidebar_label:"receiveQualityNotification",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Quality notification"],description:"Receives a new quality notification",operationId:"receiveQualityNotification",requestBody:{content:{"application/json":{schema:{required:["header","content"],type:"object",properties:{header:{type:"object",required:["notificationId","senderBPN","senderAddress","recipientBPN","classification","severity","status","messageId"],properties:{notificationId:{type:"string",format:"uuid",example:"a7954026-3aff-4b6c-92bf-04671ef2fa46",description:"A UUIDv4 to uniquely identify a quality notification."},senderBPN:{type:"string",example:"BPNL00000003BW3S",description:"The business partner number (BPN) of the sender."},senderAddress:{type:"string",format:"uri",example:"https://edc.company-xyz.io/BPNL00000003BW3S",description:"The Eclipse Dataspace Connector (EDC) URL of the sender."},recipientBPN:{type:"string",example:"BPNL00000003BV4H",description:"The business partner number (BPN) of the receiver."},classification:{type:"string",enum:["QM-Investigation","QM-Alert"],example:"QM-Investigation",description:"The classification defines the type of quality notification."},severity:{type:"string",enum:["MINOR","MAJOR","CRITICAL","LIFE-THREATENING"],example:"CRITICAL",description:"The severity of the quality notification describes its criticality."},relatedNotificationId:{type:"string",format:"uuid",example:"7895a39d-c4ef-4b75-b39f-cae8207a262f",description:"A UUIDv4 to uniquely identify a related quality notification."},status:{type:"string",enum:["CREATED","SENT","RECEIVED","ACKNOWLEDGED","ACCEPTED","DECLINED","CLOSED"],example:"SENT",description:"The status of the quality notification."},targetDate:{type:"string",format:"date-time",example:"2022-07-28T14:41:13.214Z",description:"The date and time when a processing of the notification is expected by the sender."},messageId:{type:"string",format:"uuid",example:"c2801472-5f87-41a7-9a25-b0939c4e0dff",description:"A UUIDv4 to uniquely identify an individual quality notification message. In case of an initial sending of a notification the messageId has to be a newly generated UUIDv4."}}},content:{type:"object",required:["listOfAffectedItems"],properties:{information:{type:"string",maxLength:1e3,example:"Gear boxes loose oil while driving."},listOfAffectedItems:{type:"array",items:{type:"string"},example:["urn:uuid:57e4e3c1-a6f0-46a0-90df-1fb17cbc157d","urn:uuid:e4da568b-8cf1-4f5f-a96a-cf26265b2c72"]}}}}}}}},responses:{201:{description:"Quality notification was received successfully"},400:{description:"Request body was malformed"},401:{description:"Not authorized"},403:{description:"Forbidden"},405:{description:"Method not allowed"},409:{description:"Could not accept the send quality notification, because a quality notification with that notificationId already exists"},422:{description:"Could not accept the send quality notification even though it is syntactically correct. The quality notification is not accepted, because of semantic reasons (e.g., an affected item is not known by the receiver)."}},method:"post",path:"/qualitynotifications/receive",servers:[{url:"/"}],jsonRequestBodyExample:{header:{notificationId:"a7954026-3aff-4b6c-92bf-04671ef2fa46",senderBPN:"BPNL00000003BW3S",senderAddress:"https://edc.company-xyz.io/BPNL00000003BW3S",recipientBPN:"BPNL00000003BV4H",classification:"QM-Investigation",severity:"CRITICAL",relatedNotificationId:"7895a39d-c4ef-4b75-b39f-cae8207a262f",status:"SENT",targetDate:"2022-07-28T14:41:13.214Z",messageId:"c2801472-5f87-41a7-9a25-b0939c4e0dff"},content:{information:"Gear boxes loose oil while driving.",listOfAffectedItems:["urn:uuid:57e4e3c1-a6f0-46a0-90df-1fb17cbc157d","urn:uuid:e4da568b-8cf1-4f5f-a96a-cf26265b2c72"]}},info:{title:"Notification API",description:"Notification API",license:{name:"Apache License v2.0",url:"http://apache.org/v2"},version:"1.1.0"},postman:{name:"receive Quality Notification",description:{content:"Receives a new quality notification",type:"text/plain"},url:{path:["qualitynotifications","receive"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"docs-kits/kits/Traceability Kit/Software Development View/Notification API/v1.1.0 - mandatory/notification-api",custom_edit_url:null},d=void 0,f={unversionedId:"kits/Traceability Kit/Software Development View/Notification API/v1.1.0 - mandatory/receive-quality-notification",id:"version-24.03/kits/Traceability Kit/Software Development View/Notification API/v1.1.0 - mandatory/receive-quality-notification",title:"receiveQualityNotification",description:"Receives a new quality notification",source:"@site/docs-kits_versioned_docs/version-24.03/kits/Traceability Kit/Software Development View/Notification API/v1.1.0 - mandatory/receive-quality-notification.api.mdx",sourceDirName:"kits/Traceability Kit/Software Development View/Notification API/v1.1.0 - mandatory",slug:"/kits/Traceability Kit/Software Development View/Notification API/v1.1.0 - mandatory/receive-quality-notification",permalink:"/docs-kits/kits/Traceability Kit/Software Development View/Notification API/v1.1.0 - mandatory/receive-quality-notification",draft:!1,editUrl:null,tags:[],version:"24.03",frontMatter:{id:"receive-quality-notification",title:"receiveQualityNotification",description:"Receives a new quality notification",sidebar_label:"receiveQualityNotification",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Quality notification"],description:"Receives a new quality notification",operationId:"receiveQualityNotification",requestBody:{content:{"application/json":{schema:{required:["header","content"],type:"object",properties:{header:{type:"object",required:["notificationId","senderBPN","senderAddress","recipientBPN","classification","severity","status","messageId"],properties:{notificationId:{type:"string",format:"uuid",example:"a7954026-3aff-4b6c-92bf-04671ef2fa46",description:"A UUIDv4 to uniquely identify a quality notification."},senderBPN:{type:"string",example:"BPNL00000003BW3S",description:"The business partner number (BPN) of the sender."},senderAddress:{type:"string",format:"uri",example:"https://edc.company-xyz.io/BPNL00000003BW3S",description:"The Eclipse Dataspace Connector (EDC) URL of the sender."},recipientBPN:{type:"string",example:"BPNL00000003BV4H",description:"The business partner number (BPN) of the receiver."},classification:{type:"string",enum:["QM-Investigation","QM-Alert"],example:"QM-Investigation",description:"The classification defines the type of quality notification."},severity:{type:"string",enum:["MINOR","MAJOR","CRITICAL","LIFE-THREATENING"],example:"CRITICAL",description:"The severity of the quality notification describes its criticality."},relatedNotificationId:{type:"string",format:"uuid",example:"7895a39d-c4ef-4b75-b39f-cae8207a262f",description:"A UUIDv4 to uniquely identify a related quality notification."},status:{type:"string",enum:["CREATED","SENT","RECEIVED","ACKNOWLEDGED","ACCEPTED","DECLINED","CLOSED"],example:"SENT",description:"The status of the quality notification."},targetDate:{type:"string",format:"date-time",example:"2022-07-28T14:41:13.214Z",description:"The date and time when a processing of the notification is expected by the sender."},messageId:{type:"string",format:"uuid",example:"c2801472-5f87-41a7-9a25-b0939c4e0dff",description:"A UUIDv4 to uniquely identify an individual quality notification message. In case of an initial sending of a notification the messageId has to be a newly generated UUIDv4."}}},content:{type:"object",required:["listOfAffectedItems"],properties:{information:{type:"string",maxLength:1e3,example:"Gear boxes loose oil while driving."},listOfAffectedItems:{type:"array",items:{type:"string"},example:["urn:uuid:57e4e3c1-a6f0-46a0-90df-1fb17cbc157d","urn:uuid:e4da568b-8cf1-4f5f-a96a-cf26265b2c72"]}}}}}}}},responses:{201:{description:"Quality notification was received successfully"},400:{description:"Request body was malformed"},401:{description:"Not authorized"},403:{description:"Forbidden"},405:{description:"Method not allowed"},409:{description:"Could not accept the send quality notification, because a quality notification with that notificationId already exists"},422:{description:"Could not accept the send quality notification even though it is syntactically correct. The quality notification is not accepted, because of semantic reasons (e.g., an affected item is not known by the receiver)."}},method:"post",path:"/qualitynotifications/receive",servers:[{url:"/"}],jsonRequestBodyExample:{header:{notificationId:"a7954026-3aff-4b6c-92bf-04671ef2fa46",senderBPN:"BPNL00000003BW3S",senderAddress:"https://edc.company-xyz.io/BPNL00000003BW3S",recipientBPN:"BPNL00000003BV4H",classification:"QM-Investigation",severity:"CRITICAL",relatedNotificationId:"7895a39d-c4ef-4b75-b39f-cae8207a262f",status:"SENT",targetDate:"2022-07-28T14:41:13.214Z",messageId:"c2801472-5f87-41a7-9a25-b0939c4e0dff"},content:{information:"Gear boxes loose oil while driving.",listOfAffectedItems:["urn:uuid:57e4e3c1-a6f0-46a0-90df-1fb17cbc157d","urn:uuid:e4da568b-8cf1-4f5f-a96a-cf26265b2c72"]}},info:{title:"Notification API",description:"Notification API",license:{name:"Apache License v2.0",url:"http://apache.org/v2"},version:"1.1.0"},postman:{name:"receive Quality Notification",description:{content:"Receives a new quality notification",type:"text/plain"},url:{path:["qualitynotifications","receive"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"docs-kits/kits/Traceability Kit/Software Development View/Notification API/v1.1.0 - mandatory/notification-api",custom_edit_url:null},sidebar:"kits",previous:{title:"getQualityNotification",permalink:"/docs-kits/kits/Traceability Kit/Software Development View/Notification API/v1.1.0 - mandatory/get-quality-notification"},next:{title:"updateQualityNotification",permalink:"/docs-kits/kits/Traceability Kit/Software Development View/Notification API/v1.1.0 - mandatory/update-quality-notification"}},u={},p=[{value:"receiveQualityNotification",id:"receivequalitynotification",level:2}],m={toc:p};function y(e){let{components:i,...t}=e;return(0,n.kt)("wrapper",(0,a.Z)({},m,t,{components:i,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"receivequalitynotification"},"receiveQualityNotification"),(0,n.kt)("p",null,"Receives a new quality notification"),(0,n.kt)(s.Z,{mdxType:"MimeTabs"},(0,n.kt)(r.Z,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,n.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,n.kt)("summary",{style:{textAlign:"left"}},(0,n.kt)("strong",null,"Request Body")),(0,n.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,n.kt)("ul",{style:{marginLeft:"1rem"}},(0,n.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,n.kt)("details",{style:{}},(0,n.kt)("summary",{style:{}},(0,n.kt)("strong",null,"header"),(0,n.kt)("span",{style:{opacity:"0.6"}}," object"),(0,n.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,n.kt)("div",{style:{marginLeft:"1rem"}},(0,n.kt)(c.Z,{collapsible:!1,name:"notificationId",required:!0,deprecated:void 0,schemaDescription:"A UUIDv4 to uniquely identify a quality notification.",schemaName:"uuid",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"senderBPN",required:!0,deprecated:void 0,schemaDescription:"The business partner number (BPN) of the sender.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"senderAddress",required:!0,deprecated:void 0,schemaDescription:"The Eclipse Dataspace Connector (EDC) URL of the sender.",schemaName:"uri",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"recipientBPN",required:!0,deprecated:void 0,schemaDescription:"The business partner number (BPN) of the receiver.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"classification",required:!0,deprecated:void 0,schemaDescription:"The classification defines the type of quality notification.",schemaName:"string",qualifierMessage:"**Possible values:** [`QM-Investigation`, `QM-Alert`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"severity",required:!0,deprecated:void 0,schemaDescription:"The severity of the quality notification describes its criticality.",schemaName:"string",qualifierMessage:"**Possible values:** [`MINOR`, `MAJOR`, `CRITICAL`, `LIFE-THREATENING`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"relatedNotificationId",required:!1,deprecated:void 0,schemaDescription:"A UUIDv4 to uniquely identify a related quality notification.",schemaName:"uuid",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"status",required:!0,deprecated:void 0,schemaDescription:"The status of the quality notification.",schemaName:"string",qualifierMessage:"**Possible values:** [`CREATED`, `SENT`, `RECEIVED`, `ACKNOWLEDGED`, `ACCEPTED`, `DECLINED`, `CLOSED`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"targetDate",required:!1,deprecated:void 0,schemaDescription:"The date and time when a processing of the notification is expected by the sender.",schemaName:"date-time",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"messageId",required:!0,deprecated:void 0,schemaDescription:"A UUIDv4 to uniquely identify an individual quality notification message. In case of an initial sending of a notification the messageId has to be a newly generated UUIDv4.",schemaName:"uuid",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,n.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,n.kt)("details",{style:{}},(0,n.kt)("summary",{style:{}},(0,n.kt)("strong",null,"content"),(0,n.kt)("span",{style:{opacity:"0.6"}}," object"),(0,n.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,n.kt)("div",{style:{marginLeft:"1rem"}},(0,n.kt)(c.Z,{collapsible:!1,name:"information",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:"**Possible values:** `<= 1000 characters`",defaultValue:void 0,mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"listOfAffectedItems",required:!0,deprecated:void 0,schemaDescription:void 0,schemaName:"string[]",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))))))),(0,n.kt)("div",null,(0,n.kt)(o.Z,{mdxType:"ApiTabs"},(0,n.kt)(r.Z,{label:"201",value:"201",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"Quality notification was received successfully")),(0,n.kt)("div",null)),(0,n.kt)(r.Z,{label:"400",value:"400",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"Request body was malformed")),(0,n.kt)("div",null)),(0,n.kt)(r.Z,{label:"401",value:"401",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"Not authorized")),(0,n.kt)("div",null)),(0,n.kt)(r.Z,{label:"403",value:"403",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"Forbidden")),(0,n.kt)("div",null)),(0,n.kt)(r.Z,{label:"405",value:"405",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"Method not allowed")),(0,n.kt)("div",null)),(0,n.kt)(r.Z,{label:"409",value:"409",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"Could not accept the send quality notification, because a quality notification with that notificationId already exists")),(0,n.kt)("div",null)),(0,n.kt)(r.Z,{label:"422",value:"422",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"Could not accept the send quality notification even though it is syntactically correct. The quality notification is not accepted, because of semantic reasons (e.g., an affected item is not known by the receiver).")),(0,n.kt)("div",null)))))}y.isMDXComponent=!0}}]);