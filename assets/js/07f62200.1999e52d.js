"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[75185],{27645:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>u,contentTitle:()=>m,default:()=>g,frontMatter:()=>p,metadata:()=>h,toc:()=>y});var s=i(87462),a=(i(67294),i(3905)),r=i(26389),n=i(94891),o=(i(75190),i(47507)),d=i(24310),c=i(63303),l=(i(75035),i(85162));const p={id:"search-task-states",title:"Search for the state of golden record tasks by task identifiers",description:"Returns the state of golden record tasks based on the provided task identifiers. Unknown task identifiers are ignored.",sidebar_label:"Search for the state of golden record tasks by task identifiers",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Task Client"],description:"Returns the state of golden record tasks based on the provided task identifiers. Unknown task identifiers are ignored.",operationId:"searchTaskStates",requestBody:{content:{"application/json":{schema:{required:["taskIds"],type:"object",properties:{taskIds:{type:"array",items:{type:"string"}}},description:"Request object for giving a list of task identifiers to search for the state of tasks"}}},required:!0},responses:{200:{description:"The state of the tasks for the provided task identifiers.",content:{"application/json":{schema:{required:["tasks"],type:"object",properties:{tasks:{type:"array",items:{required:["processingState","taskId"],type:"object",properties:{taskId:{type:"string"},businessPartnerResult:{required:["address","identifiers","legalEntity","nameParts","roles","site","states"],type:"object",properties:{nameParts:{type:"array",description:"The list of name parts to accommodate the different number of name fields in different systems.",items:{type:"string"}},identifiers:{type:"array",description:"The list of identifiers of the business partner. Sorted and duplicates removed by the service.",items:{type:"object",properties:{type:{type:"string",description:"Technical key of the type to which this identifier belongs to"},value:{type:"string",description:"Value of the identifier"},issuingBody:{type:"string",description:"Body which issued the identifier"}}}},states:{type:"array",description:"The list of (temporary) states of the business partner. Sorted and duplicates removed by the service.",items:{type:"object",properties:{validFrom:{type:"string",description:"Date since when the status is/was valid.",format:"date-time"},validTo:{type:"string",description:"Date until the status was valid, if applicable.",format:"date-time"},type:{type:"string",description:"The type of this specified status.",enum:["ACTIVE","INACTIVE"]}}}},roles:{type:"array",description:"One or more of the roles, the business partner assumes with respect to the sharing member: Supplier, Customer. Sorted and duplicates removed by the service.",items:{type:"string",enum:["SUPPLIER","CUSTOMER","ONE_TIME_SUPPLIER","ONE_TIME_CUSTOMER"]}},legalEntity:{required:["classifications"],type:"object",properties:{legalEntityBpn:{type:"string",description:"The BPNL of the legal entity, on which the business partner provides a view."},legalName:{type:"string",description:"The name of the legal entity, on which the business partner provides a view, according to official registers."},shortName:{type:"string",description:"The abbreviated name of the legal entity, on which the business partner provides a view."},legalForm:{type:"string",description:"The legal form of the legal entity, on which the business partner provides a view."},classifications:{type:"array",description:"The list of classifications of the business partner, such as a specific industry. Sorted and duplicates removed by the service.",items:{required:["type"],type:"object",properties:{type:{type:"string",description:"Type of classification.",enum:["NACE","NAF","NAICS","SIC"]},code:{type:"string",description:"The identifier of the class belonging to the classification."},value:{type:"string",description:"The name of the class belonging to the classification."}}}},confidenceCriteria:{required:["checkedByExternalDataSource","confidenceLevel","lastConfidenceCheckAt","nextConfidenceCheckAt","numberOfBusinessPartners","sharedByOwner"],type:"object",properties:{sharedByOwner:{type:"boolean"},checkedByExternalDataSource:{type:"boolean"},numberOfBusinessPartners:{type:"integer",format:"int32"},lastConfidenceCheckAt:{type:"string",format:"date-time"},nextConfidenceCheckAt:{type:"string",format:"date-time"},confidenceLevel:{type:"integer",format:"int32"}}}},description:"The legal entity, on which the business partner provides a view."},site:{type:"object",properties:{siteBpn:{type:"string",description:"The BPNS of the site, on which the business partner provides a view."},name:{type:"string",description:"The name of the site, on which the business partner provides a view. This is not according to official registers but according to the name the owner chooses."},confidenceCriteria:{required:["checkedByExternalDataSource","confidenceLevel","lastConfidenceCheckAt","nextConfidenceCheckAt","numberOfBusinessPartners","sharedByOwner"],type:"object",properties:{sharedByOwner:{type:"boolean"},checkedByExternalDataSource:{type:"boolean"},numberOfBusinessPartners:{type:"integer",format:"int32"},lastConfidenceCheckAt:{type:"string",format:"date-time"},nextConfidenceCheckAt:{type:"string",format:"date-time"},confidenceLevel:{type:"integer",format:"int32"}}}},description:"The site, on which the business partner provides a view."},address:{type:"object",properties:{addressBpn:{type:"string",description:"The BPNA of the address, on which the business partner provides a view."},name:{type:"string",description:"The name of the address, on which the business partner provides a view. This is not according to official registers but according to the name the sharing members agree on, such as the name of a gate or any other additional names that designate the address in common parlance."},addressType:{type:"string",description:"One of the address types: Legal Address, Site Main Address, Legal and Site Main Address, Additional Address. ",enum:["LegalAndSiteMainAddress","LegalAddress","SiteMainAddress","AdditionalAddress"]},physicalPostalAddress:{type:"object",properties:{geographicCoordinates:{required:["latitude","longitude"],type:"object",properties:{longitude:{type:"number",description:"Longitude coordinate",format:"float"},latitude:{type:"number",description:"Latitude coordinate",format:"float"},altitude:{type:"number",description:"Altitude, if applicable",format:"float"}},description:"The exact location of the physical postal address in latitude, longitude, and altitude."},country:{type:"string",description:"The 2-digit country code of the physical postal address according to ISO 3166-1.",enum:["UNDEFINED","AC","AD","AE","AF","AG","AI","AL","AM","AN","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BU","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CP","CR","CS","CU","CV","CW","CX","CY","CZ","DE","DG","DJ","DK","DM","DO","DZ","EA","EC","EE","EG","EH","ER","ES","ET","EU","EZ","FI","FJ","FK","FM","FO","FR","FX","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","IC","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NT","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SF","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SU","SV","SX","SY","SZ","TA","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TP","TR","TT","TV","TW","TZ","UA","UG","UK","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","XI","XU","XK","YE","YT","YU","ZA","ZM","ZR","ZW"]},administrativeAreaLevel1:{type:"string",description:"The 2-digit country subdivision code according to ISO 3166-2, such as a region within a country."},administrativeAreaLevel2:{type:"string",description:"The name of the locally regulated secondary country subdivision of the physical postal address, such as county within a country."},administrativeAreaLevel3:{type:"string",description:"The name of the locally regulated tertiary country subdivision of the physical address, such as townships within a country."},postalCode:{type:"string",description:"The alphanumeric identifier (sometimes including spaces or punctuation) of the physical postal address for the purpose of sorting mail, synonyms:postcode, post code, PIN or ZIP code."},city:{type:"string",description:"The name of the city of the physical postal address, synonyms: town, village, municipality."},district:{type:"string",description:"The name of the district of the physical postal address which divides the city in several smaller areas."},street:{type:"object",properties:{name:{type:"string",description:"The name of the street."},houseNumber:{type:"string",description:"The number representing the exact location of a building within the street."},houseNumberSupplement:{type:"string"},milestone:{type:"string",description:"The number representing the exact location of an addressed object within a street without house numbers, such as within long roads."},direction:{type:"string",description:"The cardinal direction describing where the exit to the location of the addressed object on large highways / motorways is located, such as Highway 101 South."},namePrefix:{type:"string",description:"The street related information, which is usually printed before the official street name on an address label."},additionalNamePrefix:{type:"string",description:"The additional street related information, which is usually printed before the official street name on an address label."},nameSuffix:{type:"string",description:"The street related information, which is usually printed after the official street name on an address label."},additionalNameSuffix:{type:"string",description:"The additional street related information, which is usually printed after the official street name on an address label."}}},companyPostalCode:{type:"string",description:"The company postal code of the physical postal address, which is sometimes required for large companies."},industrialZone:{type:"string",description:"The industrial zone of the physical postal address, designating an area for industrial development, synonym: industrial area."},building:{type:"string",description:"The alphanumeric identifier of the building addressed by the physical postal address."},floor:{type:"string",description:"The number of a floor in the building addressed by the physical postal address, synonym: level."},door:{type:"string",description:"The number of a door in the building on the respective floor addressed by the physical postal address, synonyms: room, suite."}},description:"The physical postal address of the address, on which the business partner provides a view, such as an office, warehouse, gate, etc."},alternativePostalAddress:{type:"object",properties:{geographicCoordinates:{required:["latitude","longitude"],type:"object",properties:{longitude:{type:"number",description:"Longitude coordinate",format:"float"},latitude:{type:"number",description:"Latitude coordinate",format:"float"},altitude:{type:"number",description:"Altitude, if applicable",format:"float"}},description:"The exact location of the physical postal address in latitude, longitude, and altitude."},country:{type:"string",description:"The 2-digit country code of the physical postal address according to ISO 3166-1.",enum:["UNDEFINED","AC","AD","AE","AF","AG","AI","AL","AM","AN","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BU","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CP","CR","CS","CU","CV","CW","CX","CY","CZ","DE","DG","DJ","DK","DM","DO","DZ","EA","EC","EE","EG","EH","ER","ES","ET","EU","EZ","FI","FJ","FK","FM","FO","FR","FX","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","IC","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NT","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SF","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SU","SV","SX","SY","SZ","TA","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TP","TR","TT","TV","TW","TZ","UA","UG","UK","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","XI","XU","XK","YE","YT","YU","ZA","ZM","ZR","ZW"]},administrativeAreaLevel1:{type:"string",description:"The 2-digit country subdivision code according to ISO 3166-2, such as a region within a country."},postalCode:{type:"string",description:"The alphanumeric identifier (sometimes including spaces or punctuation) of the physical postal address for the purpose of sorting mail, synonyms:postcode, post code, PIN or ZIP code."},city:{type:"string",description:"The name of the city of the physical postal address, synonyms: town, village, municipality."},deliveryServiceType:{type:"string",description:"One of the alternative postal address types: P.O. box, private bag, boite postale.",enum:["PO_BOX","PRIVATE_BAG","BOITE_POSTALE"]},deliveryServiceQualifier:{type:"string",description:"The qualifier uniquely identifying the delivery service endpoint of the alternative postal address in conjunction with the delivery service number. In some countries for example, entering a P.O. box number, postal code and city is not sufficient to uniquely identify a P.O. box, because the same P.O. box number is assigned multiple times in some cities."},deliveryServiceNumber:{type:"string",description:"The number indicating the delivery service endpoint of the alternative postal address to which the delivery is to be delivered, such as a P.O. box number or a private bag number."}},description:"The alternative postal address of the address, on which the business partner provides a view, for example if the goods are to be picked up somewhere else."},confidenceCriteria:{required:["checkedByExternalDataSource","confidenceLevel","lastConfidenceCheckAt","nextConfidenceCheckAt","numberOfBusinessPartners","sharedByOwner"],type:"object",properties:{sharedByOwner:{type:"boolean"},checkedByExternalDataSource:{type:"boolean"},numberOfBusinessPartners:{type:"integer",format:"int32"},lastConfidenceCheckAt:{type:"string",format:"date-time"},nextConfidenceCheckAt:{type:"string",format:"date-time"},confidenceLevel:{type:"integer",format:"int32"}}}},description:"The address, on which the business partner provides a view. "},ownerBpnL:{type:"string",description:"The BPNL of the company sharing and claiming this business partner as its own"}},description:"Generic business partner with external id"},processingState:{required:["createdAt","errors","modifiedAt","resultState","step","stepState","timeout"],type:"object",properties:{resultState:{type:"string",description:"The processing result of the task, can also still be pending",enum:["Pending","Success","Error"]},step:{type:"string",description:"The last step this task has entered",enum:["CleanAndSync","PoolSync","Clean"]},stepState:{type:"string",description:"Whether the task is queued or already reserved for the latest step",enum:["Queued","Reserved","Success","Error"]},errors:{type:"array",description:"The actual errors that happened during processing if the task has an error result state. The errors refer to the latest step.",items:{required:["description","type"],type:"object",properties:{type:{type:"string",description:"The type of error that occurred",enum:["Timeout","Unspecified"]},description:{type:"string",description:"The free text, detailed description of the error"}},description:"Describes an error that happened during processing of a task"}},createdAt:{type:"string",description:"When the task has been created",format:"date-time"},modifiedAt:{type:"string",description:"When the task has last been modified",format:"date-time"}},description:"Contains detailed information about the current processing state of a golden record task"}},description:"The golden record task's processing state together with optional business partner data in case processing is done"}}},description:"Response object for giving a list of task states"}}}},400:{description:"On malformed task search requests"}},method:"post",path:"/api/golden-record-tasks/state/search",servers:[{url:"http://localhost:8085",description:"Generated server url"}],jsonRequestBodyExample:{taskIds:["string"]},info:{title:"Business Partner Data Management Orchestrator",description:"Orchestrator component acts as a passive component and offers for each processing steps individual endpoints",version:"5.0.1-SNAPSHOT"},postman:{name:"Search for the state of golden record tasks by task identifiers",description:{content:"Returns the state of golden record tasks based on the provided task identifiers. Unknown task identifiers are ignored.",type:"text/plain"},url:{path:["api","golden-record-tasks","state","search"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"docs-kits/kits/Business Partner Kit/Software Development View/Orchestrator Api/business-partner-data-management-orchestrator",custom_edit_url:null},m=void 0,h={unversionedId:"kits/Business Partner Kit/Software Development View/Orchestrator Api/search-task-states",id:"version-24.03/kits/Business Partner Kit/Software Development View/Orchestrator Api/search-task-states",title:"Search for the state of golden record tasks by task identifiers",description:"Returns the state of golden record tasks based on the provided task identifiers. Unknown task identifiers are ignored.",source:"@site/docs-kits_versioned_docs/version-24.03/kits/Business Partner Kit/Software Development View/Orchestrator Api/search-task-states.api.mdx",sourceDirName:"kits/Business Partner Kit/Software Development View/Orchestrator Api",slug:"/kits/Business Partner Kit/Software Development View/Orchestrator Api/search-task-states",permalink:"/docs-kits/24.03/kits/Business Partner Kit/Software Development View/Orchestrator Api/search-task-states",draft:!1,editUrl:null,tags:[],version:"24.03",frontMatter:{id:"search-task-states",title:"Search for the state of golden record tasks by task identifiers",description:"Returns the state of golden record tasks based on the provided task identifiers. Unknown task identifiers are ignored.",sidebar_label:"Search for the state of golden record tasks by task identifiers",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Task Client"],description:"Returns the state of golden record tasks based on the provided task identifiers. Unknown task identifiers are ignored.",operationId:"searchTaskStates",requestBody:{content:{"application/json":{schema:{required:["taskIds"],type:"object",properties:{taskIds:{type:"array",items:{type:"string"}}},description:"Request object for giving a list of task identifiers to search for the state of tasks"}}},required:!0},responses:{200:{description:"The state of the tasks for the provided task identifiers.",content:{"application/json":{schema:{required:["tasks"],type:"object",properties:{tasks:{type:"array",items:{required:["processingState","taskId"],type:"object",properties:{taskId:{type:"string"},businessPartnerResult:{required:["address","identifiers","legalEntity","nameParts","roles","site","states"],type:"object",properties:{nameParts:{type:"array",description:"The list of name parts to accommodate the different number of name fields in different systems.",items:{type:"string"}},identifiers:{type:"array",description:"The list of identifiers of the business partner. Sorted and duplicates removed by the service.",items:{type:"object",properties:{type:{type:"string",description:"Technical key of the type to which this identifier belongs to"},value:{type:"string",description:"Value of the identifier"},issuingBody:{type:"string",description:"Body which issued the identifier"}}}},states:{type:"array",description:"The list of (temporary) states of the business partner. Sorted and duplicates removed by the service.",items:{type:"object",properties:{validFrom:{type:"string",description:"Date since when the status is/was valid.",format:"date-time"},validTo:{type:"string",description:"Date until the status was valid, if applicable.",format:"date-time"},type:{type:"string",description:"The type of this specified status.",enum:["ACTIVE","INACTIVE"]}}}},roles:{type:"array",description:"One or more of the roles, the business partner assumes with respect to the sharing member: Supplier, Customer. Sorted and duplicates removed by the service.",items:{type:"string",enum:["SUPPLIER","CUSTOMER","ONE_TIME_SUPPLIER","ONE_TIME_CUSTOMER"]}},legalEntity:{required:["classifications"],type:"object",properties:{legalEntityBpn:{type:"string",description:"The BPNL of the legal entity, on which the business partner provides a view."},legalName:{type:"string",description:"The name of the legal entity, on which the business partner provides a view, according to official registers."},shortName:{type:"string",description:"The abbreviated name of the legal entity, on which the business partner provides a view."},legalForm:{type:"string",description:"The legal form of the legal entity, on which the business partner provides a view."},classifications:{type:"array",description:"The list of classifications of the business partner, such as a specific industry. Sorted and duplicates removed by the service.",items:{required:["type"],type:"object",properties:{type:{type:"string",description:"Type of classification.",enum:["NACE","NAF","NAICS","SIC"]},code:{type:"string",description:"The identifier of the class belonging to the classification."},value:{type:"string",description:"The name of the class belonging to the classification."}}}},confidenceCriteria:{required:["checkedByExternalDataSource","confidenceLevel","lastConfidenceCheckAt","nextConfidenceCheckAt","numberOfBusinessPartners","sharedByOwner"],type:"object",properties:{sharedByOwner:{type:"boolean"},checkedByExternalDataSource:{type:"boolean"},numberOfBusinessPartners:{type:"integer",format:"int32"},lastConfidenceCheckAt:{type:"string",format:"date-time"},nextConfidenceCheckAt:{type:"string",format:"date-time"},confidenceLevel:{type:"integer",format:"int32"}}}},description:"The legal entity, on which the business partner provides a view."},site:{type:"object",properties:{siteBpn:{type:"string",description:"The BPNS of the site, on which the business partner provides a view."},name:{type:"string",description:"The name of the site, on which the business partner provides a view. This is not according to official registers but according to the name the owner chooses."},confidenceCriteria:{required:["checkedByExternalDataSource","confidenceLevel","lastConfidenceCheckAt","nextConfidenceCheckAt","numberOfBusinessPartners","sharedByOwner"],type:"object",properties:{sharedByOwner:{type:"boolean"},checkedByExternalDataSource:{type:"boolean"},numberOfBusinessPartners:{type:"integer",format:"int32"},lastConfidenceCheckAt:{type:"string",format:"date-time"},nextConfidenceCheckAt:{type:"string",format:"date-time"},confidenceLevel:{type:"integer",format:"int32"}}}},description:"The site, on which the business partner provides a view."},address:{type:"object",properties:{addressBpn:{type:"string",description:"The BPNA of the address, on which the business partner provides a view."},name:{type:"string",description:"The name of the address, on which the business partner provides a view. This is not according to official registers but according to the name the sharing members agree on, such as the name of a gate or any other additional names that designate the address in common parlance."},addressType:{type:"string",description:"One of the address types: Legal Address, Site Main Address, Legal and Site Main Address, Additional Address. ",enum:["LegalAndSiteMainAddress","LegalAddress","SiteMainAddress","AdditionalAddress"]},physicalPostalAddress:{type:"object",properties:{geographicCoordinates:{required:["latitude","longitude"],type:"object",properties:{longitude:{type:"number",description:"Longitude coordinate",format:"float"},latitude:{type:"number",description:"Latitude coordinate",format:"float"},altitude:{type:"number",description:"Altitude, if applicable",format:"float"}},description:"The exact location of the physical postal address in latitude, longitude, and altitude."},country:{type:"string",description:"The 2-digit country code of the physical postal address according to ISO 3166-1.",enum:["UNDEFINED","AC","AD","AE","AF","AG","AI","AL","AM","AN","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BU","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CP","CR","CS","CU","CV","CW","CX","CY","CZ","DE","DG","DJ","DK","DM","DO","DZ","EA","EC","EE","EG","EH","ER","ES","ET","EU","EZ","FI","FJ","FK","FM","FO","FR","FX","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","IC","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NT","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SF","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SU","SV","SX","SY","SZ","TA","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TP","TR","TT","TV","TW","TZ","UA","UG","UK","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","XI","XU","XK","YE","YT","YU","ZA","ZM","ZR","ZW"]},administrativeAreaLevel1:{type:"string",description:"The 2-digit country subdivision code according to ISO 3166-2, such as a region within a country."},administrativeAreaLevel2:{type:"string",description:"The name of the locally regulated secondary country subdivision of the physical postal address, such as county within a country."},administrativeAreaLevel3:{type:"string",description:"The name of the locally regulated tertiary country subdivision of the physical address, such as townships within a country."},postalCode:{type:"string",description:"The alphanumeric identifier (sometimes including spaces or punctuation) of the physical postal address for the purpose of sorting mail, synonyms:postcode, post code, PIN or ZIP code."},city:{type:"string",description:"The name of the city of the physical postal address, synonyms: town, village, municipality."},district:{type:"string",description:"The name of the district of the physical postal address which divides the city in several smaller areas."},street:{type:"object",properties:{name:{type:"string",description:"The name of the street."},houseNumber:{type:"string",description:"The number representing the exact location of a building within the street."},houseNumberSupplement:{type:"string"},milestone:{type:"string",description:"The number representing the exact location of an addressed object within a street without house numbers, such as within long roads."},direction:{type:"string",description:"The cardinal direction describing where the exit to the location of the addressed object on large highways / motorways is located, such as Highway 101 South."},namePrefix:{type:"string",description:"The street related information, which is usually printed before the official street name on an address label."},additionalNamePrefix:{type:"string",description:"The additional street related information, which is usually printed before the official street name on an address label."},nameSuffix:{type:"string",description:"The street related information, which is usually printed after the official street name on an address label."},additionalNameSuffix:{type:"string",description:"The additional street related information, which is usually printed after the official street name on an address label."}}},companyPostalCode:{type:"string",description:"The company postal code of the physical postal address, which is sometimes required for large companies."},industrialZone:{type:"string",description:"The industrial zone of the physical postal address, designating an area for industrial development, synonym: industrial area."},building:{type:"string",description:"The alphanumeric identifier of the building addressed by the physical postal address."},floor:{type:"string",description:"The number of a floor in the building addressed by the physical postal address, synonym: level."},door:{type:"string",description:"The number of a door in the building on the respective floor addressed by the physical postal address, synonyms: room, suite."}},description:"The physical postal address of the address, on which the business partner provides a view, such as an office, warehouse, gate, etc."},alternativePostalAddress:{type:"object",properties:{geographicCoordinates:{required:["latitude","longitude"],type:"object",properties:{longitude:{type:"number",description:"Longitude coordinate",format:"float"},latitude:{type:"number",description:"Latitude coordinate",format:"float"},altitude:{type:"number",description:"Altitude, if applicable",format:"float"}},description:"The exact location of the physical postal address in latitude, longitude, and altitude."},country:{type:"string",description:"The 2-digit country code of the physical postal address according to ISO 3166-1.",enum:["UNDEFINED","AC","AD","AE","AF","AG","AI","AL","AM","AN","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BU","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CP","CR","CS","CU","CV","CW","CX","CY","CZ","DE","DG","DJ","DK","DM","DO","DZ","EA","EC","EE","EG","EH","ER","ES","ET","EU","EZ","FI","FJ","FK","FM","FO","FR","FX","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","IC","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NT","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SF","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SU","SV","SX","SY","SZ","TA","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TP","TR","TT","TV","TW","TZ","UA","UG","UK","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","XI","XU","XK","YE","YT","YU","ZA","ZM","ZR","ZW"]},administrativeAreaLevel1:{type:"string",description:"The 2-digit country subdivision code according to ISO 3166-2, such as a region within a country."},postalCode:{type:"string",description:"The alphanumeric identifier (sometimes including spaces or punctuation) of the physical postal address for the purpose of sorting mail, synonyms:postcode, post code, PIN or ZIP code."},city:{type:"string",description:"The name of the city of the physical postal address, synonyms: town, village, municipality."},deliveryServiceType:{type:"string",description:"One of the alternative postal address types: P.O. box, private bag, boite postale.",enum:["PO_BOX","PRIVATE_BAG","BOITE_POSTALE"]},deliveryServiceQualifier:{type:"string",description:"The qualifier uniquely identifying the delivery service endpoint of the alternative postal address in conjunction with the delivery service number. In some countries for example, entering a P.O. box number, postal code and city is not sufficient to uniquely identify a P.O. box, because the same P.O. box number is assigned multiple times in some cities."},deliveryServiceNumber:{type:"string",description:"The number indicating the delivery service endpoint of the alternative postal address to which the delivery is to be delivered, such as a P.O. box number or a private bag number."}},description:"The alternative postal address of the address, on which the business partner provides a view, for example if the goods are to be picked up somewhere else."},confidenceCriteria:{required:["checkedByExternalDataSource","confidenceLevel","lastConfidenceCheckAt","nextConfidenceCheckAt","numberOfBusinessPartners","sharedByOwner"],type:"object",properties:{sharedByOwner:{type:"boolean"},checkedByExternalDataSource:{type:"boolean"},numberOfBusinessPartners:{type:"integer",format:"int32"},lastConfidenceCheckAt:{type:"string",format:"date-time"},nextConfidenceCheckAt:{type:"string",format:"date-time"},confidenceLevel:{type:"integer",format:"int32"}}}},description:"The address, on which the business partner provides a view. "},ownerBpnL:{type:"string",description:"The BPNL of the company sharing and claiming this business partner as its own"}},description:"Generic business partner with external id"},processingState:{required:["createdAt","errors","modifiedAt","resultState","step","stepState","timeout"],type:"object",properties:{resultState:{type:"string",description:"The processing result of the task, can also still be pending",enum:["Pending","Success","Error"]},step:{type:"string",description:"The last step this task has entered",enum:["CleanAndSync","PoolSync","Clean"]},stepState:{type:"string",description:"Whether the task is queued or already reserved for the latest step",enum:["Queued","Reserved","Success","Error"]},errors:{type:"array",description:"The actual errors that happened during processing if the task has an error result state. The errors refer to the latest step.",items:{required:["description","type"],type:"object",properties:{type:{type:"string",description:"The type of error that occurred",enum:["Timeout","Unspecified"]},description:{type:"string",description:"The free text, detailed description of the error"}},description:"Describes an error that happened during processing of a task"}},createdAt:{type:"string",description:"When the task has been created",format:"date-time"},modifiedAt:{type:"string",description:"When the task has last been modified",format:"date-time"}},description:"Contains detailed information about the current processing state of a golden record task"}},description:"The golden record task's processing state together with optional business partner data in case processing is done"}}},description:"Response object for giving a list of task states"}}}},400:{description:"On malformed task search requests"}},method:"post",path:"/api/golden-record-tasks/state/search",servers:[{url:"http://localhost:8085",description:"Generated server url"}],jsonRequestBodyExample:{taskIds:["string"]},info:{title:"Business Partner Data Management Orchestrator",description:"Orchestrator component acts as a passive component and offers for each processing steps individual endpoints",version:"5.0.1-SNAPSHOT"},postman:{name:"Search for the state of golden record tasks by task identifiers",description:{content:"Returns the state of golden record tasks based on the provided task identifiers. Unknown task identifiers are ignored.",type:"text/plain"},url:{path:["api","golden-record-tasks","state","search"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"docs-kits/kits/Business Partner Kit/Software Development View/Orchestrator Api/business-partner-data-management-orchestrator",custom_edit_url:null},sidebar:"kits",previous:{title:"Create new golden record tasks for given business partner data",permalink:"/docs-kits/24.03/kits/Business Partner Kit/Software Development View/Orchestrator Api/create-tasks"},next:{title:"Task Worker",permalink:"/docs-kits/24.03/category/kits/Business Partner Kit/Software Development View/Orchestrator Api/task-worker"}},u={},y=[{value:"Search for the state of golden record tasks by task identifiers",id:"search-for-the-state-of-golden-record-tasks-by-task-identifiers",level:2}],f={toc:y};function g(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,s.Z)({},f,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"search-for-the-state-of-golden-record-tasks-by-task-identifiers"},"Search for the state of golden record tasks by task identifiers"),(0,a.kt)("p",null,"Returns the state of golden record tasks based on the provided task identifiers. Unknown task identifiers are ignored."),(0,a.kt)(n.Z,{mdxType:"MimeTabs"},(0,a.kt)(l.Z,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,a.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,a.kt)("summary",{style:{textAlign:"left"}},(0,a.kt)("strong",null,"Request Body"),(0,a.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,a.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,a.kt)("ul",{style:{marginLeft:"1rem"}},(0,a.kt)(d.Z,{collapsible:!1,name:"taskIds",required:!0,deprecated:void 0,schemaDescription:void 0,schemaName:"string[]",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))),(0,a.kt)("div",null,(0,a.kt)(r.Z,{mdxType:"ApiTabs"},(0,a.kt)(l.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,a.kt)("div",null,(0,a.kt)("p",null,"The state of the tasks for the provided task identifiers.")),(0,a.kt)("div",null,(0,a.kt)(n.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,a.kt)(l.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,a.kt)(c.Z,{mdxType:"SchemaTabs"},(0,a.kt)(l.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,a.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,a.kt)("summary",{style:{textAlign:"left"}},(0,a.kt)("strong",null,"Schema")),(0,a.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,a.kt)("ul",{style:{marginLeft:"1rem"}},(0,a.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{}},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"tasks"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)(d.Z,{collapsible:!1,name:"taskId",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{}},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"businessPartnerResult"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object")),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,a.kt)("p",null,"Generic business partner with external id")),(0,a.kt)(d.Z,{collapsible:!1,name:"nameParts",required:!1,deprecated:void 0,schemaDescription:"The list of name parts to accommodate the different number of name fields in different systems.",schemaName:"string[]",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{}},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"identifiers"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,a.kt)("p",null,"The list of identifiers of the business partner. Sorted and duplicates removed by the service.")),(0,a.kt)(d.Z,{collapsible:!1,name:"type",required:!1,deprecated:void 0,schemaDescription:"Technical key of the type to which this identifier belongs to",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"value",required:!1,deprecated:void 0,schemaDescription:"Value of the identifier",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"issuingBody",required:!1,deprecated:void 0,schemaDescription:"Body which issued the identifier",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,a.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{}},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"states"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,a.kt)("p",null,"The list of (temporary) states of the business partner. Sorted and duplicates removed by the service.")),(0,a.kt)(d.Z,{collapsible:!1,name:"validFrom",required:!1,deprecated:void 0,schemaDescription:"Date since when the status is/was valid.",schemaName:"date-time",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"validTo",required:!1,deprecated:void 0,schemaDescription:"Date until the status was valid, if applicable.",schemaName:"date-time",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"type",required:!1,deprecated:void 0,schemaDescription:"The type of this specified status.",schemaName:"string",qualifierMessage:"**Possible values:** [`ACTIVE`, `INACTIVE`]",defaultValue:void 0,mdxType:"SchemaItem"})))),(0,a.kt)(d.Z,{collapsible:!1,name:"roles",required:!1,deprecated:void 0,schemaDescription:"One or more of the roles, the business partner assumes with respect to the sharing member: Supplier, Customer. Sorted and duplicates removed by the service.",schemaName:"string[]",qualifierMessage:"**Possible values:** [`SUPPLIER`, `CUSTOMER`, `ONE_TIME_SUPPLIER`, `ONE_TIME_CUSTOMER`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{}},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"legalEntity"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object")),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,a.kt)("p",null,"The legal entity, on which the business partner provides a view.")),(0,a.kt)(d.Z,{collapsible:!1,name:"legalEntityBpn",required:!1,deprecated:void 0,schemaDescription:"The BPNL of the legal entity, on which the business partner provides a view.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"legalName",required:!1,deprecated:void 0,schemaDescription:"The name of the legal entity, on which the business partner provides a view, according to official registers.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"shortName",required:!1,deprecated:void 0,schemaDescription:"The abbreviated name of the legal entity, on which the business partner provides a view.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"legalForm",required:!1,deprecated:void 0,schemaDescription:"The legal form of the legal entity, on which the business partner provides a view.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{}},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"classifications"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,a.kt)("p",null,"The list of classifications of the business partner, such as a specific industry. Sorted and duplicates removed by the service.")),(0,a.kt)(d.Z,{collapsible:!1,name:"type",required:!1,deprecated:void 0,schemaDescription:"Type of classification.",schemaName:"string",qualifierMessage:"**Possible values:** [`NACE`, `NAF`, `NAICS`, `SIC`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"code",required:!1,deprecated:void 0,schemaDescription:"The identifier of the class belonging to the classification.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"value",required:!1,deprecated:void 0,schemaDescription:"The name of the class belonging to the classification.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,a.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{}},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"confidenceCriteria"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object")),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)(d.Z,{collapsible:!1,name:"sharedByOwner",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"boolean",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"checkedByExternalDataSource",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"boolean",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"numberOfBusinessPartners",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"int32",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"lastConfidenceCheckAt",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"date-time",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"nextConfidenceCheckAt",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"date-time",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"confidenceLevel",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"int32",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))))),(0,a.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{}},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"site"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object")),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,a.kt)("p",null,"The site, on which the business partner provides a view.")),(0,a.kt)(d.Z,{collapsible:!1,name:"siteBpn",required:!1,deprecated:void 0,schemaDescription:"The BPNS of the site, on which the business partner provides a view.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"name",required:!1,deprecated:void 0,schemaDescription:"The name of the site, on which the business partner provides a view. This is not according to official registers but according to the name the owner chooses.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{}},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"confidenceCriteria"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object")),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)(d.Z,{collapsible:!1,name:"sharedByOwner",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"boolean",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"checkedByExternalDataSource",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"boolean",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"numberOfBusinessPartners",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"int32",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"lastConfidenceCheckAt",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"date-time",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"nextConfidenceCheckAt",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"date-time",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"confidenceLevel",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"int32",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))))),(0,a.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{}},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"address"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object")),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,a.kt)("p",null,"The address, on which the business partner provides a view. ")),(0,a.kt)(d.Z,{collapsible:!1,name:"addressBpn",required:!1,deprecated:void 0,schemaDescription:"The BPNA of the address, on which the business partner provides a view.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"name",required:!1,deprecated:void 0,schemaDescription:"The name of the address, on which the business partner provides a view. This is not according to official registers but according to the name the sharing members agree on, such as the name of a gate or any other additional names that designate the address in common parlance.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"addressType",required:!1,deprecated:void 0,schemaDescription:"One of the address types: Legal Address, Site Main Address, Legal and Site Main Address, Additional Address. ",schemaName:"string",qualifierMessage:"**Possible values:** [`LegalAndSiteMainAddress`, `LegalAddress`, `SiteMainAddress`, `AdditionalAddress`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{}},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"physicalPostalAddress"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object")),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,a.kt)("p",null,"The physical postal address of the address, on which the business partner provides a view, such as an office, warehouse, gate, etc.")),(0,a.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{}},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"geographicCoordinates"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object")),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,a.kt)("p",null,"The exact location of the physical postal address in latitude, longitude, and altitude.")),(0,a.kt)(d.Z,{collapsible:!1,name:"longitude",required:!1,deprecated:void 0,schemaDescription:"Longitude coordinate",schemaName:"float",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"latitude",required:!1,deprecated:void 0,schemaDescription:"Latitude coordinate",schemaName:"float",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"altitude",required:!1,deprecated:void 0,schemaDescription:"Altitude, if applicable",schemaName:"float",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,a.kt)(d.Z,{collapsible:!1,name:"country",required:!1,deprecated:void 0,schemaDescription:"The 2-digit country code of the physical postal address according to ISO 3166-1.",schemaName:"string",qualifierMessage:"**Possible values:** [`UNDEFINED`, `AC`, `AD`, `AE`, `AF`, `AG`, `AI`, `AL`, `AM`, `AN`, `AO`, `AQ`, `AR`, `AS`, `AT`, `AU`, `AW`, `AX`, `AZ`, `BA`, `BB`, `BD`, `BE`, `BF`, `BG`, `BH`, `BI`, `BJ`, `BL`, `BM`, `BN`, `BO`, `BQ`, `BR`, `BS`, `BT`, `BU`, `BV`, `BW`, `BY`, `BZ`, `CA`, `CC`, `CD`, `CF`, `CG`, `CH`, `CI`, `CK`, `CL`, `CM`, `CN`, `CO`, `CP`, `CR`, `CS`, `CU`, `CV`, `CW`, `CX`, `CY`, `CZ`, `DE`, `DG`, `DJ`, `DK`, `DM`, `DO`, `DZ`, `EA`, `EC`, `EE`, `EG`, `EH`, `ER`, `ES`, `ET`, `EU`, `EZ`, `FI`, `FJ`, `FK`, `FM`, `FO`, `FR`, `FX`, `GA`, `GB`, `GD`, `GE`, `GF`, `GG`, `GH`, `GI`, `GL`, `GM`, `GN`, `GP`, `GQ`, `GR`, `GS`, `GT`, `GU`, `GW`, `GY`, `HK`, `HM`, `HN`, `HR`, `HT`, `HU`, `IC`, `ID`, `IE`, `IL`, `IM`, `IN`, `IO`, `IQ`, `IR`, `IS`, `IT`, `JE`, `JM`, `JO`, `JP`, `KE`, `KG`, `KH`, `KI`, `KM`, `KN`, `KP`, `KR`, `KW`, `KY`, `KZ`, `LA`, `LB`, `LC`, `LI`, `LK`, `LR`, `LS`, `LT`, `LU`, `LV`, `LY`, `MA`, `MC`, `MD`, `ME`, `MF`, `MG`, `MH`, `MK`, `ML`, `MM`, `MN`, `MO`, `MP`, `MQ`, `MR`, `MS`, `MT`, `MU`, `MV`, `MW`, `MX`, `MY`, `MZ`, `NA`, `NC`, `NE`, `NF`, `NG`, `NI`, `NL`, `NO`, `NP`, `NR`, `NT`, `NU`, `NZ`, `OM`, `PA`, `PE`, `PF`, `PG`, `PH`, `PK`, `PL`, `PM`, `PN`, `PR`, `PS`, `PT`, `PW`, `PY`, `QA`, `RE`, `RO`, `RS`, `RU`, `RW`, `SA`, `SB`, `SC`, `SD`, `SE`, `SF`, `SG`, `SH`, `SI`, `SJ`, `SK`, `SL`, `SM`, `SN`, `SO`, `SR`, `SS`, `ST`, `SU`, `SV`, `SX`, `SY`, `SZ`, `TA`, `TC`, `TD`, `TF`, `TG`, `TH`, `TJ`, `TK`, `TL`, `TM`, `TN`, `TO`, `TP`, `TR`, `TT`, `TV`, `TW`, `TZ`, `UA`, `UG`, `UK`, `UM`, `US`, `UY`, `UZ`, `VA`, `VC`, `VE`, `VG`, `VI`, `VN`, `VU`, `WF`, `WS`, `XI`, `XU`, `XK`, `YE`, `YT`, `YU`, `ZA`, `ZM`, `ZR`, `ZW`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"administrativeAreaLevel1",required:!1,deprecated:void 0,schemaDescription:"The 2-digit country subdivision code according to ISO 3166-2, such as a region within a country.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"administrativeAreaLevel2",required:!1,deprecated:void 0,schemaDescription:"The name of the locally regulated secondary country subdivision of the physical postal address, such as county within a country.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"administrativeAreaLevel3",required:!1,deprecated:void 0,schemaDescription:"The name of the locally regulated tertiary country subdivision of the physical address, such as townships within a country.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"postalCode",required:!1,deprecated:void 0,schemaDescription:"The alphanumeric identifier (sometimes including spaces or punctuation) of the physical postal address for the purpose of sorting mail, synonyms:postcode, post code, PIN or ZIP code.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"city",required:!1,deprecated:void 0,schemaDescription:"The name of the city of the physical postal address, synonyms: town, village, municipality.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"district",required:!1,deprecated:void 0,schemaDescription:"The name of the district of the physical postal address which divides the city in several smaller areas.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{}},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"street"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object")),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)(d.Z,{collapsible:!1,name:"name",required:!1,deprecated:void 0,schemaDescription:"The name of the street.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"houseNumber",required:!1,deprecated:void 0,schemaDescription:"The number representing the exact location of a building within the street.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"houseNumberSupplement",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"milestone",required:!1,deprecated:void 0,schemaDescription:"The number representing the exact location of an addressed object within a street without house numbers, such as within long roads.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"direction",required:!1,deprecated:void 0,schemaDescription:"The cardinal direction describing where the exit to the location of the addressed object on large highways / motorways is located, such as Highway 101 South.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"namePrefix",required:!1,deprecated:void 0,schemaDescription:"The street related information, which is usually printed before the official street name on an address label.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"additionalNamePrefix",required:!1,deprecated:void 0,schemaDescription:"The additional street related information, which is usually printed before the official street name on an address label.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"nameSuffix",required:!1,deprecated:void 0,schemaDescription:"The street related information, which is usually printed after the official street name on an address label.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"additionalNameSuffix",required:!1,deprecated:void 0,schemaDescription:"The additional street related information, which is usually printed after the official street name on an address label.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,a.kt)(d.Z,{collapsible:!1,name:"companyPostalCode",required:!1,deprecated:void 0,schemaDescription:"The company postal code of the physical postal address, which is sometimes required for large companies.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"industrialZone",required:!1,deprecated:void 0,schemaDescription:"The industrial zone of the physical postal address, designating an area for industrial development, synonym: industrial area.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"building",required:!1,deprecated:void 0,schemaDescription:"The alphanumeric identifier of the building addressed by the physical postal address.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"floor",required:!1,deprecated:void 0,schemaDescription:"The number of a floor in the building addressed by the physical postal address, synonym: level.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"door",required:!1,deprecated:void 0,schemaDescription:"The number of a door in the building on the respective floor addressed by the physical postal address, synonyms: room, suite.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,a.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{}},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"alternativePostalAddress"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object")),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,a.kt)("p",null,"The alternative postal address of the address, on which the business partner provides a view, for example if the goods are to be picked up somewhere else.")),(0,a.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{}},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"geographicCoordinates"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object")),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,a.kt)("p",null,"The exact location of the physical postal address in latitude, longitude, and altitude.")),(0,a.kt)(d.Z,{collapsible:!1,name:"longitude",required:!1,deprecated:void 0,schemaDescription:"Longitude coordinate",schemaName:"float",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"latitude",required:!1,deprecated:void 0,schemaDescription:"Latitude coordinate",schemaName:"float",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"altitude",required:!1,deprecated:void 0,schemaDescription:"Altitude, if applicable",schemaName:"float",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,a.kt)(d.Z,{collapsible:!1,name:"country",required:!1,deprecated:void 0,schemaDescription:"The 2-digit country code of the physical postal address according to ISO 3166-1.",schemaName:"string",qualifierMessage:"**Possible values:** [`UNDEFINED`, `AC`, `AD`, `AE`, `AF`, `AG`, `AI`, `AL`, `AM`, `AN`, `AO`, `AQ`, `AR`, `AS`, `AT`, `AU`, `AW`, `AX`, `AZ`, `BA`, `BB`, `BD`, `BE`, `BF`, `BG`, `BH`, `BI`, `BJ`, `BL`, `BM`, `BN`, `BO`, `BQ`, `BR`, `BS`, `BT`, `BU`, `BV`, `BW`, `BY`, `BZ`, `CA`, `CC`, `CD`, `CF`, `CG`, `CH`, `CI`, `CK`, `CL`, `CM`, `CN`, `CO`, `CP`, `CR`, `CS`, `CU`, `CV`, `CW`, `CX`, `CY`, `CZ`, `DE`, `DG`, `DJ`, `DK`, `DM`, `DO`, `DZ`, `EA`, `EC`, `EE`, `EG`, `EH`, `ER`, `ES`, `ET`, `EU`, `EZ`, `FI`, `FJ`, `FK`, `FM`, `FO`, `FR`, `FX`, `GA`, `GB`, `GD`, `GE`, `GF`, `GG`, `GH`, `GI`, `GL`, `GM`, `GN`, `GP`, `GQ`, `GR`, `GS`, `GT`, `GU`, `GW`, `GY`, `HK`, `HM`, `HN`, `HR`, `HT`, `HU`, `IC`, `ID`, `IE`, `IL`, `IM`, `IN`, `IO`, `IQ`, `IR`, `IS`, `IT`, `JE`, `JM`, `JO`, `JP`, `KE`, `KG`, `KH`, `KI`, `KM`, `KN`, `KP`, `KR`, `KW`, `KY`, `KZ`, `LA`, `LB`, `LC`, `LI`, `LK`, `LR`, `LS`, `LT`, `LU`, `LV`, `LY`, `MA`, `MC`, `MD`, `ME`, `MF`, `MG`, `MH`, `MK`, `ML`, `MM`, `MN`, `MO`, `MP`, `MQ`, `MR`, `MS`, `MT`, `MU`, `MV`, `MW`, `MX`, `MY`, `MZ`, `NA`, `NC`, `NE`, `NF`, `NG`, `NI`, `NL`, `NO`, `NP`, `NR`, `NT`, `NU`, `NZ`, `OM`, `PA`, `PE`, `PF`, `PG`, `PH`, `PK`, `PL`, `PM`, `PN`, `PR`, `PS`, `PT`, `PW`, `PY`, `QA`, `RE`, `RO`, `RS`, `RU`, `RW`, `SA`, `SB`, `SC`, `SD`, `SE`, `SF`, `SG`, `SH`, `SI`, `SJ`, `SK`, `SL`, `SM`, `SN`, `SO`, `SR`, `SS`, `ST`, `SU`, `SV`, `SX`, `SY`, `SZ`, `TA`, `TC`, `TD`, `TF`, `TG`, `TH`, `TJ`, `TK`, `TL`, `TM`, `TN`, `TO`, `TP`, `TR`, `TT`, `TV`, `TW`, `TZ`, `UA`, `UG`, `UK`, `UM`, `US`, `UY`, `UZ`, `VA`, `VC`, `VE`, `VG`, `VI`, `VN`, `VU`, `WF`, `WS`, `XI`, `XU`, `XK`, `YE`, `YT`, `YU`, `ZA`, `ZM`, `ZR`, `ZW`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"administrativeAreaLevel1",required:!1,deprecated:void 0,schemaDescription:"The 2-digit country subdivision code according to ISO 3166-2, such as a region within a country.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"postalCode",required:!1,deprecated:void 0,schemaDescription:"The alphanumeric identifier (sometimes including spaces or punctuation) of the physical postal address for the purpose of sorting mail, synonyms:postcode, post code, PIN or ZIP code.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"city",required:!1,deprecated:void 0,schemaDescription:"The name of the city of the physical postal address, synonyms: town, village, municipality.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"deliveryServiceType",required:!1,deprecated:void 0,schemaDescription:"One of the alternative postal address types: P.O. box, private bag, boite postale.",schemaName:"string",qualifierMessage:"**Possible values:** [`PO_BOX`, `PRIVATE_BAG`, `BOITE_POSTALE`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"deliveryServiceQualifier",required:!1,deprecated:void 0,schemaDescription:"The qualifier uniquely identifying the delivery service endpoint of the alternative postal address in conjunction with the delivery service number. In some countries for example, entering a P.O. box number, postal code and city is not sufficient to uniquely identify a P.O. box, because the same P.O. box number is assigned multiple times in some cities.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"deliveryServiceNumber",required:!1,deprecated:void 0,schemaDescription:"The number indicating the delivery service endpoint of the alternative postal address to which the delivery is to be delivered, such as a P.O. box number or a private bag number.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,a.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{}},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"confidenceCriteria"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object")),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)(d.Z,{collapsible:!1,name:"sharedByOwner",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"boolean",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"checkedByExternalDataSource",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"boolean",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"numberOfBusinessPartners",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"int32",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"lastConfidenceCheckAt",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"date-time",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"nextConfidenceCheckAt",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"date-time",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"confidenceLevel",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"int32",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))))),(0,a.kt)(d.Z,{collapsible:!1,name:"ownerBpnL",required:!1,deprecated:void 0,schemaDescription:"The BPNL of the company sharing and claiming this business partner as its own",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,a.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{}},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"processingState"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object")),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,a.kt)("p",null,"Contains detailed information about the current processing state of a golden record task")),(0,a.kt)(d.Z,{collapsible:!1,name:"resultState",required:!1,deprecated:void 0,schemaDescription:"The processing result of the task, can also still be pending",schemaName:"string",qualifierMessage:"**Possible values:** [`Pending`, `Success`, `Error`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"step",required:!1,deprecated:void 0,schemaDescription:"The last step this task has entered",schemaName:"string",qualifierMessage:"**Possible values:** [`CleanAndSync`, `PoolSync`, `Clean`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"stepState",required:!1,deprecated:void 0,schemaDescription:"Whether the task is queued or already reserved for the latest step",schemaName:"string",qualifierMessage:"**Possible values:** [`Queued`, `Reserved`, `Success`, `Error`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{}},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"errors"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,a.kt)("p",null,"The actual errors that happened during processing if the task has an error result state. The errors refer to the latest step.")),(0,a.kt)(d.Z,{collapsible:!1,name:"type",required:!1,deprecated:void 0,schemaDescription:"The type of error that occurred",schemaName:"string",qualifierMessage:"**Possible values:** [`Timeout`, `Unspecified`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"description",required:!1,deprecated:void 0,schemaDescription:"The free text, detailed description of the error",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,a.kt)(d.Z,{collapsible:!1,name:"createdAt",required:!1,deprecated:void 0,schemaDescription:"When the task has been created",schemaName:"date-time",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"modifiedAt",required:!1,deprecated:void 0,schemaDescription:"When the task has last been modified",schemaName:"date-time",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(d.Z,{collapsible:!1,name:"timeout",required:!1,deprecated:!0,schemaDescription:"The timestamp until the task is removed from the Orchestrator",schemaName:"date-time",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))))))))),(0,a.kt)(l.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,a.kt)(o.Z,{responseExample:'{\n  "tasks": [\n    {\n      "taskId": "string",\n      "businessPartnerResult": {\n        "nameParts": [\n          "string"\n        ],\n        "identifiers": [\n          {\n            "type": "string",\n            "value": "string",\n            "issuingBody": "string"\n          }\n        ],\n        "states": [\n          {\n            "validFrom": "2024-02-22",\n            "validTo": "2024-02-22",\n            "type": "ACTIVE"\n          }\n        ],\n        "roles": [\n          "SUPPLIER"\n        ],\n        "legalEntity": {\n          "legalEntityBpn": "string",\n          "legalName": "string",\n          "shortName": "string",\n          "legalForm": "string",\n          "classifications": [\n            {\n              "type": "NACE",\n              "code": "string",\n              "value": "string"\n            }\n          ],\n          "confidenceCriteria": {\n            "sharedByOwner": true,\n            "checkedByExternalDataSource": true,\n            "numberOfBusinessPartners": 0,\n            "lastConfidenceCheckAt": "2024-02-22",\n            "nextConfidenceCheckAt": "2024-02-22",\n            "confidenceLevel": 0\n          }\n        },\n        "site": {\n          "siteBpn": "string",\n          "name": "string",\n          "confidenceCriteria": {\n            "sharedByOwner": true,\n            "checkedByExternalDataSource": true,\n            "numberOfBusinessPartners": 0,\n            "lastConfidenceCheckAt": "2024-02-22",\n            "nextConfidenceCheckAt": "2024-02-22",\n            "confidenceLevel": 0\n          }\n        },\n        "address": {\n          "addressBpn": "string",\n          "name": "string",\n          "addressType": "LegalAndSiteMainAddress",\n          "physicalPostalAddress": {\n            "geographicCoordinates": {\n              "longitude": 0,\n              "latitude": 0,\n              "altitude": 0\n            },\n            "country": "UNDEFINED",\n            "administrativeAreaLevel1": "string",\n            "administrativeAreaLevel2": "string",\n            "administrativeAreaLevel3": "string",\n            "postalCode": "string",\n            "city": "string",\n            "district": "string",\n            "street": {\n              "name": "string",\n              "houseNumber": "string",\n              "houseNumberSupplement": "string",\n              "milestone": "string",\n              "direction": "string",\n              "namePrefix": "string",\n              "additionalNamePrefix": "string",\n              "nameSuffix": "string",\n              "additionalNameSuffix": "string"\n            },\n            "companyPostalCode": "string",\n            "industrialZone": "string",\n            "building": "string",\n            "floor": "string",\n            "door": "string"\n          },\n          "alternativePostalAddress": {\n            "geographicCoordinates": {\n              "longitude": 0,\n              "latitude": 0,\n              "altitude": 0\n            },\n            "country": "UNDEFINED",\n            "administrativeAreaLevel1": "string",\n            "postalCode": "string",\n            "city": "string",\n            "deliveryServiceType": "PO_BOX",\n            "deliveryServiceQualifier": "string",\n            "deliveryServiceNumber": "string"\n          },\n          "confidenceCriteria": {\n            "sharedByOwner": true,\n            "checkedByExternalDataSource": true,\n            "numberOfBusinessPartners": 0,\n            "lastConfidenceCheckAt": "2024-02-22",\n            "nextConfidenceCheckAt": "2024-02-22",\n            "confidenceLevel": 0\n          }\n        },\n        "ownerBpnL": "string"\n      },\n      "processingState": {\n        "resultState": "Pending",\n        "step": "CleanAndSync",\n        "stepState": "Queued",\n        "errors": [\n          {\n            "type": "Timeout",\n            "description": "string"\n          }\n        ],\n        "createdAt": "2024-02-22",\n        "modifiedAt": "2024-02-22"\n      }\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,a.kt)(l.Z,{label:"400",value:"400",mdxType:"TabItem"},(0,a.kt)("div",null,(0,a.kt)("p",null,"On malformed task search requests")),(0,a.kt)("div",null)))))}g.isMDXComponent=!0}}]);