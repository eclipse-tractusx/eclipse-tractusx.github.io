"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[27427],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(f,o(o({ref:t},s),{},{components:n})):a.createElement(f,o({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},47168:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const i={},o="Data Plane Selector Configuration Extension",l={unversionedId:"kits/tractusx-edc/edc-extensions/dataplane-selector-configuration/README",id:"version-23.12/kits/tractusx-edc/edc-extensions/dataplane-selector-configuration/README",title:"Data Plane Selector Configuration Extension",description:"This control-plane extension makes it possible configure one or more Data Plane Instances. During a transfer the control",source:"@site/docs-kits_versioned_docs/version-23.12/kits/tractusx-edc/edc-extensions/dataplane-selector-configuration/README.md",sourceDirName:"kits/tractusx-edc/edc-extensions/dataplane-selector-configuration",slug:"/kits/tractusx-edc/edc-extensions/dataplane-selector-configuration/",permalink:"/docs-kits/23.12/kits/tractusx-edc/edc-extensions/dataplane-selector-configuration/",draft:!1,tags:[],version:"23.12",frontMatter:{},sidebar:"kits",previous:{title:"DataPlane Proxy Provider Core",permalink:"/docs-kits/23.12/kits/tractusx-edc/edc-extensions/dataplane-proxy/edc-dataplane-proxy-provider-core/"},next:{title:"Control Plane EDR API",permalink:"/docs-kits/23.12/kits/tractusx-edc/edc-extensions/edr/edr-api/"}},p={},c=[{value:"Configuration",id:"configuration",level:2},{value:"Helm Example Configuration using environment variables",id:"helm-example-configuration-using-environment-variables",level:3}],s={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"data-plane-selector-configuration-extension"},"Data Plane Selector Configuration Extension"),(0,r.kt)("p",null,"This control-plane extension makes it possible configure one or more Data Plane Instances. During a transfer the control\nplane will look for an instance with matching capabilities to transfer data."),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"Per data plane instance the following settings must be configured. As ",(0,r.kt)("inlineCode",{parentName:"p"},"<data-plane-id>")," any unique string is valid."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Key"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Mandatory"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"edc.dataplane.selector.",(0,r.kt)("inlineCode",{parentName:"td"},"<data-plane-id>"),".url"),(0,r.kt)("td",{parentName:"tr",align:"left"},"URL to connect to the Data Plane Instance."),(0,r.kt)("td",{parentName:"tr",align:null},"X"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"http://plato-edc-dataplane:9999/api/dataplane/control"},"http://plato-edc-dataplane:9999/api/dataplane/control"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"edc.dataplane.selector.",(0,r.kt)("inlineCode",{parentName:"td"},"<data-plane-id>"),".sourcetypes"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Source Types in a comma separated List."),(0,r.kt)("td",{parentName:"tr",align:null},"X"),(0,r.kt)("td",{parentName:"tr",align:null},"HttpData")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"edc.dataplane.selector.",(0,r.kt)("inlineCode",{parentName:"td"},"<data-plane-id>"),".destinationtypes"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Destination Types in a comma separated List."),(0,r.kt)("td",{parentName:"tr",align:null},"X"),(0,r.kt)("td",{parentName:"tr",align:null},"HttpProxy")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"edc.dataplane.selector.",(0,r.kt)("inlineCode",{parentName:"td"},"<data-plane-id>"),".properties"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Additional properties of the Data Plane Instance."),(0,r.kt)("td",{parentName:"tr",align:null},"(X)"),(0,r.kt)("td",{parentName:"tr",align:null},'{ "publicApiUrl": "',(0,r.kt)("a",{parentName:"td",href:"http://plato-edc-dataplane:8185/api/public"},"http://plato-edc-dataplane:8185/api/public"),'" }')))),(0,r.kt)("p",null,"The property ",(0,r.kt)("inlineCode",{parentName:"p"},"publicApiUrl")," is mandatory for Data Plane Instances with destination type ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpProxy"),"."),(0,r.kt)("h3",{id:"helm-example-configuration-using-environment-variables"},"Helm Example Configuration using environment variables"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'EDC_DATAPLANE_SELECTOR_PLATOPLANE_URL: http://plato-edc-dataplane:9999/api/dataplane/control\nEDC_DATAPLANE_SELECTOR_PLATOPLANE_SOURCETYPES : HttpData\nEDC_DATAPLANE_SELECTOR_PLATOPLANE_DESTINATIONTYPES: HttpProxy\nEDC_DATAPLANE_SELECTOR_PLATOPLANE_PROPERTIES: >-\n  { \n    "publicApiUrl": "http://plato-edc-dataplane:8185/api/public"\n  }\n')))}d.isMDXComponent=!0}}]);