"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[12448],{28453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>o});var s=n(96540);const t={},a=s.createContext(t);function r(e){const i=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(a.Provider,{value:i},e.children)}},31095:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"release/trg-4/trg-4-02","title":"TRG 4.02 - Base Images","description":"| Status | Created     | Post-History                                                                    |","source":"@site/docs/release/trg-4/trg-4-02.md","sourceDirName":"release/trg-4","slug":"/release/trg-4/trg-4-02","permalink":"/docs/release/trg-4/trg-4-02","draft":false,"unlisted":false,"editUrl":"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io/tree/main/docs/release/trg-4/trg-4-02.md","tags":[],"version":"current","frontMatter":{"title":"TRG 4.02 - Base Images"},"sidebar":"docs","previous":{"title":"TRG 4.01 - Image tagging","permalink":"/docs/release/trg-4/trg-4-01"},"next":{"title":"TRG 4.03 - Non-root container","permalink":"/docs/release/trg-4/trg-4-03"}}');var t=n(74848),a=n(28453);const r={title:"TRG 4.02 - Base Images"},o=void 0,d={},l=[{value:"Why",id:"why",level:2},{value:"Description",id:"description",level:2},{value:"Aligned Base Images",id:"aligned-base-images",level:3},{value:"Use minor or major Image Tag",id:"use-minor-or-major-image-tag",level:3},{value:"Use Base Image as-is",id:"use-base-image-as-is",level:3}];function c(e){const i={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(i.table,{children:[(0,t.jsx)(i.thead,{children:(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.th,{children:"Status"}),(0,t.jsx)(i.th,{children:"Created"}),(0,t.jsx)(i.th,{children:"Post-History"})]})}),(0,t.jsxs)(i.tbody,{children:[(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"Update"}),(0,t.jsx)(i.td,{children:"15-Jan-2024"}),(0,t.jsx)(i.td,{children:"Add image tag usage, use base image as-is"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"Active"}),(0,t.jsx)(i.td,{children:"06-Dec-2023"}),(0,t.jsx)(i.td,{children:"Add advantages of Dockerhub images"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"Active"}),(0,t.jsx)(i.td,{children:"04-May-2023"}),(0,t.jsx)(i.td,{children:"Remove notice in favor of dedicated TRG; Add mandatory base image for frontends"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"Active"}),(0,t.jsx)(i.td,{children:"25-Nov-2022"}),(0,t.jsx)(i.td,{children:"Initial release"})]})]})]}),"\n",(0,t.jsx)(i.h2,{id:"why",children:"Why"}),"\n",(0,t.jsxs)(i.p,{children:["As part of our legal due diligence, we need to provide the best information possible about our distributed (published)\nDocker images. Similar to our 3rd-party dependency scans and the ",(0,t.jsx)(i.code,{children:"DEPENDENCIES"})," file, Docker images also have to be\nscanned and the results published. We want to help you to keep a high standard process, by defining guidelines,\ndescribed in this TRG."]}),"\n",(0,t.jsx)(i.h2,{id:"description",children:"Description"}),"\n",(0,t.jsxs)(i.p,{children:["As Eclipse Tractus-X project, we don't have automated processes for publishing container scan results (yet). This is why\nwe use information that is already gathered for us. DockerHub is running container scans for\nall ",(0,t.jsx)(i.a,{href:"https://docs.docker.com/trusted-content/official-images/",children:"official images"})," and is publishing the scans result in\nthe ",(0,t.jsx)(i.a,{href:"https://github.com/docker-library/repo-info",children:"docker-library/repo-info repository"}),"."]}),"\n",(0,t.jsx)(i.p,{children:"Utilizing official images from DockerHub is advantageous due to its role as a trusted repository of curated and verified\nopen source containers. DockerHub provides a centralized platform where developers can access a wide range of pre-built\ncontainers which adhere to established best practices and meet certain standards of quality, security, and reliability,\ngiving developers confidence in the integrity of the containers they deploy. By incorporating prepared images, teams can\nfoster consistency across environments, reduce the likelihood of vulnerabilities, and accelerate the overall software\ndelivery pipeline rather than managing complex container configurations from scratch."}),"\n",(0,t.jsxs)(i.p,{children:["We are leveraging this information by restricting the base images we use for our published container images to a minimal\nset. Aligning on specific base images also gives us the opportunity to provide you with templates for the legal notice,\nlike described in ",(0,t.jsx)(i.a,{href:"/docs/release/trg-4/trg-4-06",children:"TRG 4.06 - Notice for docker images"})]}),"\n",(0,t.jsx)(i.h3,{id:"aligned-base-images",children:"Aligned Base Images"}),"\n",(0,t.jsx)(i.p,{children:"The following table lists container base images, that are already agreed on."}),"\n",(0,t.jsxs)(i.table,{children:[(0,t.jsx)(i.thead,{children:(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.th,{children:"Language / Runtime / OS"}),(0,t.jsx)(i.th,{children:"Container base image"}),(0,t.jsx)(i.th,{children:"Notes"})]})}),(0,t.jsxs)(i.tbody,{children:[(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"Java / Kotlin / JVM based"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://hub.docker.com/_/eclipse-temurin",children:"Eclipse Temurin"})}),(0,t.jsxs)(i.td,{children:["prefer JRE over JDK and alpine tags for your JRE version, e.g.:",(0,t.jsx)("br",{}),(0,t.jsx)(i.code,{children:"21-jre"}),", ",(0,t.jsx)(i.code,{children:"21-jre-alpine"}),", ",(0,t.jsx)(i.code,{children:"20-jre"}),", ",(0,t.jsx)(i.code,{children:"20-jre-alpine"}),", etc."]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"JS frontends"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://hub.docker.com/r/nginxinc/nginx-unprivileged",children:"nginx-unprivileged"})}),(0,t.jsxs)(i.td,{children:["prefer ",(0,t.jsx)(i.code,{children:"1.25"}),", ",(0,t.jsx)(i.code,{children:"1.25-alpine"})," or ",(0,t.jsx)(i.code,{children:"alpine"})," tag"]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:".NET runtime"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://hub.docker.com/_/microsoft-dotnet-runtime",children:".NET runtime"})}),(0,t.jsxs)(i.td,{children:["prefer ",(0,t.jsx)(i.code,{children:"8.0-alpine"})," tag"]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"ASP.NET runtime"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://hub.docker.com/_/microsoft-dotnet-aspnet",children:"ASP.NET core runtime"})}),(0,t.jsxs)(i.td,{children:["prefer ",(0,t.jsx)(i.code,{children:"8.0-alpine"})," tag"]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"Linux"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://hub.docker.com/_/alpine",children:"Alpine Linux"})}),(0,t.jsxs)(i.td,{children:["prefer ",(0,t.jsx)(i.code,{children:"3.16"}),", ",(0,t.jsx)(i.code,{children:"3.17"}),", ",(0,t.jsx)(i.code,{children:"3.18"})," or ",(0,t.jsx)(i.code,{children:"3.19"})," tag"]})]})]})]}),"\n",(0,t.jsxs)(i.p,{children:["If the language or runtime environment of your product is not listed above, feel free\nto ",(0,t.jsx)(i.a,{href:"https://github.com/eclipse-tractusx/sig-infra/discussions",children:"start a discussion"})," and propose your preferred container\nimages as base image."]}),"\n",(0,t.jsxs)(i.admonition,{type:"info",children:[(0,t.jsxs)(i.p,{children:["As stated in the description above, base image usage is particularly aligned for container images, that we distribute by\npublishing them on DockerHub. In case you are using Docker images for build or testing purposes (for example ",(0,t.jsx)(i.em,{children:"pandoc"})," or\n",(0,t.jsx)(i.em,{children:"cypress"}),", etc.) and you do not publish the images, you can use other publicly available image, as long as the tools are\nopen source license compliant."]}),(0,t.jsxs)(i.p,{children:["For automated TRG checks, you can skip base image checks on Dockerfiles by declaring it in the ",(0,t.jsx)(i.code,{children:".tractusx"})," metadata\nfiles. Details can be found in\nthe ",(0,t.jsx)(i.a,{href:"https://github.com/eclipse-tractusx/sig-release/blob/main/docs/metadata_file.md",children:"metadata file documentation"})]})]}),"\n",(0,t.jsx)(i.h3,{id:"use-minor-or-major-image-tag",children:"Use minor or major Image Tag"}),"\n",(0,t.jsx)(i.p,{children:"Do not use an image tag pointing to a patch version of the image. Instead, use an image tag containing either minor or\nmajor version."}),"\n",(0,t.jsxs)(i.p,{children:["To keep application images compliant, up-to-date and secure it is mandatory to use image tags which allows to rebuild\nthe applications container image without touching the ",(0,t.jsx)(i.code,{children:"Dockerfile"})," to pull an updated version of the base image (e.g. to\nfix a potential problem inside the base image."]}),"\n",(0,t.jsx)(i.admonition,{title:"Do not use image tag with patch version",type:"warning",children:(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-Dockerfile",children:"FROM alpine:3.18.5 as BUILDER\n\nCOPY . /app/build\nWORKDIR /app/build\nRUN build\n\nFROM alpine:3.18.5\n\nCOPY --from=BUILDER /app/build /app\n[...]\n"})})}),"\n",(0,t.jsx)(i.admonition,{title:"Use image tag with minor or major version",type:"tip",children:(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-Dockerfile",children:"FROM alpine:3 as BUILDER\n\nCOPY . /app/build\nWORKDIR /app/build\nRUN build\n\nFROM alpine:3.18\n\nCOPY --from=BUILDER /app/build /app\n\n[...]\n"})})}),"\n",(0,t.jsx)(i.p,{children:"The next time the applications container image is created, an updated base image will be used, if available."}),"\n",(0,t.jsx)(i.h3,{id:"use-base-image-as-is",children:"Use Base Image as-is"}),"\n",(0,t.jsxs)(i.p,{children:["It is recommended to use the base image ",(0,t.jsx)(i.strong,{children:"as-is"})," and to not modify or update it."]}),"\n",(0,t.jsx)(i.p,{children:"Do not use package manager update mechanisms to update the runtime of the base image (e.g. to fix security\nvulnerabilities). Updating or modifying the base image might pull in a new version of a library which is no longer under\nthe correct Intellectual Property and/or license."}),"\n",(0,t.jsx)(i.p,{children:"Same applies for installing additional tools, libraries, commands, which modifies the base image. If possible, select a\nbase image for your application that contains all dependent tools."}),"\n",(0,t.jsx)(i.admonition,{title:"Do not update or install additional packages",type:"warning",children:(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-Dockerfile",children:'# Call for feedback: Does this example make sense at all or \n# should it be removed?\nFROM alpine:3.18.2\n\nCOPY some/binary /app/\nRUN apk update && apk upgrade \\ # fix CVE-2023-123\n    apk add someTool            # install pkg "someTool"\n'})})}),"\n",(0,t.jsxs)(i.p,{children:["In the example a patch level image tag of alpine is used, which is not recommended, and an update/upgrade is done to get\nthe latest versions of all installed packages installed. Instead, use a minor image tag (e.g. ",(0,t.jsx)(i.code,{children:"alpine:3.18"}),") as\nrecommended in ",(0,t.jsx)(i.a,{href:"#use-minor-or-major-image-tag",children:(0,t.jsx)(i.em,{children:"Use minor or major Image Tag"})}),"."]}),"\n",(0,t.jsxs)(i.p,{children:["An exception from modifying the base image might be a build stage in the ",(0,t.jsx)(i.code,{children:"Dockerfile"}),", as long as the resulting image\nuses an unmodified base image, e.g.:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-Dockerfile",children:'FROM alpine:3.18 as BUILDER\n\nENV DOWLOAD_URL "https://some-fqdn/tool.jar"\n\nRUN apk update && apk add curl=8.5.0-r0 --no-cache\nRUN curl -L --proto "=https" -sSf ${DOWLOAD_URL} \\\n    --output /tmp/tool.jar\n\nFROM eclipse-temurin:19-jre-alpine\n\nCOPY --from=otel /tmp/tool.jar .\n\n[...]\n'})})]})}function h(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);