openapi: 3.0.1
paths:
  /assets:
    get:
      deprecated: true
      description: Gets all assets according to a particular query
      operationId: getAllAssets
      parameters:
      - in: query
        name: offset
        schema:
          type: integer
          format: int32
          example: null
      - in: query
        name: limit
        schema:
          type: integer
          format: int32
          example: null
      - in: query
        name: filter
        schema:
          type: string
          example: null
      - in: query
        name: sort
        schema:
          type: string
          enum:
          - ASC
          - DESC
          example: null
      - in: query
        name: sortField
        schema:
          type: string
          example: null
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/AssetResponseDto'
        "400":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: Request body was malformed
      tags:
      - Asset
    post:
      description: Creates a new asset together with a data address
      operationId: createAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetEntryDto'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponseDto'
          description: Asset was created successfully. Returns the asset Id and created
            timestamp
        "400":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: Request body was malformed
        "409":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Could not create asset, because an asset with that ID already\
            \ exists"
      tags:
      - Asset
  /assets/request:
    post:
      description: ' all assets according to a particular query'
      operationId: requestAssets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuerySpecDto'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/AssetResponseDto'
        "400":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: Request body was malformed
      tags:
      - Asset
  /assets/{assetId}:
    put:
      description: "Updates an asset with the given ID if it exists. If the asset\
        \ is not found, no further action is taken. DANGER ZONE: Note that updating\
        \ assets can have unexpected results, especially for contract offers that\
        \ have been sent out or are ongoing in contract negotiations."
      operationId: updateAsset
      parameters:
      - in: path
        name: assetId
        required: true
        schema:
          type: string
          example: null
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetUpdateRequestDto'
      responses:
        "200":
          description: Asset was updated successfully
        "400":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Request was malformed, e.g. id was null"
        "404":
          description: "Asset could not be updated, because it does not exist."
      tags:
      - Asset
  /assets/{assetId}/dataaddress:
    put:
      description: Updates a DataAddress for an asset with the given ID.
      operationId: updateDataAddress
      parameters:
      - in: path
        name: assetId
        required: true
        schema:
          type: string
          example: null
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataAddressDto'
      responses:
        "200":
          description: Asset was updated successfully
        "400":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: An asset with the given ID does not exist
      tags:
      - Asset
  /assets/{id}:
    delete:
      description: "Removes an asset with the given ID if possible. Deleting an asset\
        \ is only possible if that asset is not yet referenced by a contract agreement,\
        \ in which case an error is returned. DANGER ZONE: Note that deleting assets\
        \ can have unexpected results, especially for contract offers that have been\
        \ sent out or ongoing or contract negotiations."
      operationId: removeAsset
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          example: null
      responses:
        "200":
          description: Asset was deleted successfully
        "400":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: An asset with the given ID does not exist
        "409":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "The asset cannot be deleted, because it is referenced by a\
            \ contract agreement"
      tags:
      - Asset
    get:
      description: Gets an asset with the given ID
      operationId: getAsset
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          example: null
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetResponseDto'
          description: The asset
        "400":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: An asset with the given ID does not exist
      tags:
      - Asset
  /assets/{id}/address:
    get:
      description: Gets a data address of an asset with the given ID
      operationId: getAssetDataAddress
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          example: null
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataAddressDto'
          description: The data address
        "400":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: An asset with the given ID does not exist
      tags:
      - Asset
components:
  schemas:
    ApiErrorDetail:
      type: object
      example: null
      properties:
        invalidValue:
          type: string
          example: null
        message:
          type: string
          example: null
        path:
          type: string
          example: null
        type:
          type: string
          example: null
    AssetCreationRequestDto:
      type: object
      example: null
      properties:
        id:
          type: string
          example: null
        properties:
          type: object
          additionalProperties:
            type: object
            example: null
          example: null
      required:
      - properties
    AssetEntryDto:
      type: object
      example: null
      properties:
        asset:
          $ref: '#/components/schemas/AssetCreationRequestDto'
        dataAddress:
          $ref: '#/components/schemas/DataAddressDto'
      required:
      - asset
      - dataAddress
    AssetResponseDto:
      type: object
      example: null
      properties:
        createdAt:
          type: integer
          format: int64
          example: null
        id:
          type: string
          example: null
        properties:
          type: object
          additionalProperties:
            type: object
            example: null
          example: null
    AssetUpdateRequestDto:
      type: object
      example: null
      properties:
        properties:
          type: object
          additionalProperties:
            type: object
            example: null
          example: null
      required:
      - properties
    CriterionDto:
      type: object
      example: null
      properties:
        operandLeft:
          type: object
          example: null
        operandRight:
          type: object
          example: null
        operator:
          type: string
          example: null
      required:
      - operandLeft
      - operator
    DataAddressDto:
      type: object
      example: null
      properties:
        properties:
          type: object
          additionalProperties:
            type: string
            example: null
          example: null
      required:
      - properties
    IdResponseDto:
      type: object
      example: null
      properties:
        createdAt:
          type: integer
          format: int64
          example: null
        id:
          type: string
          example: null
    QuerySpecDto:
      type: object
      example: null
      properties:
        filter:
          type: string
          example: null
        filterExpression:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/CriterionDto'
        limit:
          type: integer
          format: int32
          example: null
        offset:
          type: integer
          format: int32
          example: null
        sortField:
          type: string
          example: null
        sortOrder:
          type: string
          enum:
          - ASC
          - DESC
          example: null
