{"openapi":"3.0.1","info":{"title":"management-api","description":"REST API documentation for the management-api","version":"0.1.3-SNAPSHOT"},"servers":[{"url":"/"}],"paths":{"/callback/{processId}/deprovision":{"post":{"tags":["HTTP Provisioner Webhook"],"operationId":"callDeprovisionWebhook","parameters":[{"name":"processId","in":"path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeprovisionedResource"}}}},"responses":{"default":{"description":"default response","content":{"application/json":{}}}}}},"/callback/{processId}/provision":{"post":{"tags":["HTTP Provisioner Webhook"],"operationId":"callProvisionWebhook","parameters":[{"name":"processId","in":"path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProvisionerWebhookRequest"}}}},"responses":{"default":{"description":"default response","content":{"application/json":{}}}}}},"/check/health":{"get":{"tags":["Application Observability"],"description":"Performs a liveness probe to determine whether the runtime is working properly.","operationId":"checkHealth","responses":{"200":{"description":"The runtime is working properly.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HealthStatus"}}}}}}},"/check/liveness":{"get":{"tags":["Application Observability"],"description":"Performs a liveness probe to determine whether the runtime is working properly.","operationId":"getLiveness","responses":{"200":{"description":"The runtime is working properly.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HealthStatus"}}}}}}},"/check/readiness":{"get":{"tags":["Application Observability"],"description":"Performs a readiness probe to determine whether the runtime is able to accept requests.","operationId":"getReadiness","responses":{"200":{"description":"The runtime is able to accept requests.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HealthStatus"}}}}}}},"/check/startup":{"get":{"tags":["Application Observability"],"description":"Performs a startup probe to determine whether the runtime has completed startup.","operationId":"getStartup","responses":{"200":{"description":"The runtime has completed startup.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HealthStatus"}}}}}}},"/instances":{"get":{"tags":["Dataplane Selector"],"operationId":"getAll","responses":{"default":{"description":"default response","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/DataPlaneInstance"}}}}}}},"post":{"tags":["Dataplane Selector"],"operationId":"addEntry","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataPlaneInstance"}}}},"responses":{"default":{"description":"default response","content":{"application/json":{}}}}}},"/instances/select":{"post":{"tags":["Dataplane Selector"],"operationId":"find","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SelectionRequest"}}}},"responses":{"default":{"description":"default response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataPlaneInstance"}}}}}}},"/v2/assets":{"put":{"tags":["Asset"],"description":"Updates an asset with the given ID if it exists. If the asset is not found, no further action is taken. DANGER ZONE: Note that updating assets can have unexpected results, especially for contract offers that have been sent out or are ongoing in contract negotiations.","operationId":"updateAsset","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AssetUpdateRequestDto"}}}},"responses":{"200":{"description":"Asset was updated successfully"},"400":{"description":"Request was malformed, e.g. id was null","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"404":{"description":"Asset could not be updated, because it does not exist."}}},"post":{"tags":["Asset"],"description":"Creates a new asset together with a data address","operationId":"createAsset","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AssetEntryNewDto"}}}},"responses":{"200":{"description":"Asset was created successfully. Returns the asset Id and created timestamp","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseDto"}}}},"400":{"description":"Request body was malformed","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"409":{"description":"Could not create asset, because an asset with that ID already exists","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/assets/request":{"post":{"tags":["Asset"],"description":" all assets according to a particular query","operationId":"requestAssets","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/QuerySpecDto"}}}},"responses":{"200":{"description":"The assets matching the query","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/AssetResponseDto"}}}}},"400":{"description":"Request body was malformed","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/assets/{assetId}/dataaddress":{"put":{"tags":["Asset"],"description":"Updates a DataAddress for an asset with the given ID.","operationId":"updateDataAddress","parameters":[{"name":"assetId","in":"path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AssetUpdateRequestDto"}}}},"responses":{"200":{"description":"Asset was updated successfully"},"400":{"description":"Request was malformed, e.g. id was null","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"404":{"description":"An asset with the given ID does not exist","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/assets/{id}":{"get":{"tags":["Asset"],"description":"Gets an asset with the given ID","operationId":"getAsset","parameters":[{"name":"id","in":"path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"responses":{"200":{"description":"The asset","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AssetResponseDto"}}}},"400":{"description":"Request was malformed, e.g. id was null","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"404":{"description":"An asset with the given ID does not exist","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}},"delete":{"tags":["Asset"],"description":"Removes an asset with the given ID if possible. Deleting an asset is only possible if that asset is not yet referenced by a contract agreement, in which case an error is returned. DANGER ZONE: Note that deleting assets can have unexpected results, especially for contract offers that have been sent out or ongoing or contract negotiations.","operationId":"removeAsset","parameters":[{"name":"id","in":"path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"responses":{"200":{"description":"Asset was deleted successfully"},"400":{"description":"Request was malformed, e.g. id was null","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"404":{"description":"An asset with the given ID does not exist","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"409":{"description":"The asset cannot be deleted, because it is referenced by a contract agreement","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/assets/{id}/dataaddress":{"get":{"tags":["Asset"],"description":"Gets a data address of an asset with the given ID","operationId":"getAssetDataAddress","parameters":[{"name":"id","in":"path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"responses":{"200":{"description":"The data address","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataAddressDto"}}}},"400":{"description":"Request was malformed, e.g. id was null","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"404":{"description":"An asset with the given ID does not exist","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/catalog/request":{"post":{"tags":["Catalog"],"operationId":"requestCatalog","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CatalogRequestDto"}}}},"responses":{"default":{"description":"Gets contract offers (=catalog) of a single connector","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Catalog"}}}}}}},"/v2/contractagreements/request":{"post":{"tags":["Contract Agreement"],"description":"Gets all contract agreements according to a particular query","operationId":"queryAllAgreements","requestBody":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/QuerySpecDto"}}}},"responses":{"200":{"description":"The contract agreements matching the query","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ContractAgreementDto"}}}}},"400":{"description":"Request body was malformed","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/contractagreements/{id}":{"get":{"tags":["Contract Agreement"],"description":"Gets an contract agreement with the given ID","operationId":"getAgreementById","parameters":[{"name":"id","in":"path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"responses":{"200":{"description":"The contract agreement","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContractAgreementDto"}}}},"400":{"description":"Request was malformed, e.g. id was null","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"404":{"description":"An contract agreement with the given ID does not exist","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/contractdefinitions":{"put":{"tags":["Contract Definition"],"description":"Updated a contract definition with the given ID. The supplied JSON structure must be a valid JSON-LD object","operationId":"updateContractDefinition","requestBody":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/ContractDefinitionRequestDto"}}}},"responses":{"204":{"description":"Contract definition was updated successfully"},"400":{"description":"Request was malformed, e.g. id was null","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"404":{"description":"A contract definition with the given ID does not exist","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}},"post":{"tags":["Contract Definition"],"description":"Creates a new contract definition","operationId":"createContractDefinition","requestBody":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/ContractDefinitionRequestDto"}}}},"responses":{"200":{"description":"contract definition was created successfully. Returns the Contract Definition Id and created timestamp","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseDto"}}}},"400":{"description":"Request body was malformed","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"409":{"description":"Could not create contract definition, because a contract definition with that ID already exists","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/contractdefinitions/request":{"post":{"tags":["Contract Definition"],"description":"Returns all contract definitions according to a query","operationId":"queryAllContractDefinitions","requestBody":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/QuerySpecDto"}}}},"responses":{"200":{"description":"The contract definitions matching the query","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ContractDefinitionResponseDto"}}}}},"400":{"description":"Request was malformed","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/contractdefinitions/{id}":{"get":{"tags":["Contract Definition"],"description":"Gets an contract definition with the given ID","operationId":"getContractDefinition","parameters":[{"name":"id","in":"path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"responses":{"200":{"description":"The contract definition","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContractDefinitionResponseDto"}}}},"400":{"description":"Request was malformed, e.g. id was null","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"404":{"description":"An contract agreement with the given ID does not exist","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}},"delete":{"tags":["Contract Definition"],"description":"Removes a contract definition with the given ID if possible. DANGER ZONE: Note that deleting contract definitions can have unexpected results, especially for contract offers that have been sent out or ongoing or contract negotiations.","operationId":"deleteContractDefinition","parameters":[{"name":"id","in":"path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"responses":{"200":{"description":"Contract definition was deleted successfully"},"400":{"description":"Request was malformed, e.g. id was null","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"404":{"description":"A contract definition with the given ID does not exist","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/contractnegotiations":{"post":{"tags":["Contract Negotiation"],"description":"Initiates a contract negotiation for a given offer and with the given counter part. Please note that successfully invoking this endpoint only means that the negotiation was initiated. Clients must poll the /{id}/state endpoint to track the state","operationId":"initiateContractNegotiation","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NegotiationInitiateRequestDto"}}}},"responses":{"200":{"description":"The negotiation was successfully initiated. Returns the contract negotiation ID and created timestamp","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseDto"}}},"links":{"poll-state":{"operationId":"getNegotiationState","parameters":{"id":"$response.body#/id"}}}},"400":{"description":"Request body was malformed","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/contractnegotiations/request":{"post":{"tags":["Contract Negotiation"],"description":"Returns all contract negotiations according to a query","operationId":"queryNegotiations","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/QuerySpecDto"}}}},"responses":{"200":{"description":"The contract negotiations that match the query","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ContractNegotiationDto"}}}}},"400":{"description":"Request was malformed","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/contractnegotiations/{id}":{"get":{"tags":["Contract Negotiation"],"description":"Gets a contract negotiation with the given ID","operationId":"getNegotiation","parameters":[{"name":"id","in":"path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"responses":{"200":{"description":"The contract negotiation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContractNegotiationDto"}}}},"400":{"description":"Request was malformed, e.g. id was null","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"404":{"description":"An contract negotiation with the given ID does not exist","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/contractnegotiations/{id}/agreement":{"get":{"tags":["Contract Negotiation"],"description":"Gets a contract agreement for a contract negotiation with the given ID","operationId":"getAgreementForNegotiation","parameters":[{"name":"id","in":"path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"responses":{"200":{"description":"The contract agreement that is attached to the negotiation, or null","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContractAgreementDto"}}}},"400":{"description":"Request was malformed, e.g. id was null","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"404":{"description":"An contract negotiation with the given ID does not exist","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/contractnegotiations/{id}/cancel":{"post":{"tags":["Contract Negotiation"],"description":"Requests aborting the contract negotiation. Due to the asynchronous nature of contract negotiations, a successful response only indicates that the request was successfully received. Clients must poll the /{id}/state endpoint to track the state.","operationId":"cancelNegotiation","parameters":[{"name":"id","in":"path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"responses":{"200":{"description":"Request to cancel the Contract negotiation was successfully received","links":{"poll-state":{"operationId":"getNegotiationState"}}},"400":{"description":"Request was malformed, e.g. id was null","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"404":{"description":"A contract negotiation with the given ID does not exist","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/contractnegotiations/{id}/decline":{"post":{"tags":["Contract Negotiation"],"description":"Requests cancelling the contract negotiation. Due to the asynchronous nature of contract negotiations, a successful response only indicates that the request was successfully received. Clients must poll the /{id}/state endpoint to track the state.","operationId":"declineNegotiation","parameters":[{"name":"id","in":"path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"responses":{"200":{"description":"Request to decline the Contract negotiation was successfully received","links":{"poll-state":{"operationId":"getNegotiationState"}}},"400":{"description":"Request was malformed, e.g. id was null","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"404":{"description":"A contract negotiation with the given ID does not exist","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/contractnegotiations/{id}/state":{"get":{"tags":["Contract Negotiation"],"description":"Gets the state of a contract negotiation with the given ID","operationId":"getNegotiationState","parameters":[{"name":"id","in":"path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"responses":{"200":{"description":"The contract negotiation's state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NegotiationState"}}}},"400":{"description":"Request was malformed, e.g. id was null","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"404":{"description":"An contract negotiation with the given ID does not exist","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/policydefinitions":{"post":{"tags":["Policy Definition"],"description":"Creates a new policy definition","operationId":"createPolicyDefinition","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PolicyDefinitionRequestDto"}}}},"responses":{"200":{"description":"policy definition was created successfully. Returns the Policy Definition Id and created timestamp","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseDto"}}}},"400":{"description":"Request body was malformed","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"409":{"description":"Could not create policy definition, because a contract definition with that ID already exists","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/policydefinitions/request":{"post":{"tags":["Policy Definition"],"description":"Returns all policy definitions according to a query","operationId":"queryPolicyDefinitions","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/QuerySpecDto"}}}},"responses":{"200":{"description":"The policy definitions matching the query","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/PolicyDefinitionResponseDto"}}}}},"400":{"description":"Request was malformed","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/policydefinitions/{id}":{"get":{"tags":["Policy Definition"],"description":"Gets a policy definition with the given ID","operationId":"getPolicyDefinition","parameters":[{"name":"id","in":"path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"responses":{"200":{"description":"The  policy definition","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PolicyDefinitionResponseDto"}}}},"400":{"description":"Request was malformed, e.g. id was null","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"404":{"description":"An  policy definition with the given ID does not exist","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}},"put":{"tags":["Policy Definition"],"description":"Updates an existing Policy, If the Policy is not found, an error is reported","operationId":"updatePolicyDefinition","parameters":[{"name":"id","in":"path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PolicyDefinitionUpdateDto"}}}},"responses":{"200":{"description":"policy definition was updated successfully. Returns the Policy Definition Id and updated timestamp"},"400":{"description":"Request body was malformed","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"404":{"description":"policy definition could not be updated, because it does not exists","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}},"delete":{"tags":["Policy Definition"],"description":"Removes a policy definition with the given ID if possible. Deleting a policy definition is only possible if that policy definition is not yet referenced by a contract definition, in which case an error is returned. DANGER ZONE: Note that deleting policy definitions can have unexpected results, do this at your own risk!","operationId":"deletePolicyDefinition","parameters":[{"name":"id","in":"path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"responses":{"200":{"description":"Policy definition was deleted successfully"},"400":{"description":"Request was malformed, e.g. id was null","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"404":{"description":"An policy definition with the given ID does not exist","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"409":{"description":"The policy definition cannot be deleted, because it is referenced by a contract definition","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/transferprocesses":{"post":{"tags":["Transfer Process"],"description":"Initiates a data transfer with the given parameters. Please note that successfully invoking this endpoint only means that the transfer was initiated. Clients must poll the /{id}/state endpoint to track the state","operationId":"initiateTransferProcess","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransferRequestDto"}}}},"responses":{"200":{"description":"The transfer was successfully initiated. Returns the transfer process ID and created timestamp","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseDto"}}},"links":{"poll-state":{"operationId":"getTransferProcessState","parameters":{"id":"$response.body#/id"}}}},"400":{"description":"Request body was malformed","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/transferprocesses/request":{"post":{"tags":["Transfer Process"],"description":"Returns all transfer process according to a query","operationId":"queryTransferProcesses","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/QuerySpecDto"}}}},"responses":{"200":{"description":"The transfer processes matching the query","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/TransferProcessDto"}}}}},"400":{"description":"Request was malformed","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/transferprocesses/{id}":{"get":{"tags":["Transfer Process"],"description":"Gets an transfer process with the given ID","operationId":"getTransferProcess","parameters":[{"name":"id","in":"path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"responses":{"200":{"description":"The transfer process","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransferProcessDto"}}}},"400":{"description":"Request was malformed, e.g. id was null","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"404":{"description":"A transfer process with the given ID does not exist","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/transferprocesses/{id}/deprovision":{"post":{"tags":["Transfer Process"],"description":"Requests the deprovisioning of resources associated with a transfer process. Due to the asynchronous nature of transfers, a successful response only indicates that the request was successfully received. This may take a long time, so clients must poll the /{id}/state endpoint to track the state.","operationId":"deprovisionTransferProcess","parameters":[{"name":"id","in":"path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"responses":{"200":{"description":"Request to deprovision the transfer process was successfully received","links":{"poll-state":{"operationId":"getTransferProcessState"}}},"400":{"description":"Request was malformed, e.g. id was null","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"404":{"description":"A contract negotiation with the given ID does not exist","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/transferprocesses/{id}/state":{"get":{"tags":["Transfer Process"],"description":"Gets the state of a transfer process with the given ID","operationId":"getTransferProcessState","parameters":[{"name":"id","in":"path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"responses":{"200":{"description":"The  transfer process's state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransferState"}}}},"400":{"description":"Request was malformed, e.g. id was null","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"404":{"description":"An  transfer process with the given ID does not exist","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}},"/v2/transferprocesses/{id}/terminate":{"post":{"tags":["Transfer Process"],"description":"Requests the termination of a transfer process. Due to the asynchronous nature of transfers, a successful response only indicates that the request was successfully received. Clients must poll the /{id}/state endpoint to track the state.","operationId":"terminateTransferProcess","parameters":[{"name":"id","in":"path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TerminateTransferDto"}}}},"responses":{"200":{"description":"Request to cancel the transfer process was successfully received","links":{"poll-state":{"operationId":"getTransferProcessState"}}},"400":{"description":"Request was malformed, e.g. id was null","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"404":{"description":"A contract negotiation with the given ID does not exist","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}},"409":{"description":"Could not terminate transfer process, because it is already completed or terminated.","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ApiErrorDetail"}}}}}}}}},"components":{"schemas":{"Action":{"type":"object","properties":{"constraint":{"$ref":"#/components/schemas/Constraint"},"includedIn":{"type":"string","example":null},"type":{"type":"string","example":null}},"example":null},"ApiErrorDetail":{"type":"object","properties":{"invalidValue":{"type":"object","example":null},"message":{"type":"string","example":null},"path":{"type":"string","example":null},"type":{"type":"string","example":null}},"example":null},"Asset":{"type":"object","properties":{"createdAt":{"type":"integer","format":"int64","example":null},"id":{"type":"string","example":null},"privateProperties":{"type":"object","additionalProperties":{"type":"object","example":null},"example":null},"properties":{"type":"object","additionalProperties":{"type":"object","example":null},"example":null}},"example":null},"AssetEntryNewDto":{"type":"object","properties":{"asset":{"$ref":"#/components/schemas/Asset"},"dataAddress":{"$ref":"#/components/schemas/DataAddress"}},"example":null},"AssetResponseDto":{"type":"object","properties":{"@context":{"type":"object","example":null},"@id":{"type":"string","example":null},"@type":{"type":"string","example":null},"createdAt":{"type":"integer","format":"int64","example":null},"privateProperties":{"type":"object","additionalProperties":{"type":"object","example":null},"example":null},"properties":{"type":"object","additionalProperties":{"type":"object","example":null},"example":null}},"example":null},"AssetUpdateRequestDto":{"type":"object","properties":{"@context":{"type":"object","example":null},"@type":{"type":"string","example":null},"privateProperties":{"type":"object","additionalProperties":{"type":"object","example":null},"example":null},"properties":{"type":"object","additionalProperties":{"type":"object","example":null},"example":null}},"example":null},"CallbackAddress":{"type":"object","properties":{"authCodeId":{"type":"string","example":null},"authKey":{"type":"string","example":null},"events":{"uniqueItems":true,"type":"array","example":null,"items":{"type":"string","example":null}},"transactional":{"type":"boolean","example":null},"uri":{"type":"string","example":null}},"example":null},"Catalog":{"type":"object","properties":{"contractOffers":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/ContractOffer"}},"dataServices":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/DataService"}},"datasets":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/Dataset"}},"id":{"type":"string","example":null},"properties":{"type":"object","additionalProperties":{"type":"object","example":null},"example":null}},"example":null},"CatalogRequestDto":{"type":"object","properties":{"@context":{"type":"object","example":null},"@type":{"type":"string","example":null},"protocol":{"type":"string","example":null},"providerUrl":{"type":"string","example":null},"querySpec":{"$ref":"#/components/schemas/QuerySpecDto"}},"example":null},"Constraint":{"required":["edctype"],"type":"object","properties":{"edctype":{"type":"string","example":null}},"example":null,"discriminator":{"propertyName":"edctype"}},"ContractAgreementDto":{"type":"object","properties":{"@context":{"type":"object","example":null},"@id":{"type":"string","example":null},"@type":{"type":"string","example":null},"assetId":{"type":"string","example":null},"consumerId":{"type":"string","example":null},"contractSigningDate":{"type":"integer","format":"int64","example":null},"policy":{"$ref":"#/components/schemas/Policy"},"providerId":{"type":"string","example":null}},"example":null},"ContractDefinitionRequestDto":{"type":"object","properties":{"@context":{"type":"object","example":null},"@id":{"type":"string","example":null},"@type":{"type":"string","example":null},"accessPolicyId":{"type":"string","example":null},"assetsSelector":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/CriterionDto"}},"contractPolicyId":{"type":"string","example":null}},"example":null},"ContractDefinitionResponseDto":{"type":"object","properties":{"@context":{"type":"object","example":null},"@id":{"type":"string","example":null},"@type":{"type":"string","example":null},"accessPolicyId":{"type":"string","example":null},"assetsSelector":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/CriterionDto"}},"contractPolicyId":{"type":"string","example":null},"createdAt":{"type":"integer","format":"int64","example":null}},"example":null},"ContractNegotiationDto":{"type":"object","properties":{"@context":{"type":"object","example":null},"@id":{"type":"string","example":null},"@type":{"type":"string","example":null},"callbackAddresses":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/CallbackAddress"}},"contractAgreementId":{"type":"string","example":null},"counterPartyAddress":{"type":"string","example":null},"createdAt":{"type":"integer","format":"int64","example":null},"errorDetail":{"type":"string","example":null},"protocol":{"type":"string","example":null},"state":{"type":"string","example":null},"type":{"type":"string","example":null,"enum":["CONSUMER","PROVIDER"]},"updatedAt":{"type":"integer","format":"int64","example":null}},"example":null},"ContractOffer":{"type":"object","properties":{"assetId":{"type":"string","example":null},"id":{"type":"string","example":null},"policy":{"$ref":"#/components/schemas/Policy"},"providerId":{"type":"string","example":null}},"example":null},"ContractOfferDescription":{"type":"object","properties":{"assetId":{"type":"string","example":null},"offerId":{"type":"string","example":null},"policy":{"$ref":"#/components/schemas/Policy"}},"example":null},"CriterionDto":{"type":"object","properties":{"@context":{"type":"object","example":null},"@type":{"type":"string","example":null},"operandLeft":{"type":"object","example":null},"operandRight":{"type":"object","example":null},"operator":{"type":"string","example":null}},"example":null},"DataAddress":{"type":"object","properties":{"properties":{"type":"object","additionalProperties":{"type":"string","example":null},"example":null}},"example":null},"DataAddressDto":{"type":"object","properties":{"@context":{"type":"object","example":null},"@type":{"type":"string","example":null},"properties":{"type":"object","additionalProperties":{"type":"string","example":null},"example":null}},"example":null},"DataPlaneInstance":{"type":"object","properties":{"allowedDestTypes":{"uniqueItems":true,"type":"array","example":null,"items":{"type":"string","example":null}},"allowedSourceTypes":{"uniqueItems":true,"type":"array","example":null,"items":{"type":"string","example":null}},"id":{"type":"string","example":null},"lastActive":{"type":"integer","format":"int64","example":null},"properties":{"type":"object","additionalProperties":{"type":"object","example":null},"example":null},"turnCount":{"type":"integer","format":"int32","example":null},"url":{"type":"string","format":"url","example":null}},"example":null},"DataRequestDto":{"type":"object","properties":{"assetId":{"type":"string","example":null},"connectorId":{"type":"string","example":null},"contractId":{"type":"string","example":null},"id":{"type":"string","example":null}},"example":null},"DataService":{"type":"object","properties":{"endpointUrl":{"type":"string","example":null},"id":{"type":"string","example":null},"terms":{"type":"string","example":null}},"example":null},"Dataset":{"type":"object","properties":{"distributions":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/Distribution"}},"id":{"type":"string","example":null},"offers":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/Policy"},"example":null},"properties":{"type":"object","additionalProperties":{"type":"object","example":null},"example":null}},"example":null},"DeprovisionedResource":{"type":"object","properties":{"error":{"type":"boolean","example":null},"errorMessage":{"type":"string","example":null},"inProcess":{"type":"boolean","example":null},"provisionedResourceId":{"type":"string","example":null}},"example":null},"Distribution":{"type":"object","properties":{"dataService":{"$ref":"#/components/schemas/DataService"},"format":{"type":"string","example":null}},"example":null},"Duty":{"type":"object","properties":{"action":{"$ref":"#/components/schemas/Action"},"assignee":{"type":"string","example":null},"assigner":{"type":"string","example":null},"consequence":{"$ref":"#/components/schemas/Duty"},"constraints":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/Constraint"}},"parentPermission":{"$ref":"#/components/schemas/Permission"},"target":{"type":"string","example":null}},"example":null},"Failure":{"type":"object","properties":{"failureDetail":{"type":"string","example":null},"messages":{"type":"array","example":null,"items":{"type":"string","example":null}}},"example":null},"HealthCheckResult":{"type":"object","properties":{"component":{"type":"string","example":null},"failure":{"$ref":"#/components/schemas/Failure"},"isHealthy":{"type":"boolean","example":null}},"example":null},"HealthStatus":{"type":"object","properties":{"componentResults":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/HealthCheckResult"}},"isSystemHealthy":{"type":"boolean","example":null}},"example":null},"IdResponseDto":{"type":"object","properties":{"@context":{"type":"object","example":null},"@id":{"type":"string","example":null},"@type":{"type":"string","example":null},"createdAt":{"type":"integer","format":"int64","example":null}},"example":null},"JsonArray":{"type":"array","properties":{"empty":{"type":"boolean","example":null},"valueType":{"type":"string","example":null,"enum":["ARRAY","OBJECT","STRING","NUMBER","TRUE","FALSE","NULL"]}},"example":null,"items":{"$ref":"#/components/schemas/JsonValue"}},"JsonObject":{"type":"object","properties":{"empty":{"type":"boolean","example":null},"valueType":{"type":"string","example":null,"enum":["ARRAY","OBJECT","STRING","NUMBER","TRUE","FALSE","NULL"]}},"additionalProperties":{"$ref":"#/components/schemas/JsonValue"},"example":null},"JsonValue":{"type":"object","properties":{"valueType":{"type":"string","example":null,"enum":["ARRAY","OBJECT","STRING","NUMBER","TRUE","FALSE","NULL"]}},"example":null},"NegotiationInitiateRequestDto":{"type":"object","properties":{"@context":{"type":"object","example":null},"@type":{"type":"string","example":null},"callbackAddresses":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/CallbackAddress"}},"connectorAddress":{"type":"string","example":null},"connectorId":{"type":"string","example":null},"consumerId":{"type":"string","example":null},"offer":{"$ref":"#/components/schemas/ContractOfferDescription"},"protocol":{"type":"string","example":null},"providerId":{"type":"string","example":null}},"example":null},"NegotiationState":{"type":"object","properties":{"@context":{"type":"object","example":null},"@type":{"type":"string","example":null},"state":{"type":"string","example":null}},"example":null},"Permission":{"type":"object","properties":{"action":{"$ref":"#/components/schemas/Action"},"assignee":{"type":"string","example":null},"assigner":{"type":"string","example":null},"constraints":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/Constraint"}},"duties":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/Duty"}},"target":{"type":"string","example":null}},"example":null},"Policy":{"type":"object","properties":{"@type":{"type":"string","example":null,"enum":["SET","OFFER","CONTRACT"]},"assignee":{"type":"string","example":null},"assigner":{"type":"string","example":null},"extensibleProperties":{"type":"object","additionalProperties":{"type":"object","example":null},"example":null},"inheritsFrom":{"type":"string","example":null},"obligations":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/Duty"}},"permissions":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/Permission"}},"prohibitions":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/Prohibition"}},"target":{"type":"string","example":null}},"example":null},"PolicyDefinitionRequestDto":{"type":"object","properties":{"@id":{"type":"string","example":null},"policy":{"$ref":"#/components/schemas/Policy"}},"example":null},"PolicyDefinitionResponseDto":{"type":"object","properties":{"@context":{"type":"object","example":null},"@id":{"type":"string","example":null},"@type":{"type":"string","example":null},"createdAt":{"type":"integer","format":"int64","example":null},"policy":{"$ref":"#/components/schemas/Policy"}},"example":null},"PolicyDefinitionUpdateDto":{"type":"object","properties":{"policy":{"$ref":"#/components/schemas/Policy"}},"example":null},"Prohibition":{"type":"object","properties":{"action":{"$ref":"#/components/schemas/Action"},"assignee":{"type":"string","example":null},"assigner":{"type":"string","example":null},"constraints":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/Constraint"}},"target":{"type":"string","example":null}},"example":null},"ProvisionerWebhookRequest":{"type":"object","properties":{"apiKeyJwt":{"type":"string","example":null},"assetId":{"type":"string","example":null},"contentDataAddress":{"$ref":"#/components/schemas/DataAddress"},"hasToken":{"type":"boolean","example":null},"resourceDefinitionId":{"type":"string","example":null},"resourceName":{"type":"string","example":null}},"example":null},"QuerySpecDto":{"type":"object","properties":{"@context":{"type":"object","example":null},"@type":{"type":"string","example":null},"filterExpression":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/CriterionDto"}},"limit":{"type":"integer","format":"int32","example":null},"offset":{"type":"integer","format":"int32","example":null},"sortField":{"type":"string","example":null},"sortOrder":{"type":"string","example":null,"enum":["ASC","DESC"]}},"example":null},"SelectionRequest":{"type":"object","properties":{"destination":{"$ref":"#/components/schemas/DataAddress"},"source":{"$ref":"#/components/schemas/DataAddress"},"strategy":{"type":"string","example":null}},"example":null},"TerminateTransferDto":{"type":"object","properties":{"reason":{"type":"string","example":null}},"example":null},"TransferProcessDto":{"type":"object","properties":{"@context":{"type":"object","example":null},"@id":{"type":"string","example":null},"@type":{"type":"string","example":null},"callbackAddresses":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/CallbackAddress"}},"createdAt":{"type":"integer","format":"int64","example":null},"dataDestination":{"$ref":"#/components/schemas/DataAddressDto"},"dataRequest":{"$ref":"#/components/schemas/DataRequestDto"},"errorDetail":{"type":"string","example":null},"properties":{"type":"object","additionalProperties":{"type":"string","example":null},"example":null},"state":{"type":"string","example":null},"stateTimestamp":{"type":"integer","format":"int64","example":null},"type":{"type":"string","example":null},"updatedAt":{"type":"integer","format":"int64","example":null}},"example":null},"TransferRequestDto":{"type":"object","properties":{"assetId":{"type":"string","example":null},"callbackAddresses":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/CallbackAddress"}},"connectorAddress":{"type":"string","example":null},"connectorId":{"type":"string","example":null},"contractId":{"type":"string","example":null},"dataDestination":{"$ref":"#/components/schemas/DataAddress"},"id":{"type":"string","example":null},"managedResources":{"type":"boolean","example":null},"privateProperties":{"type":"object","additionalProperties":{"type":"string","example":null},"example":null},"properties":{"type":"object","additionalProperties":{"type":"string","example":null},"example":null},"protocol":{"type":"string","example":null}},"example":null},"TransferState":{"type":"object","properties":{"state":{"type":"string","example":null}},"example":null}}}}