openapi: 3.0.1
info:
  title: Business Partner Data Management Orchestrator
  description: Orchestrator component acts as a passive component and offers for each processing steps individual endpoints
  version: 4.1.0-SNAPSHOT
servers:
  - url: http://localhost:8085
    description: Generated server url
paths:
  /api/golden-record-tasks:
    post:
      tags:
        - Task Client
      summary: Create new golden record tasks for given business partner data
      description: Create golden record tasks for given business partner data in given mode. The mode decides through which processing steps the given business partner data will go through. The response contains the states of the created tasks in the order of given business partner data.If there is an error in the request no tasks are created (all or nothing). For a single request, the maximum number of business partners in the request is limited to 100 entries.
      operationId: createTasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreateRequest'
        required: true
      responses:
        '200':
          description: The states of successfully created tasks including the task identifier for tracking purposes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCreateResponse'
        '400':
          description: On malformed task create requests or reaching upsert limit
  /api/golden-record-tasks/step-results:
    post:
      tags:
        - Task Worker
      summary: Post step results for reserved golden record tasks in the given step queue
      description: Post business partner step results for the given tasks in the given step queue. In order to post a result for a task it needs to be reserved first, has to currently be in the given step queue and the time limit is not exceeded. The number of results you can post at a time does not need to match the original number of reserved tasks. Results are accepted via strategy 'all or nothing'. For a single request, the maximum number of postable results is limited to 100.
      operationId: resolveStepResults
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskStepResultRequest'
        required: true
      responses:
        '204':
          description: If the results could be processed
        '400':
          description: On malformed requests, reaching upsert limit or posting results for tasks which are missing or in the wrong step queue
  /api/golden-record-tasks/step-reservations:
    post:
      tags:
        - Task Worker
      summary: Reserve the next golden record tasks waiting in the given step queue
      description: Reserve up to a given number of golden record tasks in the given step queue. The response entries contain the business partner data to process which consists of the generic and L/S/A data. The reservation has a time limit which is returned. For a single request, the maximum number of reservable tasks is limited to 100.
      operationId: reserveTasksForStep
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskStepReservationRequest'
        required: true
      responses:
        '200':
          description: The reserved tasks with their business partner data to process.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskStepReservationResponse'
        '400':
          description: On malformed task create requests or reaching upsert limit
  /api/golden-record-tasks/state/search:
    post:
      tags:
        - Task Client
      summary: Search for the state of golden record tasks by task identifiers
      description: Returns the state of golden record tasks based on the provided task identifiers. Unknown task identifiers are ignored.
      operationId: searchTaskStates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskStateRequest'
        required: true
      responses:
        '200':
          description: The state of the tasks for the provided task identifiers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskStateResponse'
        '400':
          description: On malformed task search requests
components:
  schemas:
    AddressIdentifierDto:
      type: object
      properties:
        value:
          type: string
          description: The value of the identifier like "0847976000005".
        type:
          type: string
          description: The type of the identifier.
    AddressStateDto:
      type: object
      properties:
        description:
          type: string
          description: The description from the original source indicating the state of the address.
        validFrom:
          type: string
          description: The date from which the state is valid.
          format: date-time
        validTo:
          type: string
          description: The date until the state is valid.
          format: date-time
        type:
          type: string
          description: 'One of the state types: active, inactive.'
          enum:
            - ACTIVE
            - INACTIVE
    AlternativePostalAddressDto:
      type: object
      properties:
        geographicCoordinates:
          $ref: '#/components/schemas/GeoCoordinateDto'
        country:
          type: string
          description: The 2-digit country code of the physical postal address according to ISO 3166-1.
          enum:
            - UNDEFINED
            - AC
            - AD
            - AE
            - AF
            - AG
            - AI
            - AL
            - AM
            - AN
            - AO
            - AQ
            - AR
            - AS
            - AT
            - AU
            - AW
            - AX
            - AZ
            - BA
            - BB
            - BD
            - BE
            - BF
            - BG
            - BH
            - BI
            - BJ
            - BL
            - BM
            - BN
            - BO
            - BQ
            - BR
            - BS
            - BT
            - BU
            - BV
            - BW
            - BY
            - BZ
            - CA
            - CC
            - CD
            - CF
            - CG
            - CH
            - CI
            - CK
            - CL
            - CM
            - CN
            - CO
            - CP
            - CR
            - CS
            - CU
            - CV
            - CW
            - CX
            - CY
            - CZ
            - DE
            - DG
            - DJ
            - DK
            - DM
            - DO
            - DZ
            - EA
            - EC
            - EE
            - EG
            - EH
            - ER
            - ES
            - ET
            - EU
            - EZ
            - FI
            - FJ
            - FK
            - FM
            - FO
            - FR
            - FX
            - GA
            - GB
            - GD
            - GE
            - GF
            - GG
            - GH
            - GI
            - GL
            - GM
            - GN
            - GP
            - GQ
            - GR
            - GS
            - GT
            - GU
            - GW
            - GY
            - HK
            - HM
            - HN
            - HR
            - HT
            - HU
            - IC
            - ID
            - IE
            - IL
            - IM
            - IN
            - IO
            - IQ
            - IR
            - IS
            - IT
            - JE
            - JM
            - JO
            - JP
            - KE
            - KG
            - KH
            - KI
            - KM
            - KN
            - KP
            - KR
            - KW
            - KY
            - KZ
            - LA
            - LB
            - LC
            - LI
            - LK
            - LR
            - LS
            - LT
            - LU
            - LV
            - LY
            - MA
            - MC
            - MD
            - ME
            - MF
            - MG
            - MH
            - MK
            - ML
            - MM
            - MN
            - MO
            - MP
            - MQ
            - MR
            - MS
            - MT
            - MU
            - MV
            - MW
            - MX
            - MY
            - MZ
            - NA
            - NC
            - NE
            - NF
            - NG
            - NI
            - NL
            - 'NO'
            - NP
            - NR
            - NT
            - NU
            - NZ
            - OM
            - PA
            - PE
            - PF
            - PG
            - PH
            - PK
            - PL
            - PM
            - PN
            - PR
            - PS
            - PT
            - PW
            - PY
            - QA
            - RE
            - RO
            - RS
            - RU
            - RW
            - SA
            - SB
            - SC
            - SD
            - SE
            - SF
            - SG
            - SH
            - SI
            - SJ
            - SK
            - SL
            - SM
            - SN
            - SO
            - SR
            - SS
            - ST
            - SU
            - SV
            - SX
            - SY
            - SZ
            - TA
            - TC
            - TD
            - TF
            - TG
            - TH
            - TJ
            - TK
            - TL
            - TM
            - TN
            - TO
            - TP
            - TR
            - TT
            - TV
            - TW
            - TZ
            - UA
            - UG
            - UK
            - UM
            - US
            - UY
            - UZ
            - VA
            - VC
            - VE
            - VG
            - VI
            - VN
            - VU
            - WF
            - WS
            - XI
            - XU
            - XK
            - YE
            - YT
            - YU
            - ZA
            - ZM
            - ZR
            - ZW
        administrativeAreaLevel1:
          type: string
          description: The 2-digit country subdivision code according to ISO 3166-2, such as a region within a country.
        postalCode:
          type: string
          description: The alphanumeric identifier (sometimes including spaces or punctuation) of the physical postal address for the purpose of sorting mail, synonyms:postcode, post code, PIN or ZIP code.
        city:
          type: string
          description: 'The name of the city of the physical postal address, synonyms: town, village, municipality.'
        deliveryServiceType:
          type: string
          description: 'One of the alternative postal address types: P.O. box, private bag, boite postale.'
          enum:
            - PO_BOX
            - PRIVATE_BAG
            - BOITE_POSTALE
        deliveryServiceQualifier:
          type: string
          description: The qualifier uniquely identifying the delivery service endpoint of the alternative postal address in conjunction with the delivery service number. In some countries for example, entering a P.O. box number, postal code and city is not sufficient to uniquely identify a P.O. box, because the same P.O. box number is assigned multiple times in some cities.
        deliveryServiceNumber:
          type: string
          description: The number indicating the delivery service endpoint of the alternative postal address to which the delivery is to be delivered, such as a P.O. box number or a private bag number.
      description: The alternative postal address of the address, for example if the goods are to be picked up somewhere else.
    BpnReferenceDto:
      type: object
      properties:
        referenceValue:
          type: string
          description: The value by which the BPN is referenced
        referenceType:
          type: string
          description: The type by which to reference the BPN with
          enum:
            - Bpn
            - BpnRequestIdentifier
      description: A reference to the BPN of a business partner. Either by the BPN value itself or a BPN request identifier
    BusinessPartnerFullDto:
      required:
        - generic
      type: object
      properties:
        generic:
          $ref: '#/components/schemas/BusinessPartnerGenericDto'
        legalEntity:
          $ref: '#/components/schemas/LegalEntityDto'
        site:
          $ref: '#/components/schemas/SiteDto'
        address:
          $ref: '#/components/schemas/LogisticAddressDto'
      description: Business partner data in full representation, consisting of generic data as well as its L/S/A representation.
    BusinessPartnerGenericDto:
      type: object
      properties:
        nameParts:
          type: array
          description: The list of name parts to accommodate the different number of name fields in different systems.
          items:
            type: string
        shortName:
          type: string
          description: Abbreviated name or shorthand.
        identifiers:
          type: array
          description: The list of identifiers of the business partner. Sorted and duplicates removed by the service.
          items:
            $ref: '#/components/schemas/BusinessPartnerIdentifierDto'
        legalName:
          type: string
        legalForm:
          type: string
          description: Technical key of the legal form.
        states:
          type: array
          description: The list of (temporary) states of the business partner. Sorted and duplicates removed by the service.
          items:
            $ref: '#/components/schemas/BusinessPartnerStateDto'
        classifications:
          type: array
          description: The list of classifications of the business partner, such as a specific industry. Sorted and duplicates removed by the service.
          items:
            $ref: '#/components/schemas/ClassificationDto'
        roles:
          type: array
          description: Roles this business partner takes in relation to the sharing member. Sorted and duplicates removed by the service.
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
        postalAddress:
          $ref: '#/components/schemas/PostalAddressDto'
        bpnL:
          type: string
          description: BPNL
        bpnS:
          type: string
          description: BPNS
        bpnA:
          type: string
          description: BPNA
        ownerBpnL:
          type: string
          description: The BPNL of the company sharing and claiming this business partner as its own
    BusinessPartnerIdentifierDto:
      required:
        - type
        - value
      type: object
      properties:
        type:
          type: string
          description: Technical key of the type to which this identifier belongs to
        value:
          type: string
          description: Value of the identifier
        issuingBody:
          type: string
          description: Body which issued the identifier
      description: Identifier record for a business partner
    BusinessPartnerStateDto:
      required:
        - type
      type: object
      properties:
        validFrom:
          type: string
          description: Date since when the status is/was valid.
          format: date-time
        validTo:
          type: string
          description: Date until the status was valid, if applicable.
          format: date-time
        type:
          type: string
          description: The type of this specified status.
          enum:
            - ACTIVE
            - INACTIVE
        description:
          type: string
          description: Denotation of the status.
      description: A legal entity state indicates if the legal entity is active or inactive. This does not describe the relation between a sharing member and a business partner and whether they have active business, but it describes whether the legal entity is still operating.
    ClassificationDto:
      type: object
      properties:
        type:
          type: string
          description: Type of classification.
          enum:
            - NACE
            - NAF
            - NAICS
            - SIC
        code:
          type: string
          description: The identifier of the class belonging to the classification.
        value:
          type: string
          description: The name of the class belonging to the classification.
      description: A legal entity classification is an assignment of the legal entity to an industry. It does not necessarily have to be the only industry the company is active in (see large companies operating in different industries). Multiple assignments to several industries are possible per classification type.
    GeoCoordinateDto:
      type: object
      properties:
        longitude:
          type: number
          description: Longitude coordinate
          format: float
        latitude:
          type: number
          description: Latitude coordinate
          format: float
        altitude:
          type: number
          description: Altitude, if applicable
          format: float
      description: The exact location of the physical postal address in latitude, longitude, and altitude.
    LegalEntityDto:
      type: object
      properties:
        bpnLReference:
          $ref: '#/components/schemas/BpnReferenceDto'
        hasChanged:
          type: boolean
          description: Whether this legal entity data is different from its golden record counterpart in the Pool
        legalName:
          type: string
          description: The name of the legal entity according to official registers.
        legalShortName:
          type: string
          description: The abbreviated name of the legal entity.
        identifiers:
          type: array
          description: The list of identifiers of the legal entity.
          items:
            $ref: '#/components/schemas/LegalEntityIdentifierDto'
        legalForm:
          type: string
          description: The legal form of the legal entity.
        states:
          type: array
          description: The list of (temporary) states of the legal entity.
          items:
            $ref: '#/components/schemas/LegalEntityState'
        classifications:
          type: array
          description: The list of classifications of the legal entity, such as a specific industry.
          items:
            $ref: '#/components/schemas/ClassificationDto'
        legalAddress:
          $ref: '#/components/schemas/LogisticAddressDto'
      description: The legal entity part of this business partner data
    LegalEntityIdentifierDto:
      type: object
      properties:
        value:
          type: string
          description: The value of the identifier like "DE123465789".
        type:
          type: string
          description: The type of the identifier.
        issuingBody:
          type: string
          description: The name of the official register, where the identifier is registered. For example, a Handelsregisternummer in Germany is only valid with its corresponding Handelsregister.
    LegalEntityState:
      type: object
      properties:
        description:
          type: string
          description: The description from the original source indicating the state of the legal entity, such as from the German Handelsregister.
        validFrom:
          type: string
          description: The date from which the state is valid.
          format: date-time
        validTo:
          type: string
          description: The date until the state is valid.
          format: date-time
        type:
          type: string
          description: 'One of the state types: active, inactive.'
          enum:
            - ACTIVE
            - INACTIVE
    LogisticAddressDto:
      type: object
      properties:
        bpnAReference:
          $ref: '#/components/schemas/BpnReferenceDto'
        hasChanged:
          type: boolean
          description: Whether this address data is different from its golden record counterpart in the Pool
        name:
          type: string
          description: The name of the address. This is not according to official registers but according to the name the sharing member chooses.
        states:
          type: array
          description: The list of (temporary) states of the address.
          items:
            $ref: '#/components/schemas/AddressStateDto'
        identifiers:
          type: array
          description: The list of identifiers of the address.
          items:
            $ref: '#/components/schemas/AddressIdentifierDto'
        physicalPostalAddress:
          $ref: '#/components/schemas/PhysicalPostalAddressDto'
        alternativePostalAddress:
          $ref: '#/components/schemas/AlternativePostalAddressDto'
      description: The address part of this business partner data
    PhysicalPostalAddressDto:
      type: object
      properties:
        geographicCoordinates:
          $ref: '#/components/schemas/GeoCoordinateDto'
        country:
          type: string
          description: The 2-digit country code of the physical postal address according to ISO 3166-1.
          enum:
            - UNDEFINED
            - AC
            - AD
            - AE
            - AF
            - AG
            - AI
            - AL
            - AM
            - AN
            - AO
            - AQ
            - AR
            - AS
            - AT
            - AU
            - AW
            - AX
            - AZ
            - BA
            - BB
            - BD
            - BE
            - BF
            - BG
            - BH
            - BI
            - BJ
            - BL
            - BM
            - BN
            - BO
            - BQ
            - BR
            - BS
            - BT
            - BU
            - BV
            - BW
            - BY
            - BZ
            - CA
            - CC
            - CD
            - CF
            - CG
            - CH
            - CI
            - CK
            - CL
            - CM
            - CN
            - CO
            - CP
            - CR
            - CS
            - CU
            - CV
            - CW
            - CX
            - CY
            - CZ
            - DE
            - DG
            - DJ
            - DK
            - DM
            - DO
            - DZ
            - EA
            - EC
            - EE
            - EG
            - EH
            - ER
            - ES
            - ET
            - EU
            - EZ
            - FI
            - FJ
            - FK
            - FM
            - FO
            - FR
            - FX
            - GA
            - GB
            - GD
            - GE
            - GF
            - GG
            - GH
            - GI
            - GL
            - GM
            - GN
            - GP
            - GQ
            - GR
            - GS
            - GT
            - GU
            - GW
            - GY
            - HK
            - HM
            - HN
            - HR
            - HT
            - HU
            - IC
            - ID
            - IE
            - IL
            - IM
            - IN
            - IO
            - IQ
            - IR
            - IS
            - IT
            - JE
            - JM
            - JO
            - JP
            - KE
            - KG
            - KH
            - KI
            - KM
            - KN
            - KP
            - KR
            - KW
            - KY
            - KZ
            - LA
            - LB
            - LC
            - LI
            - LK
            - LR
            - LS
            - LT
            - LU
            - LV
            - LY
            - MA
            - MC
            - MD
            - ME
            - MF
            - MG
            - MH
            - MK
            - ML
            - MM
            - MN
            - MO
            - MP
            - MQ
            - MR
            - MS
            - MT
            - MU
            - MV
            - MW
            - MX
            - MY
            - MZ
            - NA
            - NC
            - NE
            - NF
            - NG
            - NI
            - NL
            - 'NO'
            - NP
            - NR
            - NT
            - NU
            - NZ
            - OM
            - PA
            - PE
            - PF
            - PG
            - PH
            - PK
            - PL
            - PM
            - PN
            - PR
            - PS
            - PT
            - PW
            - PY
            - QA
            - RE
            - RO
            - RS
            - RU
            - RW
            - SA
            - SB
            - SC
            - SD
            - SE
            - SF
            - SG
            - SH
            - SI
            - SJ
            - SK
            - SL
            - SM
            - SN
            - SO
            - SR
            - SS
            - ST
            - SU
            - SV
            - SX
            - SY
            - SZ
            - TA
            - TC
            - TD
            - TF
            - TG
            - TH
            - TJ
            - TK
            - TL
            - TM
            - TN
            - TO
            - TP
            - TR
            - TT
            - TV
            - TW
            - TZ
            - UA
            - UG
            - UK
            - UM
            - US
            - UY
            - UZ
            - VA
            - VC
            - VE
            - VG
            - VI
            - VN
            - VU
            - WF
            - WS
            - XI
            - XU
            - XK
            - YE
            - YT
            - YU
            - ZA
            - ZM
            - ZR
            - ZW
        administrativeAreaLevel1:
          type: string
          description: The 2-digit country subdivision code according to ISO 3166-2, such as a region within a country.
        administrativeAreaLevel2:
          type: string
          description: The name of the locally regulated secondary country subdivision of the physical postal address, such as county within a country.
        administrativeAreaLevel3:
          type: string
          description: The name of the locally regulated tertiary country subdivision of the physical address, such as townships within a country.
        postalCode:
          type: string
          description: The alphanumeric identifier (sometimes including spaces or punctuation) of the physical postal address for the purpose of sorting mail, synonyms:postcode, post code, PIN or ZIP code.
        city:
          type: string
          description: 'The name of the city of the physical postal address, synonyms: town, village, municipality.'
        district:
          type: string
          description: The name of the district of the physical postal address which divides the city in several smaller areas.
        street:
          $ref: '#/components/schemas/StreetDto'
        companyPostalCode:
          type: string
          description: The company postal code of the physical postal address, which is sometimes required for large companies.
        industrialZone:
          type: string
          description: 'The industrial zone of the physical postal address, designating an area for industrial development, synonym: industrial area.'
        building:
          type: string
          description: The alphanumeric identifier of the building addressed by the physical postal address.
        floor:
          type: string
          description: 'The number of a floor in the building addressed by the physical postal address, synonym: level.'
        door:
          type: string
          description: 'The number of a door in the building on the respective floor addressed by the physical postal address, synonyms: room, suite.'
      description: The physical postal address of the address, such as an office, warehouse, gate, etc.
    PostalAddressDto:
      type: object
      properties:
        addressType:
          type: string
          description: Type of the address
          enum:
            - LegalAndSiteMainAddress
            - LegalAddress
            - SiteMainAddress
            - AdditionalAddress
        physicalPostalAddress:
          $ref: '#/components/schemas/PhysicalPostalAddressDto'
        alternativePostalAddress:
          $ref: '#/components/schemas/AlternativePostalAddressDto'
      description: Address of the official seat of this business partner.
    SiteDto:
      type: object
      properties:
        bpnSReference:
          $ref: '#/components/schemas/BpnReferenceDto'
        hasChanged:
          type: boolean
          description: Whether this site data is different from its golden record counterpart in the Pool
        name:
          type: string
          description: The name of the site. This is not according to official registers but according to the name the owner chooses.
        states:
          type: array
          description: The list of the (temporary) states of the site.
          items:
            $ref: '#/components/schemas/SiteStateDto'
        mainAddress:
          $ref: '#/components/schemas/LogisticAddressDto'
      description: The site part of this business partner data
    SiteStateDto:
      type: object
      properties:
        description:
          type: string
          description: The description from the original source indicating the state of the site.
        validFrom:
          type: string
          description: The date from which the state is valid.
          format: date-time
        validTo:
          type: string
          description: The date until the state is valid.
          format: date-time
        type:
          type: string
          description: 'One of the state types: active, inactive.'
          enum:
            - ACTIVE
            - INACTIVE
    StreetDto:
      type: object
      properties:
        name:
          type: string
          description: The name of the street.
        houseNumber:
          type: string
          description: The number representing the exact location of a building within the street.
        milestone:
          type: string
          description: The number representing the exact location of an addressed object within a street without house numbers, such as within long roads.
        direction:
          type: string
          description: The cardinal direction describing where the exit to the location of the addressed object on large highways / motorways is located, such as Highway 101 South.
        namePrefix:
          type: string
          description: The street related information, which is usually printed before the official street name on an address label.
        additionalNamePrefix:
          type: string
          description: The additional street related information, which is usually printed before the official street name on an address label.
        nameSuffix:
          type: string
          description: The street related information, which is usually printed after the official street name on an address label.
        additionalNameSuffix:
          type: string
          description: The additional street related information, which is usually printed after the official street name on an address label.
    TaskClientStateDto:
      required:
        - processingState
        - taskId
      type: object
      properties:
        taskId:
          type: string
        businessPartnerResult:
          $ref: '#/components/schemas/BusinessPartnerGenericDto'
        processingState:
          $ref: '#/components/schemas/TaskProcessingStateDto'
      description: The golden record task's processing state together with optional business partner data in case processing is done
    TaskCreateRequest:
      required:
        - mode
      type: object
      properties:
        mode:
          type: string
          description: The mode affecting which processing steps the business partner goes through
          enum:
            - UpdateFromSharingMember
            - UpdateFromPool
        businessPartners:
          type: array
          description: The list of business partner data to be processed
          items:
            $ref: '#/components/schemas/BusinessPartnerGenericDto'
      description: Request object to specify for which business partner data tasks should be created and in which mode
    TaskCreateResponse:
      type: object
      properties:
        createdTasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskClientStateDto'
      description: Response object for giving a list of created tasks
    TaskErrorDto:
      required:
        - description
        - type
      type: object
      properties:
        type:
          type: string
          description: The type of error that occurred
          enum:
            - Timeout
            - Unspecified
        description:
          type: string
          description: The free text, detailed description of the error
      description: Describes an error that happened during processing of a task
    TaskProcessingStateDto:
      required:
        - createdAt
        - errors
        - modifiedAt
        - resultState
        - step
        - stepState
      type: object
      properties:
        resultState:
          type: string
          description: The processing result of the task, can also still be pending
          enum:
            - Pending
            - Success
            - Error
        step:
          type: string
          description: The last step this task has entered
          enum:
            - CleanAndSync
            - PoolSync
            - Clean
        stepState:
          type: string
          description: Whether the task is queued or already reserved for the latest step
          enum:
            - Queued
            - Reserved
            - Success
            - Error
        errors:
          type: array
          description: The actual errors that happened during processing if the task has an error result state. The errors refer to the latest step.
          items:
            $ref: '#/components/schemas/TaskErrorDto'
        createdAt:
          type: string
          description: When the task has been created
          format: date-time
        modifiedAt:
          type: string
          description: When the task has last been modified
          format: date-time
        timeout:
          type: string
          description: The timestamp until the task is removed from the Orchestrator
          format: date-time
      description: Contains detailed information about the current processing state of a golden record task
    TaskStateRequest:
      type: object
      properties:
        taskIds:
          type: array
          items:
            type: string
      description: Request object for giving a list of task identifiers to search for the state of tasks
    TaskStateResponse:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskClientStateDto'
      description: Response object for giving a list of task states
    TaskStepReservationEntryDto:
      type: object
      properties:
        taskId:
          type: string
          description: The identifier of the reserved task
        businessPartner:
          $ref: '#/components/schemas/BusinessPartnerFullDto'
      description: Task reservation entry
    TaskStepReservationRequest:
      required:
        - amount
        - step
      type: object
      properties:
        amount:
          type: integer
          description: The maximum number of tasks to reserve. Can be fewer if queue is not full enough.
          format: int32
        step:
          type: string
          description: The step queue to reserve from
          enum:
            - CleanAndSync
            - PoolSync
            - Clean
      description: Request object for reserving a number of tasks waiting in a step queue.
    TaskStepReservationResponse:
      type: object
      properties:
        reservedTasks:
          type: array
          description: The reserved tasks with their business partner data to process
          items:
            $ref: '#/components/schemas/TaskStepReservationEntryDto'
        timeout:
          type: string
          description: The timestamp until the reservation is valid and results are accepted
          format: date-time
      description: Response object for giving a list of reserved tasks
    TaskStepResultEntryDto:
      required:
        - taskId
      type: object
      properties:
        taskId:
          type: string
          description: The identifier of the task for which this is a result
        businessPartner:
          $ref: '#/components/schemas/BusinessPartnerFullDto'
        errors:
          type: array
          description: Errors that occurred during processing of this task
          items:
            $ref: '#/components/schemas/TaskErrorDto'
      description: A step result for a golden record task
    TaskStepResultRequest:
      required:
        - step
      type: object
      properties:
        step:
          type: string
          description: The step queue containing the tasks for which results are posted
          enum:
            - CleanAndSync
            - PoolSync
            - Clean
        results:
          type: array
          items:
            $ref: '#/components/schemas/TaskStepResultEntryDto'
      description: Request object for posting step results of previously reserved tasks
