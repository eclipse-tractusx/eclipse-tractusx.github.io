openapi: 3.0.1
info:
  title: Business Partner Data Management Orchestrator
  description: Orchestrator component acts as a passive component and offers for each processing steps individual endpoints
  version: 6.0.0
servers:
  - url: http://localhost:8085
    description: Generated server url
paths:
  /v6/golden-record-tasks:
    post:
      tags:
        - Task Client
      summary: Create new golden record tasks for given business partner data
      description: Create golden record tasks for given business partner data in given mode. The mode decides through which processing steps the given business partner data will go through. The response contains the states of the created tasks in the order of given business partner data.If there is an error in the request no tasks are created (all or nothing). For a single request, the maximum number of business partners in the request is limited to 100 entries.
      operationId: createTasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreateRequest'
        required: true
      responses:
        '200':
          description: The states of successfully created tasks including the task identifier for tracking purposes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCreateResponse'
        '400':
          description: On malformed task create requests or reaching upsert limit
  /v6/golden-record-tasks/step-results:
    post:
      tags:
        - Task Worker
      summary: Post step results for reserved golden record tasks in the given step queue
      description: Post business partner step results for the given tasks in the given step queue. In order to post a result for a task it needs to be reserved first, has to currently be in the given step queue and the time limit is not exceeded. The number of results you can post at a time does not need to match the original number of reserved tasks. Results are accepted via strategy 'all or nothing'. For a single request, the maximum number of postable results is limited to 100.
      operationId: resolveStepResults
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskStepResultRequest'
        required: true
      responses:
        '204':
          description: If the results could be processed
        '400':
          description: On malformed requests, reaching upsert limit or posting results for tasks which are missing or in the wrong step queue
  /v6/golden-record-tasks/step-reservations:
    post:
      tags:
        - Task Worker
      summary: Reserve the next golden record tasks waiting in the given step queue
      description: Reserve up to a given number of golden record tasks in the given step queue. The response entries contain the business partner data to process which consists of the generic and L/S/A data. The reservation has a time limit which is returned. For a single request, the maximum number of reservable tasks is limited to 100.
      operationId: reserveTasksForStep
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskStepReservationRequest'
        required: true
      responses:
        '200':
          description: The reserved tasks with their business partner data to process.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskStepReservationResponse'
        '400':
          description: On malformed task create requests or reaching upsert limit
  /v6/golden-record-tasks/state/search:
    post:
      tags:
        - Task Client
      summary: Search for the state of golden record tasks by task identifiers
      description: Returns the state of golden record tasks based on the provided task identifiers. Unknown task identifiers are ignored.
      operationId: searchTaskStates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskStateRequest'
        required: true
      responses:
        '200':
          description: The state of the tasks for the provided task identifiers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskStateResponse'
        '400':
          description: On malformed task search requests
components:
  schemas:
    AlternativeAddress:
      required:
        - geographicCoordinates
      type: object
      properties:
        geographicCoordinates:
          $ref: '#/components/schemas/GeoCoordinate'
        country:
          type: string
        administrativeAreaLevel1:
          type: string
        postalCode:
          type: string
        city:
          type: string
        deliveryServiceType:
          type: string
          enum:
            - PO_BOX
            - PRIVATE_BAG
            - BOITE_POSTALE
        deliveryServiceQualifier:
          type: string
        deliveryServiceNumber:
          type: string
    BpnReference:
      type: object
      properties:
        referenceValue:
          type: string
        desiredBpn:
          type: string
        referenceType:
          type: string
          enum:
            - Bpn
            - BpnRequestIdentifier
    BusinessPartner:
      required:
        - legalEntity
        - nameParts
        - uncategorized
      type: object
      properties:
        nameParts:
          type: array
          items:
            $ref: '#/components/schemas/NamePart'
        owningCompany:
          type: string
        uncategorized:
          $ref: '#/components/schemas/UncategorizedProperties'
        legalEntity:
          $ref: '#/components/schemas/LegalEntity'
        site:
          $ref: '#/components/schemas/Site'
        additionalAddress:
          $ref: '#/components/schemas/PostalAddress'
        type:
          type: string
          enum:
            - LegalEntity
            - Site
            - Address
    BusinessState:
      type: object
      properties:
        validFrom:
          type: string
          format: date-time
        validTo:
          type: string
          format: date-time
        type:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
    ConfidenceCriteria:
      type: object
      properties:
        sharedByOwner:
          type: boolean
        checkedByExternalDataSource:
          type: boolean
        numberOfSharingMembers:
          type: integer
          format: int32
        lastConfidenceCheckAt:
          type: string
          format: date-time
        nextConfidenceCheckAt:
          type: string
          format: date-time
        confidenceLevel:
          type: integer
          format: int32
    GeoCoordinate:
      type: object
      properties:
        longitude:
          type: number
          format: float
        latitude:
          type: number
          format: float
        altitude:
          type: number
          format: float
    Identifier:
      type: object
      properties:
        value:
          type: string
        type:
          type: string
        issuingBody:
          type: string
    LegalEntity:
      required:
        - bpnReference
        - confidenceCriteria
        - identifiers
        - legalAddress
        - states
      type: object
      properties:
        bpnReference:
          $ref: '#/components/schemas/BpnReference'
        legalName:
          type: string
        legalShortName:
          type: string
        legalForm:
          type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        states:
          type: array
          items:
            $ref: '#/components/schemas/BusinessState'
        confidenceCriteria:
          $ref: '#/components/schemas/ConfidenceCriteria'
        isCatenaXMemberData:
          type: boolean
        hasChanged:
          type: boolean
        legalAddress:
          $ref: '#/components/schemas/PostalAddress'
    NamePart:
      required:
        - name
        - type
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum:
            - LegalName
            - ShortName
            - LegalForm
            - SiteName
            - AddressName
    PhysicalAddress:
      required:
        - geographicCoordinates
        - street
      type: object
      properties:
        geographicCoordinates:
          $ref: '#/components/schemas/GeoCoordinate'
        country:
          type: string
        administrativeAreaLevel1:
          type: string
        administrativeAreaLevel2:
          type: string
        administrativeAreaLevel3:
          type: string
        postalCode:
          type: string
        city:
          type: string
        district:
          type: string
        street:
          $ref: '#/components/schemas/Street'
        companyPostalCode:
          type: string
        industrialZone:
          type: string
        building:
          type: string
        floor:
          type: string
        door:
          type: string
    PostalAddress:
      required:
        - bpnReference
        - confidenceCriteria
        - identifiers
        - physicalAddress
        - states
      type: object
      properties:
        bpnReference:
          $ref: '#/components/schemas/BpnReference'
        addressName:
          type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        states:
          type: array
          items:
            $ref: '#/components/schemas/BusinessState'
        confidenceCriteria:
          $ref: '#/components/schemas/ConfidenceCriteria'
        physicalAddress:
          $ref: '#/components/schemas/PhysicalAddress'
        alternativeAddress:
          $ref: '#/components/schemas/AlternativeAddress'
        hasChanged:
          type: boolean
    Site:
      required:
        - bpnReference
        - confidenceCriteria
        - siteMainIsLegalAddress
        - states
      type: object
      properties:
        bpnReference:
          $ref: '#/components/schemas/BpnReference'
        siteName:
          type: string
        states:
          type: array
          items:
            $ref: '#/components/schemas/BusinessState'
        confidenceCriteria:
          $ref: '#/components/schemas/ConfidenceCriteria'
        hasChanged:
          type: boolean
        siteMainAddress:
          $ref: '#/components/schemas/PostalAddress'
        siteMainIsLegalAddress:
          type: boolean
    Street:
      type: object
      properties:
        name:
          type: string
        houseNumber:
          type: string
        houseNumberSupplement:
          type: string
        milestone:
          type: string
        direction:
          type: string
        namePrefix:
          type: string
        additionalNamePrefix:
          type: string
        nameSuffix:
          type: string
        additionalNameSuffix:
          type: string
    TaskClientStateDto:
      required:
        - businessPartnerResult
        - processingState
        - taskId
      type: object
      properties:
        taskId:
          type: string
        businessPartnerResult:
          $ref: '#/components/schemas/BusinessPartner'
        processingState:
          $ref: '#/components/schemas/TaskProcessingStateDto'
      description: The golden record task's processing state together with optional business partner data in case processing is done
    TaskCreateRequest:
      required:
        - businessPartners
        - mode
      type: object
      properties:
        mode:
          type: string
          description: The mode affecting which processing steps the business partner goes through
          enum:
            - UpdateFromSharingMember
            - UpdateFromPool
        businessPartners:
          type: array
          description: The list of business partner data to be processed
          items:
            $ref: '#/components/schemas/BusinessPartner'
      description: Request object to specify for which business partner data tasks should be created and in which mode
    TaskCreateResponse:
      required:
        - createdTasks
      type: object
      properties:
        createdTasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskClientStateDto'
      description: Response object for giving a list of created tasks
    TaskErrorDto:
      required:
        - description
        - type
      type: object
      properties:
        type:
          type: string
          description: The type of error that occurred
          enum:
            - Timeout
            - Unspecified
        description:
          type: string
          description: The free text, detailed description of the error
      description: Describes an error that happened during processing of a task
    TaskProcessingStateDto:
      required:
        - createdAt
        - errors
        - modifiedAt
        - resultState
        - step
        - stepState
        - timeout
      type: object
      properties:
        resultState:
          type: string
          description: The processing result of the task, can also still be pending
          enum:
            - Pending
            - Success
            - Error
        step:
          type: string
          description: The last step this task has entered
          enum:
            - CleanAndSync
            - PoolSync
            - Clean
        stepState:
          type: string
          description: Whether the task is queued or already reserved for the latest step
          enum:
            - Queued
            - Reserved
            - Success
            - Error
        errors:
          type: array
          description: The actual errors that happened during processing if the task has an error result state. The errors refer to the latest step.
          items:
            $ref: '#/components/schemas/TaskErrorDto'
        createdAt:
          type: string
          description: When the task has been created
          format: date-time
        modifiedAt:
          type: string
          description: When the task has last been modified
          format: date-time
        timeout:
          type: string
          description: The timestamp until the task is removed from the Orchestrator
          format: date-time
          deprecated: true
      description: Contains detailed information about the current processing state of a golden record task
    TaskStateRequest:
      required:
        - taskIds
      type: object
      properties:
        taskIds:
          type: array
          items:
            type: string
      description: Request object for giving a list of task identifiers to search for the state of tasks
    TaskStateResponse:
      required:
        - tasks
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskClientStateDto'
      description: Response object for giving a list of task states
    TaskStepReservationEntryDto:
      required:
        - businessPartner
        - requestKey
        - taskId
      type: object
      properties:
        taskId:
          type: string
          description: The identifier of the reserved task
        businessPartner:
          $ref: '#/components/schemas/BusinessPartner'
        requestKey:
          type: string
      description: Task reservation entry
    TaskStepReservationRequest:
      required:
        - amount
        - step
      type: object
      properties:
        amount:
          type: integer
          description: The maximum number of tasks to reserve. Can be fewer if queue is not full enough.
          format: int32
        step:
          type: string
          description: The step queue to reserve from
          enum:
            - CleanAndSync
            - PoolSync
            - Clean
      description: Request object for reserving a number of tasks waiting in a step queue.
    TaskStepReservationResponse:
      required:
        - reservedTasks
        - timeout
      type: object
      properties:
        reservedTasks:
          type: array
          description: The reserved tasks with their business partner data to process
          items:
            $ref: '#/components/schemas/TaskStepReservationEntryDto'
        timeout:
          type: string
          description: The timestamp until the reservation is valid and results are accepted
          format: date-time
          deprecated: true
      description: Response object for giving a list of reserved tasks
    TaskStepResultEntryDto:
      required:
        - businessPartner
        - errors
        - taskId
      type: object
      properties:
        taskId:
          type: string
          description: The identifier of the task for which this is a result
        businessPartner:
          $ref: '#/components/schemas/BusinessPartner'
        errors:
          type: array
          description: Errors that occurred during processing of this task
          items:
            $ref: '#/components/schemas/TaskErrorDto'
      description: A step result for a golden record task
    TaskStepResultRequest:
      required:
        - results
        - step
      type: object
      properties:
        step:
          type: string
          description: The step queue containing the tasks for which results are posted
          enum:
            - CleanAndSync
            - PoolSync
            - Clean
        results:
          type: array
          items:
            $ref: '#/components/schemas/TaskStepResultEntryDto'
      description: Request object for posting step results of previously reserved tasks
    UncategorizedProperties:
      required:
        - identifiers
        - nameParts
        - states
      type: object
      properties:
        nameParts:
          type: array
          items:
            type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        states:
          type: array
          items:
            $ref: '#/components/schemas/BusinessState'
        address:
          $ref: '#/components/schemas/PostalAddress'