openapi: 3.0.1
info:
  title: Business Partner Data Management Gate
  description: A gate for a member to share business partner data with CatenaX
  version: 5.0.1-SNAPSHOT
servers:
  - url: http://localhost:8081
    description: Generated server url
paths:
  /api/catena/sharing-state:
    get:
      tags:
        - sharing-state-controller
      summary: Returns sharing states of business partners, optionally filtered by a business partner type and an array of external IDs
      operationId: getSharingStates
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
        - name: businessPartnerType
          in: query
          description: Business partner type
          required: false
          schema:
            type: string
            enum:
              - LEGAL_ENTITY
              - SITE
              - ADDRESS
              - GENERIC
        - name: externalIds
          in: query
          description: External IDs
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Page of sharing states
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDtoSharingStateDto'
    put:
      tags:
        - sharing-state-controller
      summary: Creates or updates a sharing state of a business partner
      operationId: upsertSharingState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharingStateDto'
        required: true
      responses:
        '204':
          description: Operation completed successfully
        '400':
          description: Invalid data (e.g. external ID)
      deprecated: true
  /api/catena/output/sites:
    put:
      tags:
        - site-controller
      summary: Creates or updates an existing site in the output stage
      description: Create or update sites (Output). Updates instead of creating a new site if an already existing external ID is used. The same external ID may not occur more than once in a single request. For a single request, the maximum number of sites in the request is limited to 100 entries.
      operationId: upsertSitesOutput
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SiteGateOutputRequest'
        required: true
      responses:
        '200':
          description: Sites were successfully updated or created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: On malformed site request
      deprecated: true
  /api/catena/output/legal-entities:
    put:
      tags:
        - legal-entity-controller
      summary: Creates or updates an existing legal entity in the output stage
      description: Create or update legal entities (Output). Updates instead of creating a new legal entity if an already existing external ID is used. The same external ID may not occur more than once in a single request. For a single request, the maximum number of legal entities in the request is limited to 100 entries.
      operationId: upsertLegalEntitiesOutput
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LegalEntityGateOutputRequest'
        required: true
      responses:
        '200':
          description: Legal entities were successfully updated or created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: On malformed legal entity request
      deprecated: true
  /api/catena/output/addresses:
    put:
      tags:
        - address-controller
      summary: Creates or updates an existing address in the output stage
      description: Create or update addresses (Output). Updates instead of creating a new address if an already existing external ID is used. The same external ID may not occur more than once in a single request. For a single request, the maximum number of addresses in the request is limited to 100 entries.
      operationId: upsertAddressesOutput
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddressGateOutputRequest'
        required: true
      responses:
        '200':
          description: Addresses were successfully updated or created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: On malformed address request
      deprecated: true
  /api/catena/input/sites:
    get:
      tags:
        - site-controller
      summary: Returns sites from the input stage
      description: Returns page of sites from the input stage.
      operationId: getSites
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      responses:
        '200':
          description: The requested page of sites
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDtoSiteGateInputDto'
        '400':
          description: On malformed pagination request
      deprecated: true
    put:
      tags:
        - site-controller
      summary: Creates or updates an existing site in the input stage
      description: Create or update sites. Updates instead of creating a new site if an already existing external ID is used. The same external ID may not occur more than once in a single request. For a single request, the maximum number of sites in the request is limited to 100 entries.
      operationId: upsertSites
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SiteGateInputRequest'
        required: true
      responses:
        '200':
          description: Sites were successfully updated or created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: On malformed site request
      deprecated: true
  /api/catena/input/legal-entities:
    get:
      tags:
        - legal-entity-controller
      summary: Returns legal entities from the input stage
      description: Returns page of legal entities from the input stage.
      operationId: getLegalEntities
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      responses:
        '200':
          description: The requested page of legal entities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDtoLegalEntityGateInputDto'
        '400':
          description: On malformed pagination request
      deprecated: true
    put:
      tags:
        - legal-entity-controller
      summary: Creates or updates an existing legal entity in the input stage
      description: Create or update legal entities. Updates instead of creating a new legal entity if an already existing external ID is used. The same external ID may not occur more than once in a single request. For a single request, the maximum number of legal entities in the request is limited to 100 entries.
      operationId: upsertLegalEntities
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LegalEntityGateInputRequest'
        required: true
      responses:
        '200':
          description: Legal entities were successfully updated or created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: On malformed legal entity request
      deprecated: true
  /api/catena/input/business-partners:
    put:
      tags:
        - business-partner-controller
      summary: Create or update business partner with given external ID
      description: Create or update generic business partner. Updates instead of creating a new business partner if an already existing external ID is used. The same external ID may not occur more than once in a single request. For a single request, the maximum number of business partners in the request is limited to 100 entries.
      operationId: upsertBusinessPartnersInput
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BusinessPartnerInputRequest'
        required: true
      responses:
        '200':
          description: Business partner were successfully updated or created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessPartnerInputDto'
        '400':
          description: On malformed legal entity request
  /api/catena/input/addresses:
    get:
      tags:
        - address-controller
      summary: Returns addresses from the input stage
      description: Returns page of addresses from the input stage.
      operationId: getAddresses
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      responses:
        '200':
          description: The requested page of addresses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDtoAddressGateInputDto'
        '400':
          description: On malformed pagination request
      deprecated: true
    put:
      tags:
        - address-controller
      summary: Creates or updates an existing address in the input stage
      description: Create or update addresses. Updates instead of creating a new address if an already existing external ID is used. The same external ID may not occur more than once in a single request. For a single request, the maximum number of addresses in the request is limited to 100 entries.
      operationId: upsertAddresses
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddressGateInputRequest'
        required: true
      responses:
        '200':
          description: Addresses were successfully updated or created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: On malformed address request
      deprecated: true
  /api/catena/sharing-state/ready:
    post:
      tags:
        - sharing-state-controller
      summary: Sets the given business partners into ready to be shared state
      description: The business partners to set the ready state for are identified by their external-id. Only business partners in an initial or error state can be set to ready. If any given business partner could not be set into ready state for any reason (for example, it has not been found or it is in the wrong state) the whole request fails (all or nothing approach).
      operationId: postSharingStateReady
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSharingStateReadyRequest'
        required: true
      responses:
        '204':
          description: All business partners put in ready to be shared state
        '404':
          description: Business partners can't be put into ready state (e.g. external-ID not found, wrong sharing state)
  /api/catena/output/sites/search:
    post:
      tags:
        - site-controller
      summary: Returns sites by an array of external IDs from the output stage
      description: Get page of sites from the output stage. Can optionally be filtered by external IDs.
      operationId: getSitesOutput
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: The requested page of sites
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDtoSiteGateOutputResponse'
        '400':
          description: On malformed pagination request
      deprecated: true
  /api/catena/output/legal-entities/search:
    post:
      tags:
        - legal-entity-controller
      summary: Returns legal entities by an array of external IDs from the output stage
      description: Get page of legal entities from the output stage. Can optionally be filtered by external IDs.
      operationId: getLegalEntitiesOutput
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: The requested page of legal entities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDtoLegalEntityGateOutputResponse'
        '400':
          description: On malformed pagination request
      deprecated: true
  /api/catena/output/changelog/search:
    post:
      tags:
        - changelog-controller
      summary: Returns changelog entries for changes to the business partner output stage
      description: Returns changelog entries as of a specified timestamp from the output stage, optionally filtered by timestamp, an array of external IDs and a business partner type.
      operationId: getOutputChangelog
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangelogSearchRequest'
        required: true
      responses:
        '200':
          description: The changelog entries for the specified parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageChangeLogDtoChangelogGateDto'
        '400':
          description: On malformed pagination request
  /api/catena/output/business-partners/search:
    post:
      tags:
        - business-partner-controller
      summary: Search business partners by an array of external IDs from the output stage
      description: Get page of business partners output data filtered by a collection of external IDs. An empty external ID list will return a paginated list of all business partners.
      operationId: getBusinessPartnersOutput
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: The requested page of business partners
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDtoBusinessPartnerOutputDto'
        '400':
          description: On malformed pagination request
  /api/catena/output/addresses/search:
    post:
      tags:
        - address-controller
      summary: Returns addresses by an array of external IDs from the output stage
      description: Get page of addresses from the output stage. Can optionally be filtered by external IDs.
      operationId: getAddressesOutput
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: The requested page of addresses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDtoAddressGateOutputDto'
        '400':
          description: On malformed pagination request
      deprecated: true
  /api/catena/input/sites/search:
    post:
      tags:
        - site-controller
      summary: Returns sites by an array of external IDs from the input stage
      description: Returns page of sites from the input stage. Can optionally be filtered by external IDs.
      operationId: getSitesByExternalIds
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        '200':
          description: The requested page of sites
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDtoSiteGateInputDto'
        '400':
          description: On malformed pagination request
      deprecated: true
  /api/catena/input/legal-entities/search:
    post:
      tags:
        - legal-entity-controller
      summary: Returns legal entities by an array of external IDs from the input stage
      description: Returns page of legal entities from the input stage. Can optionally be filtered by external IDs.
      operationId: getLegalEntitiesByExternalIds
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        '200':
          description: The requested page of legal-entities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDtoLegalEntityGateInputDto'
        '400':
          description: On malformed pagination request
      deprecated: true
  /api/catena/input/changelog/search:
    post:
      tags:
        - changelog-controller
      summary: Returns changelog entries for changes to the business partner input stage
      description: Returns changelog entries as of a specified timestamp from the input stage, optionally filtered by timestamp, an array of external IDs and a business partner type.
      operationId: getInputChangelog
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangelogSearchRequest'
        required: true
      responses:
        '200':
          description: The changelog entries for the specified parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageChangeLogDtoChangelogGateDto'
        '400':
          description: On malformed pagination request
  /api/catena/input/business-partners/search:
    post:
      tags:
        - business-partner-controller
      summary: Search business partner by external ID. An empty external ID list returns a paginated list of all business partners.
      description: Get page of business partners filtered by a collection of external IDs.
      operationId: getBusinessPartnersInput
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: The requested page of busines partners
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDtoBusinessPartnerInputDto'
        '400':
          description: On malformed pagination request
  /api/catena/input/addresses/search:
    post:
      tags:
        - address-controller
      summary: Returns addresses by an array of external IDs from the input stage
      description: Returns page of addresses from the input stage. Can optionally be filtered by external IDs.
      operationId: getAddressesByExternalIds
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        '200':
          description: The requested page of addresses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDtoAddressGateInputDto'
        '400':
          description: On malformed pagination request
      deprecated: true
  /api/catena/stats/{stage}/address-types:
    get:
      tags:
        - stats-controller
      operationId: countAddressTypes
      parameters:
        - name: stage
          in: path
          required: true
          schema:
            type: string
            enum:
              - Input
              - Output
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsAddressTypesResponse'
  /api/catena/stats/stages:
    get:
      tags:
        - stats-controller
      operationId: countPartnersPerStage
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsStagesResponse'
  /api/catena/stats/sharing-states:
    get:
      tags:
        - stats-controller
      operationId: countPartnersBySharingState
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsSharingStatesResponse'
  /api/catena/stats/confidence-criteria:
    get:
      tags:
        - stats-controller
      operationId: getConfidenceCriteriaStats
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsConfidenceCriteriaResponse'
  /api/catena/mermaid/:
    get:
      tags:
        - gate-documentation-controller
      summary: Get mermaid class diagramm for the gate JPA model
      operationId: getMermaidGatePersistence
      responses:
        '200':
          description: Entity model as mermaid diagramm
          content:
            text/plain:
              schema:
                type: string
  /api/catena/input/sites/{externalId}:
    get:
      tags:
        - site-controller
      summary: Returns site by external ID from the input stage
      description: Returns site by external ID from the input stage.
      operationId: getSiteByExternalId
      parameters:
        - name: externalId
          in: path
          description: External ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Found site with external ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteGateInputDto'
        '404':
          description: No site found under specified external ID
      deprecated: true
  /api/catena/input/legal-entities/{externalId}:
    get:
      tags:
        - legal-entity-controller
      summary: Returns legal entity by external ID from the input stage
      description: Returns legal entity by external ID from the input stage.
      operationId: getLegalEntityByExternalId
      parameters:
        - name: externalId
          in: path
          description: External ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Found legal entity with external ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalEntityGateInputDto'
        '404':
          description: No legal entity found under specified external ID
      deprecated: true
  /api/catena/input/addresses/{externalId}:
    get:
      tags:
        - address-controller
      summary: Returns address by external ID from the input stage
      description: Returns address by external ID from the input stage.
      operationId: getAddressByExternalId
      parameters:
        - name: externalId
          in: path
          description: External ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Found address with external ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressGateInputDto'
        '404':
          description: No address found under specified external ID
      deprecated: true
components:
  schemas:
    AddressComponentOutputDto:
      required:
        - addressBpn
        - alternativePostalAddress
        - bpnA
        - confidenceCriteria
        - physicalPostalAddress
      type: object
      properties:
        addressBpn:
          type: string
          description: The BPNA of the address, on which the business partner provides a view.
        name:
          type: string
          description: The name of the address, on which the business partner provides a view. This is not according to official registers but according to the name the sharing members agree on, such as the name of a gate or any other additional names that designate the address in common parlance.
        addressType:
          type: string
          description: 'One of the address types: Legal Address, Site Main Address, Legal and Site Main Address, Additional Address. '
          enum:
            - LegalAndSiteMainAddress
            - LegalAddress
            - SiteMainAddress
            - AdditionalAddress
        physicalPostalAddress:
          $ref: '#/components/schemas/PhysicalPostalAddressDto'
        alternativePostalAddress:
          $ref: '#/components/schemas/AlternativePostalAddressDto'
        confidenceCriteria:
          $ref: '#/components/schemas/ConfidenceCriteriaDto'
      description: Address properties of business partner output data
    AddressGateInputDto:
      required:
        - externalId
        - identifiers
        - nameParts
        - physicalPostalAddress
        - roles
        - states
      type: object
      properties:
        nameParts:
          type: array
          description: The list of name parts of the address to accommodate the different number of name fields in different systems. This is not according to official registers but according to the name the sharing member chooses.
          items:
            type: string
        states:
          type: array
          description: The list of (temporary) states of the address.
          items:
            $ref: '#/components/schemas/AddressStateDto'
        identifiers:
          type: array
          description: The list of identifiers of the address.
          items:
            $ref: '#/components/schemas/AddressIdentifierDto'
        physicalPostalAddress:
          $ref: '#/components/schemas/PhysicalPostalAddressDto'
        alternativePostalAddress:
          $ref: '#/components/schemas/AlternativePostalAddressDto'
        roles:
          type: array
          description: Roles this business partner takes in relation to the sharing member.
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
              - ONE_TIME_SUPPLIER
              - ONE_TIME_CUSTOMER
        confidenceCriteria:
          $ref: '#/components/schemas/ConfidenceCriteriaDto'
        externalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner.
        legalEntityExternalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner, representing the legal entity, that owns the address.
        siteExternalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner, representing the site, that the address belongs to.
      description: In general, an address is a collection of information to describe a physical location, using a street name with a house number and/or a post office box as reference. In addition, an address consists of several postal attributes, such as country, region (state), county, township, city, district, or postal code, which help deliver mail.In Catena-X, an address is a type of business partner representing the legal address of a legal entity, and/or the main address of a site, or any additional address of a legal entity or site (such as different gates).An address is owned by a legal entity. Thus, exactly one legal entity is assigned to an address. An address can belong to a site. Thus, one or no site is assigned to an address. An address is uniquely identified by the BPNA.
    AddressGateInputRequest:
      required:
        - externalId
        - identifiers
        - nameParts
        - physicalPostalAddress
        - roles
        - states
      type: object
      properties:
        nameParts:
          type: array
          description: The list of name parts of the address to accommodate the different number of name fields in different systems. This is not according to official registers but according to the name the sharing member chooses.
          items:
            type: string
        states:
          type: array
          description: The list of (temporary) states of the address.
          items:
            $ref: '#/components/schemas/AddressStateDto'
        identifiers:
          type: array
          description: The list of identifiers of the address.
          items:
            $ref: '#/components/schemas/AddressIdentifierDto'
        physicalPostalAddress:
          $ref: '#/components/schemas/PhysicalPostalAddressDto'
        alternativePostalAddress:
          $ref: '#/components/schemas/AlternativePostalAddressDto'
        roles:
          type: array
          description: Roles this business partner takes in relation to the sharing member.
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
              - ONE_TIME_SUPPLIER
              - ONE_TIME_CUSTOMER
        confidenceCriteria:
          $ref: '#/components/schemas/ConfidenceCriteriaDto'
        externalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner.
        legalEntityExternalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner, representing the legal entity, that owns the address.
        siteExternalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner, representing the site, that the address belongs to.
      description: Request for creating/updating a business partner record of type address. In general, an address is a collection of information to describe a physical location, using a street name with a house number and/or a post office box as reference. In addition, an address consists of several postal attributes, such as country, region (state), county, township, city, district, or postal code, which help deliver mail.In Catena-X, an address is a type of business partner representing the legal address of a legal entity, and/or the main address of a site, or any additional address of a legal entity or site (such as different gates).An address is owned by a legal entity. Thus, exactly one legal entity is assigned to an address. An address can belong to a site. Thus, one or no site is assigned to an address. An address is uniquely identified by the BPNA.
    AddressGateOutputChildRequest:
      required:
        - bpn
        - identifiers
        - nameParts
        - physicalPostalAddress
        - roles
        - states
      type: object
      properties:
        nameParts:
          type: array
          description: The list of name parts of the address to accommodate the different number of name fields in different systems. This is not according to official registers but according to the name the sharing member chooses.
          items:
            type: string
        states:
          type: array
          description: The list of (temporary) states of the address.
          items:
            $ref: '#/components/schemas/AddressStateDto'
        identifiers:
          type: array
          description: The list of identifiers of the address.
          items:
            $ref: '#/components/schemas/AddressIdentifierDto'
        physicalPostalAddress:
          $ref: '#/components/schemas/PhysicalPostalAddressDto'
        alternativePostalAddress:
          $ref: '#/components/schemas/AlternativePostalAddressDto'
        roles:
          type: array
          description: Roles this business partner takes in relation to the sharing member.
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
              - ONE_TIME_SUPPLIER
              - ONE_TIME_CUSTOMER
        confidenceCriteria:
          $ref: '#/components/schemas/ConfidenceCriteriaDto'
        bpn:
          type: string
          description: A BPNA represents and uniquely identifies an address, which can be the legal address of a legal entity, and/or the main address of a site, or any additional address of a legal entity or site (such as different gates). It is important to note that only the BPNL must be used to uniquely identify a legal entity. Even in the case that the BPNA represents the legal address of the legal entity, it shall not be used to uniquely identify the legal entity.
      description: In general, an address is a collection of information to describe a physical location, using a street name with a house number and/or a post office box as reference. In addition, an address consists of several postal attributes, such as country, region (state), county, township, city, district, or postal code, which help deliver mail.In Catena-X, an address is a type of business partner representing the legal address of a legal entity, and/or the main address of a site, or any additional address of a legal entity or site (such as different gates).An address is owned by a legal entity. Thus, exactly one legal entity is assigned to an address. An address can belong to a site. Thus, one or no site is assigned to an address. An address is uniquely identified by the BPNA.
    AddressGateOutputDto:
      required:
        - bpna
        - externalId
        - identifiers
        - nameParts
        - physicalPostalAddress
        - roles
        - states
      type: object
      properties:
        nameParts:
          type: array
          description: The list of name parts of the address to accommodate the different number of name fields in different systems. This is not according to official registers but according to the name the sharing member chooses.
          items:
            type: string
        states:
          type: array
          description: The list of (temporary) states of the address.
          items:
            $ref: '#/components/schemas/AddressStateDto'
        identifiers:
          type: array
          description: The list of identifiers of the address.
          items:
            $ref: '#/components/schemas/AddressIdentifierDto'
        physicalPostalAddress:
          $ref: '#/components/schemas/PhysicalPostalAddressDto'
        alternativePostalAddress:
          $ref: '#/components/schemas/AlternativePostalAddressDto'
        roles:
          type: array
          description: Roles this business partner takes in relation to the sharing member.
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
              - ONE_TIME_SUPPLIER
              - ONE_TIME_CUSTOMER
        confidenceCriteria:
          $ref: '#/components/schemas/ConfidenceCriteriaDto'
        externalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner.
        legalEntityExternalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner, representing the legal entity, that owns the address.
        siteExternalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner, representing the site, that the address belongs to.
        bpna:
          type: string
          description: A BPNA represents and uniquely identifies an address, which can be the legal address of a legal entity, and/or the main address of a site, or any additional address of a legal entity or site (such as different gates). It is important to note that only the BPNL must be used to uniquely identify a legal entity. Even in the case that the BPNA represents the legal address of the legal entity, it shall not be used to uniquely identify the legal entity.
      description: In general, an address is a collection of information to describe a physical location, using a street name with a house number and/or a post office box as reference. In addition, an address consists of several postal attributes, such as country, region (state), county, township, city, district, or postal code, which help deliver mail.In Catena-X, an address is a type of business partner representing the legal address of a legal entity, and/or the main address of a site, or any additional address of a legal entity or site (such as different gates).An address is owned by a legal entity. Thus, exactly one legal entity is assigned to an address. An address can belong to a site. Thus, one or no site is assigned to an address. An address is uniquely identified by the BPNA.
    AddressGateOutputRequest:
      required:
        - bpn
        - externalId
        - identifiers
        - nameParts
        - physicalPostalAddress
        - roles
        - states
      type: object
      properties:
        nameParts:
          type: array
          description: The list of name parts of the address to accommodate the different number of name fields in different systems. This is not according to official registers but according to the name the sharing member chooses.
          items:
            type: string
        states:
          type: array
          description: The list of (temporary) states of the address.
          items:
            $ref: '#/components/schemas/AddressStateDto'
        identifiers:
          type: array
          description: The list of identifiers of the address.
          items:
            $ref: '#/components/schemas/AddressIdentifierDto'
        physicalPostalAddress:
          $ref: '#/components/schemas/PhysicalPostalAddressDto'
        alternativePostalAddress:
          $ref: '#/components/schemas/AlternativePostalAddressDto'
        roles:
          type: array
          description: Roles this business partner takes in relation to the sharing member.
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
              - ONE_TIME_SUPPLIER
              - ONE_TIME_CUSTOMER
        confidenceCriteria:
          $ref: '#/components/schemas/ConfidenceCriteriaDto'
        externalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner.
        legalEntityExternalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner, representing the legal entity, that owns the address.
        siteExternalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner, representing the site, that the address belongs to.
        bpn:
          type: string
          description: A BPNA represents and uniquely identifies an address, which can be the legal address of a legal entity, and/or the main address of a site, or any additional address of a legal entity or site (such as different gates). It is important to note that only the BPNL must be used to uniquely identify a legal entity. Even in the case that the BPNA represents the legal address of the legal entity, it shall not be used to uniquely identify the legal entity.
      description: Request for creating/updating a business partner record of type address. In general, an address is a collection of information to describe a physical location, using a street name with a house number and/or a post office box as reference. In addition, an address consists of several postal attributes, such as country, region (state), county, township, city, district, or postal code, which help deliver mail.In Catena-X, an address is a type of business partner representing the legal address of a legal entity, and/or the main address of a site, or any additional address of a legal entity or site (such as different gates).An address is owned by a legal entity. Thus, exactly one legal entity is assigned to an address. An address can belong to a site. Thus, one or no site is assigned to an address. An address is uniquely identified by the BPNA.
    AddressIdentifierDto:
      required:
        - type
        - value
      type: object
      properties:
        value:
          type: string
          description: The value of the identifier like "0847976000005".
        type:
          type: string
          description: The type of the identifier.
      description: An address identifier (uniquely) identifies the address, such as the Global Location Number (GLN).
    AddressRepresentationInputDto:
      required:
        - alternativePostalAddress
        - physicalPostalAddress
      type: object
      properties:
        addressBpn:
          type: string
          description: The BPNA of the address, on which the business partner provides a view.
        name:
          type: string
          description: The name of the address, on which the business partner provides a view. This is not according to official registers but according to the name the sharing members agree on, such as the name of a gate or any other additional names that designate the address in common parlance.
        addressType:
          type: string
          description: 'One of the address types: Legal Address, Site Main Address, Legal and Site Main Address, Additional Address. '
          enum:
            - LegalAndSiteMainAddress
            - LegalAddress
            - SiteMainAddress
            - AdditionalAddress
        physicalPostalAddress:
          $ref: '#/components/schemas/PhysicalPostalAddressDto'
        alternativePostalAddress:
          $ref: '#/components/schemas/AlternativePostalAddressDto'
      description: 'The address, on which the business partner provides a view. '
    AddressStateDto:
      required:
        - type
      type: object
      properties:
        description:
          type: string
        validFrom:
          type: string
          description: The date from which the state is valid.
          format: date-time
        validTo:
          type: string
          description: The date until the state is valid.
          format: date-time
        type:
          type: string
          description: 'One of the state types: active, inactive.'
          enum:
            - ACTIVE
            - INACTIVE
      description: An address state indicates if the address is active or inactive. This does not describe the relation between a sharing member and a business partner and whether they have active business, but it describes whether the business partner is still operating at that address.
    AlternativePostalAddressDto:
      type: object
      properties:
        geographicCoordinates:
          $ref: '#/components/schemas/GeoCoordinateDto'
        country:
          type: string
          description: The 2-digit country code of the physical postal address according to ISO 3166-1.
          enum:
            - UNDEFINED
            - AC
            - AD
            - AE
            - AF
            - AG
            - AI
            - AL
            - AM
            - AN
            - AO
            - AQ
            - AR
            - AS
            - AT
            - AU
            - AW
            - AX
            - AZ
            - BA
            - BB
            - BD
            - BE
            - BF
            - BG
            - BH
            - BI
            - BJ
            - BL
            - BM
            - BN
            - BO
            - BQ
            - BR
            - BS
            - BT
            - BU
            - BV
            - BW
            - BY
            - BZ
            - CA
            - CC
            - CD
            - CF
            - CG
            - CH
            - CI
            - CK
            - CL
            - CM
            - CN
            - CO
            - CP
            - CR
            - CS
            - CU
            - CV
            - CW
            - CX
            - CY
            - CZ
            - DE
            - DG
            - DJ
            - DK
            - DM
            - DO
            - DZ
            - EA
            - EC
            - EE
            - EG
            - EH
            - ER
            - ES
            - ET
            - EU
            - EZ
            - FI
            - FJ
            - FK
            - FM
            - FO
            - FR
            - FX
            - GA
            - GB
            - GD
            - GE
            - GF
            - GG
            - GH
            - GI
            - GL
            - GM
            - GN
            - GP
            - GQ
            - GR
            - GS
            - GT
            - GU
            - GW
            - GY
            - HK
            - HM
            - HN
            - HR
            - HT
            - HU
            - IC
            - ID
            - IE
            - IL
            - IM
            - IN
            - IO
            - IQ
            - IR
            - IS
            - IT
            - JE
            - JM
            - JO
            - JP
            - KE
            - KG
            - KH
            - KI
            - KM
            - KN
            - KP
            - KR
            - KW
            - KY
            - KZ
            - LA
            - LB
            - LC
            - LI
            - LK
            - LR
            - LS
            - LT
            - LU
            - LV
            - LY
            - MA
            - MC
            - MD
            - ME
            - MF
            - MG
            - MH
            - MK
            - ML
            - MM
            - MN
            - MO
            - MP
            - MQ
            - MR
            - MS
            - MT
            - MU
            - MV
            - MW
            - MX
            - MY
            - MZ
            - NA
            - NC
            - NE
            - NF
            - NG
            - NI
            - NL
            - 'NO'
            - NP
            - NR
            - NT
            - NU
            - NZ
            - OM
            - PA
            - PE
            - PF
            - PG
            - PH
            - PK
            - PL
            - PM
            - PN
            - PR
            - PS
            - PT
            - PW
            - PY
            - QA
            - RE
            - RO
            - RS
            - RU
            - RW
            - SA
            - SB
            - SC
            - SD
            - SE
            - SF
            - SG
            - SH
            - SI
            - SJ
            - SK
            - SL
            - SM
            - SN
            - SO
            - SR
            - SS
            - ST
            - SU
            - SV
            - SX
            - SY
            - SZ
            - TA
            - TC
            - TD
            - TF
            - TG
            - TH
            - TJ
            - TK
            - TL
            - TM
            - TN
            - TO
            - TP
            - TR
            - TT
            - TV
            - TW
            - TZ
            - UA
            - UG
            - UK
            - UM
            - US
            - UY
            - UZ
            - VA
            - VC
            - VE
            - VG
            - VI
            - VN
            - VU
            - WF
            - WS
            - XI
            - XU
            - XK
            - YE
            - YT
            - YU
            - ZA
            - ZM
            - ZR
            - ZW
        administrativeAreaLevel1:
          type: string
          description: The 2-digit country subdivision code according to ISO 3166-2, such as a region within a country.
        postalCode:
          type: string
          description: The alphanumeric identifier (sometimes including spaces or punctuation) of the physical postal address for the purpose of sorting mail, synonyms:postcode, post code, PIN or ZIP code.
        city:
          type: string
          description: 'The name of the city of the physical postal address, synonyms: town, village, municipality.'
        deliveryServiceType:
          type: string
          description: 'One of the alternative postal address types: P.O. box, private bag, boite postale.'
          enum:
            - PO_BOX
            - PRIVATE_BAG
            - BOITE_POSTALE
        deliveryServiceQualifier:
          type: string
          description: The qualifier uniquely identifying the delivery service endpoint of the alternative postal address in conjunction with the delivery service number. In some countries for example, entering a P.O. box number, postal code and city is not sufficient to uniquely identify a P.O. box, because the same P.O. box number is assigned multiple times in some cities.
        deliveryServiceNumber:
          type: string
          description: The number indicating the delivery service endpoint of the alternative postal address to which the delivery is to be delivered, such as a P.O. box number or a private bag number.
      description: An alternative postal address describes an alternative way of delivery for example if the goods are to be picked up somewhere else.
    BusinessPartnerClassificationDto:
      type: object
      properties:
        type:
          type: string
          description: Type of classification.
          enum:
            - NACE
            - NAF
            - NAICS
            - SIC
        code:
          type: string
          description: The identifier of the class belonging to the classification.
        value:
          type: string
          description: The name of the class belonging to the classification.
    BusinessPartnerIdentifierDto:
      type: object
      properties:
        type:
          type: string
          description: The type of the identifier.
        value:
          type: string
          description: The value of the identifier like “DE123465789.
        issuingBody:
          type: string
          description: The name of the official register, where the identifier is registered. For example, a Handelsregisternummer in Germany is only valid with its corresponding Registergericht and Registerart.
    BusinessPartnerInputDto:
      required:
        - address
        - bpnA
        - bpnL
        - createdAt
        - externalId
        - identifiers
        - isOwnCompanyData
        - legalEntity
        - nameParts
        - postalAddress
        - roles
        - site
        - states
        - updatedAt
      type: object
      properties:
        externalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner.
        nameParts:
          type: array
          description: The list of name parts to accommodate the different number of name fields in different systems.
          items:
            type: string
        identifiers:
          type: array
          description: The list of identifiers of the business partner. Sorted and duplicates removed by the service.
          items:
            $ref: '#/components/schemas/BusinessPartnerIdentifierDto'
        states:
          type: array
          description: The list of (temporary) states of the business partner. Sorted and duplicates removed by the service.
          items:
            $ref: '#/components/schemas/BusinessPartnerStateDto'
        roles:
          type: array
          description: 'One or more of the roles, the business partner assumes with respect to the sharing member: Supplier, Customer. Sorted and duplicates removed by the service.'
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
              - ONE_TIME_SUPPLIER
              - ONE_TIME_CUSTOMER
        isOwnCompanyData:
          type: boolean
          description: Indicates whether the sharing member claims (in the initial upload) the business partner to belong to the company data of the sharing member.
        legalEntity:
          $ref: '#/components/schemas/LegalEntityRepresentationInputDto'
        site:
          $ref: '#/components/schemas/SiteRepresentationInputDto'
        address:
          $ref: '#/components/schemas/AddressRepresentationInputDto'
        createdAt:
          type: string
          description: The date when the data record has been created.
          format: date-time
        updatedAt:
          type: string
          description: The date when the data record has been last updated.
          format: date-time
      description: Generic business partner with external id
    BusinessPartnerInputRequest:
      required:
        - address
        - externalId
        - identifiers
        - isOwnCompanyData
        - legalEntity
        - nameParts
        - roles
        - site
        - states
      type: object
      properties:
        externalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner.
        nameParts:
          type: array
          description: The list of name parts to accommodate the different number of name fields in different systems.
          items:
            type: string
        identifiers:
          type: array
          description: The list of identifiers of the business partner. Sorted and duplicates removed by the service.
          items:
            $ref: '#/components/schemas/BusinessPartnerIdentifierDto'
        states:
          type: array
          description: The list of (temporary) states of the business partner. Sorted and duplicates removed by the service.
          items:
            $ref: '#/components/schemas/BusinessPartnerStateDto'
        roles:
          type: array
          description: 'One or more of the roles, the business partner assumes with respect to the sharing member: Supplier, Customer. Sorted and duplicates removed by the service.'
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
              - ONE_TIME_SUPPLIER
              - ONE_TIME_CUSTOMER
        isOwnCompanyData:
          type: boolean
          description: Indicates whether the sharing member claims (in the initial upload) the business partner to belong to the company data of the sharing member.
        legalEntity:
          $ref: '#/components/schemas/LegalEntityRepresentationInputDto'
        site:
          $ref: '#/components/schemas/SiteRepresentationInputDto'
        address:
          $ref: '#/components/schemas/AddressRepresentationInputDto'
      description: Generic business partner with external id
    BusinessPartnerOutputDto:
      required:
        - address
        - createdAt
        - externalId
        - identifiers
        - isOwnCompanyData
        - legalEntity
        - nameParts
        - roles
        - states
        - updatedAt
      type: object
      properties:
        externalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner.
        nameParts:
          type: array
          description: The list of name parts to accommodate the different number of name fields in different systems.
          items:
            type: string
        identifiers:
          type: array
          description: The list of identifiers of the business partner. Sorted and duplicates removed by the service.
          items:
            $ref: '#/components/schemas/BusinessPartnerIdentifierDto'
        states:
          type: array
          description: The list of (temporary) states of the business partner. Sorted and duplicates removed by the service.
          items:
            $ref: '#/components/schemas/BusinessPartnerStateDto'
        roles:
          type: array
          description: 'One or more of the roles, the business partner assumes with respect to the sharing member: Supplier, Customer. Sorted and duplicates removed by the service.'
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
              - ONE_TIME_SUPPLIER
              - ONE_TIME_CUSTOMER
        isOwnCompanyData:
          type: boolean
          description: Indicates whether the sharing member claims (in the initial upload) the business partner to belong to the company data of the sharing member.
        legalEntity:
          $ref: '#/components/schemas/LegalEntityRepresentationOutputDto'
        site:
          $ref: '#/components/schemas/SiteRepresentationOutputDto'
        address:
          $ref: '#/components/schemas/AddressComponentOutputDto'
        createdAt:
          type: string
          description: The date when the data record has been created.
          format: date-time
        updatedAt:
          type: string
          description: The date when the data record has been last updated.
          format: date-time
      description: Generic business partner output with external id
    BusinessPartnerStateDto:
      type: object
      properties:
        validFrom:
          type: string
          description: Date since when the status is/was valid.
          format: date-time
        validTo:
          type: string
          description: Date until the status was valid, if applicable.
          format: date-time
        type:
          type: string
          description: The type of this specified status.
          enum:
            - ACTIVE
            - INACTIVE
    ChangelogGateDto:
      required:
        - changelogType
        - externalId
        - timestamp
      type: object
      properties:
        externalId:
          type: string
          description: The external identifier of the business partner for which the changelog entry was created.
        businessPartnerType:
          type: string
          description: 'One of the types of business partners for which the changelog entry was created: legal entity, site, address.'
          enum:
            - LEGAL_ENTITY
            - SITE
            - ADDRESS
            - GENERIC
        timestamp:
          type: string
          description: The date and time when the changelog entry was created.
          format: date-time
        changelogType:
          type: string
          description: 'One of the actions for which the changelog entry was created: create, update.'
          enum:
            - CREATE
            - UPDATE
      description: An entry of the changelog, which is created each time a business partner is modified and contains data about the change. The actual new state of the business partner is not included.
    ChangelogSearchRequest:
      type: object
      properties:
        timestampAfter:
          type: string
          description: Only changelog entries created after this time. Ignored if empty.
          format: date-time
          example: '2023-03-20T10:23:28.194Z'
        externalIds:
          uniqueItems: true
          type: array
          description: Only for business partners with the given array of external IDs. Ignored if empty.
          items:
            type: string
        businessPartnerTypes:
          uniqueItems: true
          type: array
          description: Only for business partners with the given array of business partner types. Ignored if empty.
          items:
            type: string
            enum:
              - LEGAL_ENTITY
              - SITE
              - ADDRESS
              - GENERIC
    ConfidenceCriteriaDto:
      required:
        - checkedByExternalDataSource
        - confidenceLevel
        - lastConfidenceCheckAt
        - nextConfidenceCheckAt
        - numberOfBusinessPartners
        - sharedByOwner
      type: object
      properties:
        sharedByOwner:
          type: boolean
        checkedByExternalDataSource:
          type: boolean
        numberOfBusinessPartners:
          type: integer
          format: int32
        lastConfidenceCheckAt:
          type: string
          format: date-time
        nextConfidenceCheckAt:
          type: string
          format: date-time
        confidenceLevel:
          type: integer
          format: int32
    ErrorInfoChangeLogOutputError:
      title: ErrorInfo
      required:
        - errorCode
        - message
      type: object
      properties:
        errorCode:
          type: string
          description: Error code identifying the error
          enum:
            - ExternalIdNotFound
        message:
          type: string
          description: Error message that explains the error
        entityKey:
          type: string
          description: Key (externalId) of the entity that failed
      description: Holds information about failures
    GeoCoordinateDto:
      required:
        - latitude
        - longitude
      type: object
      properties:
        longitude:
          type: number
          description: Longitude coordinate
          format: float
        latitude:
          type: number
          description: Latitude coordinate
          format: float
        altitude:
          type: number
          description: Altitude, if applicable
          format: float
      description: The exact location of the physical postal address in latitude, longitude, and altitude.
    LegalEntityClassificationDto:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          description: Type of classification.
          enum:
            - NACE
            - NAF
            - NAICS
            - SIC
        code:
          type: string
          description: The identifier of the class belonging to the classification.
        value:
          type: string
          description: The name of the class belonging to the classification.
      description: A legal entity classification is an assignment of the legal entity to an industry. It does not necessarily have to be the only industry the company is active in (see large companies operating in different industries). Multiple assignments to several industries are possible per classification type.
    LegalEntityGateInputDto:
      required:
        - classifications
        - externalId
        - identifiers
        - legalAddress
        - legalNameParts
        - roles
        - states
      type: object
      properties:
        legalNameParts:
          type: array
          description: The list of name parts of the legal entity to accommodate the different number of name fields in different systems.
          items:
            type: string
        identifiers:
          type: array
          description: The list of identifiers of the legal entity.
          items:
            $ref: '#/components/schemas/LegalEntityIdentifierDto'
        legalShortName:
          type: string
          description: The abbreviated name of the legal entity.
        legalForm:
          type: string
          description: The legal form of the legal entity.
        states:
          type: array
          description: The list of (temporary) states of the legal entity.
          items:
            $ref: '#/components/schemas/LegalEntityStateDto'
        classifications:
          type: array
          description: The list of classifications of the legal entity, such as a specific industry.
          items:
            $ref: '#/components/schemas/LegalEntityClassificationDto'
        roles:
          type: array
          description: Roles this business partner takes in relation to the sharing member.
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
              - ONE_TIME_SUPPLIER
              - ONE_TIME_CUSTOMER
        confidenceCriteria:
          $ref: '#/components/schemas/ConfidenceCriteriaDto'
        legalAddress:
          $ref: '#/components/schemas/AddressGateInputDto'
        externalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner.
      description: In general, a legal entity is a juridical person that has legal rights and duties related to contracts, agreements, and obligations. The term especially applies to any kind of organization (such as an enterprise or company, university, association, etc.) established under the law applicable to a country.In Catena-X, a legal entity is a type of business partner representing a legally registered organization with its official registration information, such as legal name (including legal form, if registered), legal address and tax number.A legal entity has exactly one legal address, but it is possible to specify additional addresses that a legal entity owns. Thus, at least one address is assigned to a legal entity. A legal entity can own sites. Thus, many or no sites are assigned to a legal entity. A legal entity is uniquely identified by the BPNL.
    LegalEntityGateInputRequest:
      required:
        - classifications
        - externalId
        - identifiers
        - legalAddress
        - legalNameParts
        - roles
        - states
      type: object
      properties:
        legalNameParts:
          type: array
          description: The list of name parts of the legal entity to accommodate the different number of name fields in different systems.
          items:
            type: string
        identifiers:
          type: array
          description: The list of identifiers of the legal entity.
          items:
            $ref: '#/components/schemas/LegalEntityIdentifierDto'
        legalShortName:
          type: string
          description: The abbreviated name of the legal entity.
        legalForm:
          type: string
          description: The legal form of the legal entity.
        states:
          type: array
          description: The list of (temporary) states of the legal entity.
          items:
            $ref: '#/components/schemas/LegalEntityStateDto'
        classifications:
          type: array
          description: The list of classifications of the legal entity, such as a specific industry.
          items:
            $ref: '#/components/schemas/LegalEntityClassificationDto'
        roles:
          type: array
          description: Roles this business partner takes in relation to the sharing member.
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
              - ONE_TIME_SUPPLIER
              - ONE_TIME_CUSTOMER
        confidenceCriteria:
          $ref: '#/components/schemas/ConfidenceCriteriaDto'
        legalAddress:
          $ref: '#/components/schemas/LogisticAddressDto'
        externalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner.
      description: Request for creating/updating a business partner record of type legal entity. In general, a legal entity is a juridical person that has legal rights and duties related to contracts, agreements, and obligations. The term especially applies to any kind of organization (such as an enterprise or company, university, association, etc.) established under the law applicable to a country.In Catena-X, a legal entity is a type of business partner representing a legally registered organization with its official registration information, such as legal name (including legal form, if registered), legal address and tax number.A legal entity has exactly one legal address, but it is possible to specify additional addresses that a legal entity owns. Thus, at least one address is assigned to a legal entity. A legal entity can own sites. Thus, many or no sites are assigned to a legal entity. A legal entity is uniquely identified by the BPNL.
    LegalEntityGateOutputRequest:
      required:
        - bpn
        - classifications
        - externalId
        - identifiers
        - legalAddress
        - legalNameParts
        - roles
        - states
      type: object
      properties:
        legalNameParts:
          type: array
          description: The list of name parts of the legal entity to accommodate the different number of name fields in different systems.
          items:
            type: string
        identifiers:
          type: array
          description: The list of identifiers of the legal entity.
          items:
            $ref: '#/components/schemas/LegalEntityIdentifierDto'
        legalShortName:
          type: string
          description: The abbreviated name of the legal entity.
        legalForm:
          type: string
          description: The legal form of the legal entity.
        states:
          type: array
          description: The list of (temporary) states of the legal entity.
          items:
            $ref: '#/components/schemas/LegalEntityStateDto'
        classifications:
          type: array
          description: The list of classifications of the legal entity, such as a specific industry.
          items:
            $ref: '#/components/schemas/LegalEntityClassificationDto'
        roles:
          type: array
          description: Roles this business partner takes in relation to the sharing member.
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
              - ONE_TIME_SUPPLIER
              - ONE_TIME_CUSTOMER
        confidenceCriteria:
          $ref: '#/components/schemas/ConfidenceCriteriaDto'
        legalAddress:
          $ref: '#/components/schemas/AddressGateOutputChildRequest'
        externalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner.
        bpn:
          type: string
          description: A BPNL represents and uniquely identifies a legal entity, which is defined by its legal name (including legal form, if registered), legal address and tax number.
      description: Request for creating/updating a business partner record of type legal entity. In general, a legal entity is a juridical person that has legal rights and duties related to contracts, agreements, and obligations. The term especially applies to any kind of organization (such as an enterprise or company, university, association, etc.) established under the law applicable to a country.In Catena-X, a legal entity is a type of business partner representing a legally registered organization with its official registration information, such as legal name (including legal form, if registered), legal address and tax number.A legal entity has exactly one legal address, but it is possible to specify additional addresses that a legal entity owns. Thus, at least one address is assigned to a legal entity. A legal entity can own sites. Thus, many or no sites are assigned to a legal entity. A legal entity is uniquely identified by the BPNL.
    LegalEntityGateOutputResponse:
      required:
        - bpnl
        - classifications
        - externalId
        - identifiers
        - legalAddress
        - legalNameParts
        - roles
        - states
      type: object
      properties:
        legalNameParts:
          type: array
          description: The list of name parts of the legal entity to accommodate the different number of name fields in different systems.
          items:
            type: string
        identifiers:
          type: array
          description: The list of identifiers of the legal entity.
          items:
            $ref: '#/components/schemas/LegalEntityIdentifierDto'
        legalShortName:
          type: string
          description: The abbreviated name of the legal entity.
        legalForm:
          type: string
          description: The legal form of the legal entity.
        states:
          type: array
          description: The list of (temporary) states of the legal entity.
          items:
            $ref: '#/components/schemas/LegalEntityStateDto'
        classifications:
          type: array
          description: The list of classifications of the legal entity, such as a specific industry.
          items:
            $ref: '#/components/schemas/LegalEntityClassificationDto'
        roles:
          type: array
          description: Roles this business partner takes in relation to the sharing member.
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
              - ONE_TIME_SUPPLIER
              - ONE_TIME_CUSTOMER
        confidenceCriteria:
          $ref: '#/components/schemas/ConfidenceCriteriaDto'
        legalAddress:
          $ref: '#/components/schemas/AddressGateOutputDto'
        externalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner.
        bpnl:
          type: string
          description: A BPNL represents and uniquely identifies a legal entity, which is defined by its legal name (including legal form, if registered), legal address and tax number.
      description: In general, a legal entity is a juridical person that has legal rights and duties related to contracts, agreements, and obligations. The term especially applies to any kind of organization (such as an enterprise or company, university, association, etc.) established under the law applicable to a country.In Catena-X, a legal entity is a type of business partner representing a legally registered organization with its official registration information, such as legal name (including legal form, if registered), legal address and tax number.A legal entity has exactly one legal address, but it is possible to specify additional addresses that a legal entity owns. Thus, at least one address is assigned to a legal entity. A legal entity can own sites. Thus, many or no sites are assigned to a legal entity. A legal entity is uniquely identified by the BPNL.
    LegalEntityIdentifierDto:
      required:
        - type
        - value
      type: object
      properties:
        value:
          type: string
          description: The value of the identifier like "DE123465789".
        type:
          type: string
          description: The type of the identifier.
        issuingBody:
          type: string
          description: The name of the official register, where the identifier is registered. For example, a Handelsregisternummer in Germany is only valid with its corresponding Handelsregister.
      description: A legal entity identifier (uniquely) identifies the legal entity, such as the German Handelsregisternummer, a VAT number, etc.
    LegalEntityRepresentationInputDto:
      required:
        - classifications
      type: object
      properties:
        legalEntityBpn:
          type: string
          description: The BPNL of the legal entity, on which the business partner provides a view.
        legalName:
          type: string
          description: The name of the legal entity, on which the business partner provides a view, according to official registers.
        shortName:
          type: string
          description: The abbreviated name of the legal entity, on which the business partner provides a view.
        legalForm:
          type: string
          description: The legal form of the legal entity, on which the business partner provides a view.
        classifications:
          type: array
          description: The list of classifications of the business partner, such as a specific industry. Sorted and duplicates removed by the service.
          items:
            $ref: '#/components/schemas/BusinessPartnerClassificationDto'
      description: The legal entity, on which the business partner provides a view.
    LegalEntityRepresentationOutputDto:
      required:
        - bpnL
        - classifications
        - confidenceCriteria
        - legalEntityBpn
      type: object
      properties:
        legalEntityBpn:
          type: string
          description: The BPNL of the legal entity, on which the business partner provides a view.
        legalName:
          type: string
          description: The name of the legal entity, on which the business partner provides a view, according to official registers.
        shortName:
          type: string
          description: The abbreviated name of the legal entity, on which the business partner provides a view.
        legalForm:
          type: string
          description: The legal form of the legal entity, on which the business partner provides a view.
        classifications:
          type: array
          description: The list of classifications of the business partner, such as a specific industry. Sorted and duplicates removed by the service.
          items:
            $ref: '#/components/schemas/BusinessPartnerClassificationDto'
        confidenceCriteria:
          $ref: '#/components/schemas/ConfidenceCriteriaDto'
      description: Legal Entity properties of business partner output data
    LegalEntityStateDto:
      required:
        - type
      type: object
      properties:
        description:
          type: string
        validFrom:
          type: string
          description: The date from which the state is valid.
          format: date-time
        validTo:
          type: string
          description: The date until the state is valid.
          format: date-time
        type:
          type: string
          description: 'One of the state types: active, inactive.'
          enum:
            - ACTIVE
            - INACTIVE
      description: A legal entity state indicates if the legal entity is active or inactive. This does not describe the relation between a sharing member and a business partner and whether they have active business, but it describes whether the legal entity is still operating.
    LogisticAddressDto:
      required:
        - identifiers
        - nameParts
        - physicalPostalAddress
        - roles
        - states
      type: object
      properties:
        nameParts:
          type: array
          description: The list of name parts of the address to accommodate the different number of name fields in different systems. This is not according to official registers but according to the name the sharing member chooses.
          items:
            type: string
        states:
          type: array
          description: The list of (temporary) states of the address.
          items:
            $ref: '#/components/schemas/AddressStateDto'
        identifiers:
          type: array
          description: The list of identifiers of the address.
          items:
            $ref: '#/components/schemas/AddressIdentifierDto'
        physicalPostalAddress:
          $ref: '#/components/schemas/PhysicalPostalAddressDto'
        alternativePostalAddress:
          $ref: '#/components/schemas/AlternativePostalAddressDto'
        roles:
          type: array
          description: Roles this business partner takes in relation to the sharing member.
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
              - ONE_TIME_SUPPLIER
              - ONE_TIME_CUSTOMER
        confidenceCriteria:
          $ref: '#/components/schemas/ConfidenceCriteriaDto'
      description: In general, an address is a collection of information to describe a physical location, using a street name with a house number and/or a post office box as reference. In addition, an address consists of several postal attributes, such as country, region (state), county, township, city, district, or postal code, which help deliver mail.In Catena-X, an address is a type of business partner representing the legal address of a legal entity, and/or the main address of a site, or any additional address of a legal entity or site (such as different gates).An address is owned by a legal entity. Thus, exactly one legal entity is assigned to an address. An address can belong to a site. Thus, one or no site is assigned to an address. An address is uniquely identified by the BPNA.
    PageChangeLogDtoChangelogGateDto:
      required:
        - content
        - contentSize
        - errors
        - invalidEntries
        - page
        - totalElements
        - totalPages
      type: object
      properties:
        totalElements:
          type: integer
          description: Total number of all results in all pages
          format: int64
        totalPages:
          type: integer
          description: Total number pages
          format: int32
        page:
          type: integer
          description: Current page number
          format: int32
        contentSize:
          type: integer
          description: Number of results in the page
          format: int32
        content:
          type: array
          description: Collection of results in the page
          items:
            $ref: '#/components/schemas/ChangelogGateDto'
        invalidEntries:
          type: integer
          description: Number of entries in the page that have been omitted due to being invalid (error)
          format: int32
        errors:
          type: array
          description: Infos about the entries with errors
          items:
            $ref: '#/components/schemas/ErrorInfoChangeLogOutputError'
      description: Paginated collection of results
    PageDtoAddressGateInputDto:
      required:
        - content
        - contentSize
        - page
        - totalElements
        - totalPages
      type: object
      properties:
        totalElements:
          type: integer
          description: Total number of all results in all pages
          format: int64
        totalPages:
          type: integer
          description: Total number pages
          format: int32
        page:
          type: integer
          description: Current page number
          format: int32
        contentSize:
          type: integer
          description: Number of results in the page
          format: int32
        content:
          type: array
          description: Collection of results in the page
          items:
            $ref: '#/components/schemas/AddressGateInputDto'
      description: Paginated collection of results
    PageDtoAddressGateOutputDto:
      required:
        - content
        - contentSize
        - page
        - totalElements
        - totalPages
      type: object
      properties:
        totalElements:
          type: integer
          description: Total number of all results in all pages
          format: int64
        totalPages:
          type: integer
          description: Total number pages
          format: int32
        page:
          type: integer
          description: Current page number
          format: int32
        contentSize:
          type: integer
          description: Number of results in the page
          format: int32
        content:
          type: array
          description: Collection of results in the page
          items:
            $ref: '#/components/schemas/AddressGateOutputDto'
      description: Paginated collection of results
    PageDtoBusinessPartnerInputDto:
      required:
        - content
        - contentSize
        - page
        - totalElements
        - totalPages
      type: object
      properties:
        totalElements:
          type: integer
          description: Total number of all results in all pages
          format: int64
        totalPages:
          type: integer
          description: Total number pages
          format: int32
        page:
          type: integer
          description: Current page number
          format: int32
        contentSize:
          type: integer
          description: Number of results in the page
          format: int32
        content:
          type: array
          description: Collection of results in the page
          items:
            $ref: '#/components/schemas/BusinessPartnerInputDto'
      description: Paginated collection of results
    PageDtoBusinessPartnerOutputDto:
      required:
        - content
        - contentSize
        - page
        - totalElements
        - totalPages
      type: object
      properties:
        totalElements:
          type: integer
          description: Total number of all results in all pages
          format: int64
        totalPages:
          type: integer
          description: Total number pages
          format: int32
        page:
          type: integer
          description: Current page number
          format: int32
        contentSize:
          type: integer
          description: Number of results in the page
          format: int32
        content:
          type: array
          description: Collection of results in the page
          items:
            $ref: '#/components/schemas/BusinessPartnerOutputDto'
      description: Paginated collection of results
    PageDtoLegalEntityGateInputDto:
      required:
        - content
        - contentSize
        - page
        - totalElements
        - totalPages
      type: object
      properties:
        totalElements:
          type: integer
          description: Total number of all results in all pages
          format: int64
        totalPages:
          type: integer
          description: Total number pages
          format: int32
        page:
          type: integer
          description: Current page number
          format: int32
        contentSize:
          type: integer
          description: Number of results in the page
          format: int32
        content:
          type: array
          description: Collection of results in the page
          items:
            $ref: '#/components/schemas/LegalEntityGateInputDto'
      description: Paginated collection of results
    PageDtoLegalEntityGateOutputResponse:
      required:
        - content
        - contentSize
        - page
        - totalElements
        - totalPages
      type: object
      properties:
        totalElements:
          type: integer
          description: Total number of all results in all pages
          format: int64
        totalPages:
          type: integer
          description: Total number pages
          format: int32
        page:
          type: integer
          description: Current page number
          format: int32
        contentSize:
          type: integer
          description: Number of results in the page
          format: int32
        content:
          type: array
          description: Collection of results in the page
          items:
            $ref: '#/components/schemas/LegalEntityGateOutputResponse'
      description: Paginated collection of results
    PageDtoSharingStateDto:
      required:
        - content
        - contentSize
        - page
        - totalElements
        - totalPages
      type: object
      properties:
        totalElements:
          type: integer
          description: Total number of all results in all pages
          format: int64
        totalPages:
          type: integer
          description: Total number pages
          format: int32
        page:
          type: integer
          description: Current page number
          format: int32
        contentSize:
          type: integer
          description: Number of results in the page
          format: int32
        content:
          type: array
          description: Collection of results in the page
          items:
            $ref: '#/components/schemas/SharingStateDto'
      description: Paginated collection of results
    PageDtoSiteGateInputDto:
      required:
        - content
        - contentSize
        - page
        - totalElements
        - totalPages
      type: object
      properties:
        totalElements:
          type: integer
          description: Total number of all results in all pages
          format: int64
        totalPages:
          type: integer
          description: Total number pages
          format: int32
        page:
          type: integer
          description: Current page number
          format: int32
        contentSize:
          type: integer
          description: Number of results in the page
          format: int32
        content:
          type: array
          description: Collection of results in the page
          items:
            $ref: '#/components/schemas/SiteGateInputDto'
      description: Paginated collection of results
    PageDtoSiteGateOutputResponse:
      required:
        - content
        - contentSize
        - page
        - totalElements
        - totalPages
      type: object
      properties:
        totalElements:
          type: integer
          description: Total number of all results in all pages
          format: int64
        totalPages:
          type: integer
          description: Total number pages
          format: int32
        page:
          type: integer
          description: Current page number
          format: int32
        contentSize:
          type: integer
          description: Number of results in the page
          format: int32
        content:
          type: array
          description: Collection of results in the page
          items:
            $ref: '#/components/schemas/SiteGateOutputResponse'
      description: Paginated collection of results
    PhysicalPostalAddressDto:
      type: object
      properties:
        geographicCoordinates:
          $ref: '#/components/schemas/GeoCoordinateDto'
        country:
          type: string
          description: The 2-digit country code of the physical postal address according to ISO 3166-1.
          enum:
            - UNDEFINED
            - AC
            - AD
            - AE
            - AF
            - AG
            - AI
            - AL
            - AM
            - AN
            - AO
            - AQ
            - AR
            - AS
            - AT
            - AU
            - AW
            - AX
            - AZ
            - BA
            - BB
            - BD
            - BE
            - BF
            - BG
            - BH
            - BI
            - BJ
            - BL
            - BM
            - BN
            - BO
            - BQ
            - BR
            - BS
            - BT
            - BU
            - BV
            - BW
            - BY
            - BZ
            - CA
            - CC
            - CD
            - CF
            - CG
            - CH
            - CI
            - CK
            - CL
            - CM
            - CN
            - CO
            - CP
            - CR
            - CS
            - CU
            - CV
            - CW
            - CX
            - CY
            - CZ
            - DE
            - DG
            - DJ
            - DK
            - DM
            - DO
            - DZ
            - EA
            - EC
            - EE
            - EG
            - EH
            - ER
            - ES
            - ET
            - EU
            - EZ
            - FI
            - FJ
            - FK
            - FM
            - FO
            - FR
            - FX
            - GA
            - GB
            - GD
            - GE
            - GF
            - GG
            - GH
            - GI
            - GL
            - GM
            - GN
            - GP
            - GQ
            - GR
            - GS
            - GT
            - GU
            - GW
            - GY
            - HK
            - HM
            - HN
            - HR
            - HT
            - HU
            - IC
            - ID
            - IE
            - IL
            - IM
            - IN
            - IO
            - IQ
            - IR
            - IS
            - IT
            - JE
            - JM
            - JO
            - JP
            - KE
            - KG
            - KH
            - KI
            - KM
            - KN
            - KP
            - KR
            - KW
            - KY
            - KZ
            - LA
            - LB
            - LC
            - LI
            - LK
            - LR
            - LS
            - LT
            - LU
            - LV
            - LY
            - MA
            - MC
            - MD
            - ME
            - MF
            - MG
            - MH
            - MK
            - ML
            - MM
            - MN
            - MO
            - MP
            - MQ
            - MR
            - MS
            - MT
            - MU
            - MV
            - MW
            - MX
            - MY
            - MZ
            - NA
            - NC
            - NE
            - NF
            - NG
            - NI
            - NL
            - 'NO'
            - NP
            - NR
            - NT
            - NU
            - NZ
            - OM
            - PA
            - PE
            - PF
            - PG
            - PH
            - PK
            - PL
            - PM
            - PN
            - PR
            - PS
            - PT
            - PW
            - PY
            - QA
            - RE
            - RO
            - RS
            - RU
            - RW
            - SA
            - SB
            - SC
            - SD
            - SE
            - SF
            - SG
            - SH
            - SI
            - SJ
            - SK
            - SL
            - SM
            - SN
            - SO
            - SR
            - SS
            - ST
            - SU
            - SV
            - SX
            - SY
            - SZ
            - TA
            - TC
            - TD
            - TF
            - TG
            - TH
            - TJ
            - TK
            - TL
            - TM
            - TN
            - TO
            - TP
            - TR
            - TT
            - TV
            - TW
            - TZ
            - UA
            - UG
            - UK
            - UM
            - US
            - UY
            - UZ
            - VA
            - VC
            - VE
            - VG
            - VI
            - VN
            - VU
            - WF
            - WS
            - XI
            - XU
            - XK
            - YE
            - YT
            - YU
            - ZA
            - ZM
            - ZR
            - ZW
        administrativeAreaLevel1:
          type: string
          description: The 2-digit country subdivision code according to ISO 3166-2, such as a region within a country.
        administrativeAreaLevel2:
          type: string
          description: The name of the locally regulated secondary country subdivision of the physical postal address, such as county within a country.
        administrativeAreaLevel3:
          type: string
          description: The name of the locally regulated tertiary country subdivision of the physical address, such as townships within a country.
        postalCode:
          type: string
          description: The alphanumeric identifier (sometimes including spaces or punctuation) of the physical postal address for the purpose of sorting mail, synonyms:postcode, post code, PIN or ZIP code.
        city:
          type: string
          description: 'The name of the city of the physical postal address, synonyms: town, village, municipality.'
        district:
          type: string
          description: The name of the district of the physical postal address which divides the city in several smaller areas.
        street:
          $ref: '#/components/schemas/StreetDto'
        companyPostalCode:
          type: string
          description: The company postal code of the physical postal address, which is sometimes required for large companies.
        industrialZone:
          type: string
          description: 'The industrial zone of the physical postal address, designating an area for industrial development, synonym: industrial area.'
        building:
          type: string
          description: The alphanumeric identifier of the building addressed by the physical postal address.
        floor:
          type: string
          description: 'The number of a floor in the building addressed by the physical postal address, synonym: level.'
        door:
          type: string
          description: 'The number of a door in the building on the respective floor addressed by the physical postal address, synonyms: room, suite.'
      description: A physical postal address describes the physical location of an office, warehouse, gate, etc.
    PostSharingStateReadyRequest:
      required:
        - externalIds
      type: object
      properties:
        externalIds:
          type: array
          items:
            type: string
      description: Request for setting business partners into ready to be shared to golden record state
    SharingStateDto:
      required:
        - businessPartnerType
        - externalId
        - sharingStateType
      type: object
      properties:
        businessPartnerType:
          type: string
          description: One of the types of business partners for which the sharing state entry was created.
          enum:
            - LEGAL_ENTITY
            - SITE
            - ADDRESS
            - GENERIC
        externalId:
          type: string
          description: The external identifier of the business partner for which the sharing state entry was created.
        sharingStateType:
          type: string
          description: One of the sharing state types of the current sharing state.
          enum:
            - Pending
            - Success
            - Error
            - Initial
            - Ready
        sharingErrorCode:
          type: string
          description: One of the sharing error codes in case the current sharing state type is "error".
          enum:
            - SharingProcessError
            - SharingTimeout
            - BpnNotInPool
            - MissingTaskID
        sharingErrorMessage:
          type: string
          description: The error message in case the current sharing state type is "error".
        bpn:
          type: string
          description: The business partner number associated to the combination of external identifier and business partner type in case the sharing state type is “success”. Can be either a BPNL, BPNS or BPNA.
        sharingProcessStarted:
          type: string
          description: The date and time when the sharing process was started.
          format: date-time
        taskId:
          type: string
          description: The orchestrator task identifier that was created
      description: A sharing state entry shows the progress in the sharing process and is updated each time the progress for a business partner changes. The business partner is identified by a combination of external ID and business partner type.
    SiteGateInputDto:
      required:
        - externalId
        - legalEntityExternalId
        - mainAddress
        - nameParts
        - roles
        - states
      type: object
      properties:
        nameParts:
          type: array
          description: The list of name parts of the site to accommodate the different number of name fields in different systems. This is not according to official registers but according to the name the owner chooses.
          items:
            type: string
        states:
          type: array
          description: The list of the (temporary) states of the site.
          items:
            $ref: '#/components/schemas/SiteStateDto'
        roles:
          type: array
          description: Roles this business partner takes in relation to the sharing member.
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
              - ONE_TIME_SUPPLIER
              - ONE_TIME_CUSTOMER
        mainAddress:
          $ref: '#/components/schemas/AddressGateInputDto'
        externalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner.
        legalEntityExternalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner owning the site.
      description: In general, a site is a delimited geographical area in which an organization (such as an enterprise or company, university, association, etc.) conducts business. In Catena-X, a site is a type of business partner representing a physical location or area owned by a legal entity, where a production plant, a warehouse, or an office building is located. A site is owned by a legal entity. Thus, exactly one legal entity is assigned to a site. A site has exactly one main address, but it is possible to specify additional addresses (such as different gates), that belong to a site. Thus, at least one address is assigned to a site. A site can only be uploaded and modified by the owner (the legal entity), because only the owner knows which addresses belong to which site. A site is uniquely identified by the BPNS.
    SiteGateInputRequest:
      required:
        - externalId
        - legalEntityExternalId
        - mainAddress
        - nameParts
        - roles
        - states
      type: object
      properties:
        nameParts:
          type: array
          description: The list of name parts of the site to accommodate the different number of name fields in different systems. This is not according to official registers but according to the name the owner chooses.
          items:
            type: string
        states:
          type: array
          description: The list of the (temporary) states of the site.
          items:
            $ref: '#/components/schemas/SiteStateDto'
        roles:
          type: array
          description: Roles this business partner takes in relation to the sharing member.
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
              - ONE_TIME_SUPPLIER
              - ONE_TIME_CUSTOMER
        mainAddress:
          $ref: '#/components/schemas/LogisticAddressDto'
        externalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner.
        legalEntityExternalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner owning the site.
      description: Request for creating/updating a business partner record of type site. In general, a site is a delimited geographical area in which an organization (such as an enterprise or company, university, association, etc.) conducts business. In Catena-X, a site is a type of business partner representing a physical location or area owned by a legal entity, where a production plant, a warehouse, or an office building is located. A site is owned by a legal entity. Thus, exactly one legal entity is assigned to a site. A site has exactly one main address, but it is possible to specify additional addresses (such as different gates), that belong to a site. Thus, at least one address is assigned to a site. A site can only be uploaded and modified by the owner (the legal entity), because only the owner knows which addresses belong to which site. A site is uniquely identified by the BPNS.
    SiteGateOutputRequest:
      required:
        - bpn
        - externalId
        - legalEntityExternalId
        - mainAddress
        - nameParts
        - roles
        - states
      type: object
      properties:
        nameParts:
          type: array
          description: The list of name parts of the site to accommodate the different number of name fields in different systems. This is not according to official registers but according to the name the owner chooses.
          items:
            type: string
        states:
          type: array
          description: The list of the (temporary) states of the site.
          items:
            $ref: '#/components/schemas/SiteStateDto'
        roles:
          type: array
          description: Roles this business partner takes in relation to the sharing member.
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
              - ONE_TIME_SUPPLIER
              - ONE_TIME_CUSTOMER
        mainAddress:
          $ref: '#/components/schemas/AddressGateOutputChildRequest'
        externalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner.
        legalEntityExternalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner owning the site.
        bpn:
          type: string
          description: A BPNS represents and uniquely identifies a site, which is where for example a production plant, a warehouse, or an office building is located.
      description: Request for creating/updating a business partner record of type site. In general, a site is a delimited geographical area in which an organization (such as an enterprise or company, university, association, etc.) conducts business. In Catena-X, a site is a type of business partner representing a physical location or area owned by a legal entity, where a production plant, a warehouse, or an office building is located. A site is owned by a legal entity. Thus, exactly one legal entity is assigned to a site. A site has exactly one main address, but it is possible to specify additional addresses (such as different gates), that belong to a site. Thus, at least one address is assigned to a site. A site can only be uploaded and modified by the owner (the legal entity), because only the owner knows which addresses belong to which site. A site is uniquely identified by the BPNS.
    SiteGateOutputResponse:
      required:
        - bpns
        - externalId
        - legalEntityExternalId
        - mainAddress
        - nameParts
        - roles
        - states
      type: object
      properties:
        nameParts:
          type: array
          description: The list of name parts of the site to accommodate the different number of name fields in different systems. This is not according to official registers but according to the name the owner chooses.
          items:
            type: string
        states:
          type: array
          description: The list of the (temporary) states of the site.
          items:
            $ref: '#/components/schemas/SiteStateDto'
        roles:
          type: array
          description: Roles this business partner takes in relation to the sharing member.
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
              - ONE_TIME_SUPPLIER
              - ONE_TIME_CUSTOMER
        mainAddress:
          $ref: '#/components/schemas/AddressGateOutputDto'
        externalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner.
        legalEntityExternalId:
          type: string
          description: The identifier which uniquely identifies (in the internal system landscape of the sharing member) the business partner owning the site.
        bpns:
          type: string
          description: A BPNS represents and uniquely identifies a site, which is where for example a production plant, a warehouse, or an office building is located.
      description: In general, a site is a delimited geographical area in which an organization (such as an enterprise or company, university, association, etc.) conducts business. In Catena-X, a site is a type of business partner representing a physical location or area owned by a legal entity, where a production plant, a warehouse, or an office building is located. A site is owned by a legal entity. Thus, exactly one legal entity is assigned to a site. A site has exactly one main address, but it is possible to specify additional addresses (such as different gates), that belong to a site. Thus, at least one address is assigned to a site. A site can only be uploaded and modified by the owner (the legal entity), because only the owner knows which addresses belong to which site. A site is uniquely identified by the BPNS.
    SiteRepresentationInputDto:
      type: object
      properties:
        siteBpn:
          type: string
          description: The BPNS of the site, on which the business partner provides a view.
        name:
          type: string
          description: The name of the site, on which the business partner provides a view. This is not according to official registers but according to the name the owner chooses.
      description: The site, on which the business partner provides a view.
    SiteRepresentationOutputDto:
      required:
        - confidenceCriteria
        - siteBpn
      type: object
      properties:
        siteBpn:
          type: string
          description: The BPNS of the site, on which the business partner provides a view.
        name:
          type: string
          description: The name of the site, on which the business partner provides a view. This is not according to official registers but according to the name the owner chooses.
        confidenceCriteria:
          $ref: '#/components/schemas/ConfidenceCriteriaDto'
      description: Site properties of business partner output data
    SiteStateDto:
      required:
        - type
      type: object
      properties:
        description:
          type: string
        validFrom:
          type: string
          description: The date from which the state is valid.
          format: date-time
        validTo:
          type: string
          description: The date until the state is valid.
          format: date-time
        type:
          type: string
          description: 'One of the state types: active, inactive.'
          enum:
            - ACTIVE
            - INACTIVE
      description: A site state indicates if the site is active or inactive. This does not describe the relation between a sharing member and a business partner and whether they have active business, but it describes whether the site is still operating.
    StatsAddressTypesResponse:
      required:
        - additionalTotal
        - legalAndSiteTotal
        - legalTotal
        - siteTotal
      type: object
      properties:
        legalAndSiteTotal:
          type: integer
          format: int32
        legalTotal:
          type: integer
          format: int32
        siteTotal:
          type: integer
          format: int32
        additionalTotal:
          type: integer
          format: int32
    StatsConfidenceCriteriaResponse:
      required:
        - checkedByExternalDataSourceTotal
        - confidenceLevelAverage
        - numberOfBusinessPartnersAverage
        - sharedByOwnerTotal
        - uniqueTotal
      type: object
      properties:
        numberOfBusinessPartnersAverage:
          type: number
          format: float
        uniqueTotal:
          type: integer
          format: int64
        sharedByOwnerTotal:
          type: integer
          format: int64
        checkedByExternalDataSourceTotal:
          type: integer
          format: int64
        confidenceLevelAverage:
          type: number
          format: float
    StatsSharingStatesResponse:
      required:
        - errorTotal
        - initialTotal
        - pendingTotal
        - readyTotal
        - successTotal
      type: object
      properties:
        initialTotal:
          type: integer
          format: int32
        readyTotal:
          type: integer
          format: int32
        pendingTotal:
          type: integer
          format: int32
        successTotal:
          type: integer
          format: int32
        errorTotal:
          type: integer
          format: int32
    StatsStagesResponse:
      required:
        - inputTotal
        - outputTotal
      type: object
      properties:
        inputTotal:
          type: integer
          format: int32
        outputTotal:
          type: integer
          format: int32
    StreetDto:
      type: object
      properties:
        namePrefix:
          type: string
          description: The street related information, which is usually printed before the official street name on an address label.
        additionalNamePrefix:
          type: string
          description: The additional street related information, which is usually printed before the official street name on an address label.
        name:
          type: string
          description: The name of the street.
        nameSuffix:
          type: string
          description: The street related information, which is usually printed after the official street name on an address label.
        additionalNameSuffix:
          type: string
          description: The additional street related information, which is usually printed after the official street name on an address label.
        houseNumber:
          type: string
          description: The number representing the exact location of a building within the street.
        houseNumberSupplement:
          type: string
        milestone:
          type: string
          description: The number representing the exact location of an addressed object within a street without house numbers, such as within long roads.
        direction:
          type: string
          description: The cardinal direction describing where the exit to the location of the addressed object on large highways / motorways is located, such as Highway 101 South.
      description: 'The street of the physical postal address, synonyms: road, avenue, lane, boulevard, highway'
    Unit:
      type: object
