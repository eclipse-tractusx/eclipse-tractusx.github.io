openapi: 3.0.1
info:
  title: Business Partner Data Management Gate
  description: A gate for a member to share business partner data with CatenaX
  version: 4.0.0-SNAPSHOT
servers:
  - url: http://localhost:8081
    description: Generated server url
paths:
  /api/catena/sharing-state:
    get:
      tags:
        - sharing-state-controller
      summary: Get sharing states (including error info and BPN) for business partners, optionally filtered by LSA type and external ID
      operationId: getSharingStates
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
        - name: lsaType
          in: query
          description: LSA Type
          required: false
          schema:
            type: string
            enum:
              - LEGAL_ENTITY
              - SITE
              - ADDRESS
        - name: externalIds
          in: query
          description: External identifiers
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Page of sharing states
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponseSharingState'
    put:
      tags:
        - sharing-state-controller
      summary: Insert/update sharing state (including error info and BPN) for business partner with LSA type and external ID
      operationId: upsertSharingState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharingState'
        required: true
      responses:
        '204':
          description: Operation completed successfully
        '400':
          description: Invalid data (e.g. externalId)
  /api/catena/output/sites:
    put:
      tags:
        - site-controller
      summary: Create or update output sites.
      description: Create or update sites (Output). Updates instead of creating a new site if an already existing external id is used. The same external id may not occur more than once in a single request. For a single request, the maximum number of sites in the request is limited to 100 entries.
      operationId: upsertSitesOutput
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SiteGateOutputRequest'
        required: true
      responses:
        '200':
          description: Sites were successfully updated or created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: On malformed site request
  /api/catena/output/legal-entities:
    put:
      tags:
        - legal-entity-controller
      summary: Create or update output legal entities.
      description: Create or update legal entities (Output). Updates instead of creating a new legal entity if an already existing external id is used. The same external id may not occur more than once in a single request. For a single request, the maximum number of legal entities in the request is limited to 100 entries.
      operationId: upsertLegalEntitiesOutput
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LegalEntityGateOutputRequest'
        required: true
      responses:
        '200':
          description: Legal entities were successfully updated or created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: On malformed legal entity request
  /api/catena/output/addresses:
    put:
      tags:
        - address-controller
      summary: Create or update output addresses.
      description: Create or update addresses (Output). Updates instead of creating a new address if an already existing external id is used. The same external id may not occur more than once in a single request. For a single request, the maximum number of addresses in the request is limited to 100 entries.
      operationId: putAddressesOutput
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddressGateOutputRequest'
        required: true
      responses:
        '200':
          description: Addresses were successfully updated or created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: On malformed address request
  /api/catena/input/sites:
    get:
      tags:
        - site-controller
      summary: Get page of sites
      description: Get page of sites.
      operationId: getSites
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      responses:
        '200':
          description: The requested page of sites
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponseSiteGateInputResponse'
        '400':
          description: On malformed pagination request
    put:
      tags:
        - site-controller
      summary: Create or update sites.
      description: Create or update sites. Updates instead of creating a new site if an already existing external id is used. The same external id may not occur more than once in a single request. For a single request, the maximum number of sites in the request is limited to 100 entries.
      operationId: upsertSites
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SiteGateInputRequest'
        required: true
      responses:
        '200':
          description: Sites were successfully updated or created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: On malformed site request
  /api/catena/input/legal-entities:
    get:
      tags:
        - legal-entity-controller
      summary: Get page of legal entities
      description: Get page of legal entities.
      operationId: getLegalEntities
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      responses:
        '200':
          description: The requested page of legal entities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponseLegalEntityGateInputResponse'
        '400':
          description: On malformed pagination request
    put:
      tags:
        - legal-entity-controller
      summary: Create or update legal entities.
      description: Create or update legal entities. Updates instead of creating a new legal entity if an already existing external id is used. The same external id may not occur more than once in a single request. For a single request, the maximum number of legal entities in the request is limited to 100 entries.
      operationId: upsertLegalEntities
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LegalEntityGateInputRequest'
        required: true
      responses:
        '200':
          description: Legal entities were successfully updated or created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: On malformed legal entity request
  /api/catena/input/addresses:
    get:
      tags:
        - address-controller
      summary: Get page of addresses
      description: Get page of addresses.
      operationId: getAddresses
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      responses:
        '200':
          description: The requested page of addresses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponseAddressGateInputResponse'
        '400':
          description: On malformed pagination request
    put:
      tags:
        - address-controller
      summary: Create or update addresses.
      description: Create or update addresses. Updates instead of creating a new address if an already existing external id is used. The same external id may not occur more than once in a single request. For a single request, the maximum number of addresses in the request is limited to 100 entries.
      operationId: upsertAddresses
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddressGateInputRequest'
        required: true
      responses:
        '200':
          description: Addresses were successfully updated or created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: On malformed address request
  /api/catena/output/sites/search:
    post:
      tags:
        - site-controller
      summary: Get page of sites
      description: Get page of sites. Can optionally be filtered by external ids.
      operationId: getSitesOutput
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: The requested page of sites
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponseSiteGateOutputResponse'
        '400':
          description: On malformed pagination request
  /api/catena/output/legal-entities/search:
    post:
      tags:
        - legal-entity-controller
      summary: Get page of legal entities
      description: Get page of legal entities. Can optionally be filtered by external ids.
      operationId: getLegalEntitiesOutput
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: The requested page of legal entities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponseLegalEntityGateOutputResponse'
        '400':
          description: On malformed pagination request
  /api/catena/output/changelog/search:
    post:
      tags:
        - changelog-controller
      summary: Get business partner changelog entries for changes to the business partner output data
      description: Get business partner changelog entries for changes to the business partner output data. Filter by list external id, from timestamp and/or lsa type
      operationId: getOutputChangelog
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLogSearchRequest'
        required: true
      responses:
        '200':
          description: The changelog entries for the specified parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageChangeLogResponseChangelogResponse'
        '400':
          description: On malformed pagination request
  /api/catena/output/addresses/search:
    post:
      tags:
        - address-controller
      summary: Get page of addresses (Output)
      description: Get page of addresses (Output). Can optionally be filtered by external ids.
      operationId: getAddressesOutput
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: The requested page of addresses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponseAddressGateInputResponse'
        '400':
          description: On malformed pagination request
  /api/catena/input/sites/search:
    post:
      tags:
        - site-controller
      summary: Get page of sites filtered by a collection of externalIds
      description: Get page of sites filtered by a collection of externalIds.
      operationId: getSitesByExternalIds
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        '200':
          description: The requested page of sites
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponseSiteGateInputResponse'
        '400':
          description: On malformed pagination request
  /api/catena/input/legal-entities/search:
    post:
      tags:
        - legal-entity-controller
      summary: Get page of legal-entities filtered by a collection of externalIds
      description: Get page of legal-entities filtered by a collection of externalIds.
      operationId: getLegalEntitiesByExternalIds
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        '200':
          description: The requested page of legal-entities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponseLegalEntityGateInputResponse'
        '400':
          description: On malformed pagination request
  /api/catena/input/changelog/search:
    post:
      tags:
        - changelog-controller
      summary: Get business partner changelog entries for changes to the business partner input data
      description: Get business partner changelog entries for changes to the business partner input data. Filter by list external id, from timestamp and/or lsa type
      operationId: getInputChangelog
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLogSearchRequest'
        required: true
      responses:
        '200':
          description: The changelog entries for the specified parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageChangeLogResponseChangelogResponse'
        '400':
          description: On malformed pagination request
  /api/catena/input/addresses/search:
    post:
      tags:
        - address-controller
      summary: Get page of addresses filtered by a collection of externalIds
      description: Get page of addresses filtered by a collection of externalIds.
      operationId: getAddressesByExternalIds
      parameters:
        - name: page
          in: query
          description: Number of page to get results from
          required: false
          schema:
            minimum: 0
            type: string
            default: '0'
        - name: size
          in: query
          description: Size of each page
          required: false
          schema:
            maximum: 100
            minimum: 0
            type: string
            default: '10'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        '200':
          description: The requested page of addresses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponseAddressGateInputResponse'
        '400':
          description: On malformed pagination request
  /api/catena/input/sites/{externalId}:
    get:
      tags:
        - site-controller
      summary: Get site by external identifier
      description: Get site by external identifier.
      operationId: getSiteByExternalId
      parameters:
        - name: externalId
          in: path
          description: External identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Found site with external identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteGateInputResponse'
        '404':
          description: No site found under specified external identifier
  /api/catena/input/legal-entities/{externalId}:
    get:
      tags:
        - legal-entity-controller
      summary: Get legal entity by external identifier
      description: Get legal entity by external identifier.
      operationId: getLegalEntityByExternalId
      parameters:
        - name: externalId
          in: path
          description: External identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Found legal entity with external identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalEntityGateInputResponse'
        '404':
          description: No legal entity found under specified external identifier
  /api/catena/input/addresses/{externalId}:
    get:
      tags:
        - address-controller
      summary: Get address by external identifier
      description: Get address by external identifier.
      operationId: getAddressByExternalId
      parameters:
        - name: externalId
          in: path
          description: External identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Found address with external identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressGateInputResponse'
        '404':
          description: No address found under specified external identifier
components:
  schemas:
    AddressGateInputRequest:
      type: object
      properties:
        nameParts:
          type: array
          description: |-
            Name of the logistic address of the business partner. This is not according to official
            registers but according to the name the uploading sharing member chooses.
          items:
            type: string
            description: |-
              Name of the logistic address of the business partner. This is not according to official
              registers but according to the name the uploading sharing member chooses.
        states:
          type: array
          items:
            $ref: '#/components/schemas/AddressState'
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/AddressIdentifier'
        physicalPostalAddress:
          $ref: '#/components/schemas/PhysicalPostalAddressGateDto'
        alternativePostalAddress:
          $ref: '#/components/schemas/AlternativePostalAddress'
        roles:
          type: array
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
        externalId:
          type: string
        legalEntityExternalId:
          type: string
        siteExternalId:
          type: string
      description: Address with legal entity or site references. Only one of either legal entity or site external id can be set for an address.
    AddressGateInputResponse:
      type: object
      properties:
        nameParts:
          type: array
          description: |-
            Name of the logistic address of the business partner. This is not according to official
            registers but according to the name the uploading sharing member chooses.
          items:
            type: string
            description: |-
              Name of the logistic address of the business partner. This is not according to official
              registers but according to the name the uploading sharing member chooses.
        states:
          type: array
          items:
            $ref: '#/components/schemas/AddressState'
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/AddressIdentifier'
        physicalPostalAddress:
          $ref: '#/components/schemas/PhysicalPostalAddressGateDto'
        alternativePostalAddress:
          $ref: '#/components/schemas/AlternativePostalAddress'
        roles:
          type: array
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
        externalId:
          type: string
        legalEntityExternalId:
          type: string
        siteExternalId:
          type: string
        bpn:
          type: string
      description: Address with legal entity or site references. Only one of either legal entity or site external id can be set for an address.
    AddressGateOutputChildRequest:
      type: object
      properties:
        nameParts:
          type: array
          description: |-
            Name of the logistic address of the business partner. This is not according to official
            registers but according to the name the uploading sharing member chooses.
          items:
            type: string
            description: |-
              Name of the logistic address of the business partner. This is not according to official
              registers but according to the name the uploading sharing member chooses.
        states:
          type: array
          items:
            $ref: '#/components/schemas/AddressState'
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/AddressIdentifier'
        physicalPostalAddress:
          $ref: '#/components/schemas/PhysicalPostalAddressGateDto'
        alternativePostalAddress:
          $ref: '#/components/schemas/AlternativePostalAddress'
        roles:
          type: array
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
        bpn:
          type: string
      description: DTO for setting the output address data with BPN.
    AddressGateOutputRequest:
      type: object
      properties:
        nameParts:
          type: array
          description: |-
            Name of the logistic address of the business partner. This is not according to official
            registers but according to the name the uploading sharing member chooses.
          items:
            type: string
            description: |-
              Name of the logistic address of the business partner. This is not according to official
              registers but according to the name the uploading sharing member chooses.
        states:
          type: array
          items:
            $ref: '#/components/schemas/AddressState'
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/AddressIdentifier'
        physicalPostalAddress:
          $ref: '#/components/schemas/PhysicalPostalAddressGateDto'
        alternativePostalAddress:
          $ref: '#/components/schemas/AlternativePostalAddress'
        roles:
          type: array
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
        externalId:
          type: string
        legalEntityExternalId:
          type: string
        siteExternalId:
          type: string
        bpn:
          type: string
      description: Address with legal entity or site references. Only one of either legal entity or site external id can be set for an address.
    AddressIdentifier:
      type: object
      properties:
        value:
          type: string
          description: Value of the identifier
        type:
          type: string
          description: Technical key of the type to which this identifier belongs to
      description: Identifier record for a logistic address
    AddressState:
      type: object
      properties:
        description:
          type: string
          description: Description of the status
        validFrom:
          type: string
          description: Since when the status is/was valid
          format: date-time
        validTo:
          type: string
          description: Until the status was valid, if applicable
          format: date-time
        type:
          type: string
          description: The type of this specified status
          enum:
            - ACTIVE
            - INACTIVE
      description: Status record for a address
    AlternativePostalAddress:
      type: object
      properties:
        geographicCoordinates:
          $ref: '#/components/schemas/GeoCoordinates'
        country:
          type: string
          description: Describes the country
          enum:
            - UNDEFINED
            - AC
            - AD
            - AE
            - AF
            - AG
            - AI
            - AL
            - AM
            - AN
            - AO
            - AQ
            - AR
            - AS
            - AT
            - AU
            - AW
            - AX
            - AZ
            - BA
            - BB
            - BD
            - BE
            - BF
            - BG
            - BH
            - BI
            - BJ
            - BL
            - BM
            - BN
            - BO
            - BQ
            - BR
            - BS
            - BT
            - BU
            - BV
            - BW
            - BY
            - BZ
            - CA
            - CC
            - CD
            - CF
            - CG
            - CH
            - CI
            - CK
            - CL
            - CM
            - CN
            - CO
            - CP
            - CR
            - CS
            - CU
            - CV
            - CW
            - CX
            - CY
            - CZ
            - DE
            - DG
            - DJ
            - DK
            - DM
            - DO
            - DZ
            - EA
            - EC
            - EE
            - EG
            - EH
            - ER
            - ES
            - ET
            - EU
            - EZ
            - FI
            - FJ
            - FK
            - FM
            - FO
            - FR
            - FX
            - GA
            - GB
            - GD
            - GE
            - GF
            - GG
            - GH
            - GI
            - GL
            - GM
            - GN
            - GP
            - GQ
            - GR
            - GS
            - GT
            - GU
            - GW
            - GY
            - HK
            - HM
            - HN
            - HR
            - HT
            - HU
            - IC
            - ID
            - IE
            - IL
            - IM
            - IN
            - IO
            - IQ
            - IR
            - IS
            - IT
            - JE
            - JM
            - JO
            - JP
            - KE
            - KG
            - KH
            - KI
            - KM
            - KN
            - KP
            - KR
            - KW
            - KY
            - KZ
            - LA
            - LB
            - LC
            - LI
            - LK
            - LR
            - LS
            - LT
            - LU
            - LV
            - LY
            - MA
            - MC
            - MD
            - ME
            - MF
            - MG
            - MH
            - MK
            - ML
            - MM
            - MN
            - MO
            - MP
            - MQ
            - MR
            - MS
            - MT
            - MU
            - MV
            - MW
            - MX
            - MY
            - MZ
            - NA
            - NC
            - NE
            - NF
            - NG
            - NI
            - NL
            - 'NO'
            - NP
            - NR
            - NT
            - NU
            - NZ
            - OM
            - PA
            - PE
            - PF
            - PG
            - PH
            - PK
            - PL
            - PM
            - PN
            - PR
            - PS
            - PT
            - PW
            - PY
            - QA
            - RE
            - RO
            - RS
            - RU
            - RW
            - SA
            - SB
            - SC
            - SD
            - SE
            - SF
            - SG
            - SH
            - SI
            - SJ
            - SK
            - SL
            - SM
            - SN
            - SO
            - SR
            - SS
            - ST
            - SU
            - SV
            - SX
            - SY
            - SZ
            - TA
            - TC
            - TD
            - TF
            - TG
            - TH
            - TJ
            - TK
            - TL
            - TM
            - TN
            - TO
            - TP
            - TR
            - TT
            - TV
            - TW
            - TZ
            - UA
            - UG
            - UK
            - UM
            - US
            - UY
            - UZ
            - VA
            - VC
            - VE
            - VG
            - VI
            - VN
            - VU
            - WF
            - WS
            - XI
            - XU
            - XK
            - YE
            - YT
            - YU
            - ZA
            - ZM
            - ZR
            - ZW
        postalCode:
          type: string
          description: A postal code, also known as postcode, PIN or ZIP Code
        city:
          type: string
          description: 'The city of the address (Synonym: Town, village, municipality)'
        administrativeAreaLevel1:
          type: string
          description: Identifying code of the Region within the country (e.g. Bayern)
        deliveryServiceNumber:
          type: string
          description: Describes the PO Box or private Bag number the delivery should be placed at.
        deliveryServiceType:
          type: string
          description: The type of this specified delivery
          enum:
            - PO_BOX
            - PRIVATE_BAG
            - BOITE_POSTALE
        deliveryServiceQualifier:
          type: string
          description: Delivery Service Qualifier
      description: Alternative Postal Address Part
    ChangeLogSearchRequest:
      type: object
      properties:
        fromTime:
          type: string
          format: date-time
        externalIds:
          uniqueItems: true
          type: array
          items:
            type: string
        lsaTypes:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - LEGAL_ENTITY
              - SITE
              - ADDRESS
    ChangelogResponse:
      type: object
      properties:
        externalId:
          type: string
        businessPartnerType:
          type: string
          enum:
            - LEGAL_ENTITY
            - SITE
            - ADDRESS
        modifiedAt:
          type: string
          format: date-time
      description: Changelog entry for a business partner
    Classification:
      type: object
      properties:
        value:
          type: string
          description: Name of the classification
        code:
          type: string
          description: Identifying code of the classification, if applicable
        type:
          type: string
          description: Type of specified classification
          enum:
            - NACE
            - NAF
            - NAICS
            - SIC
      description: Classification record for a business partner
    ErrorInfoChangeLogOutputError:
      title: ErrorInfo
      type: object
      properties:
        errorCode:
          type: string
          description: ChangeLogOutputError
          enum:
            - ExternalIdNotFound
        message:
          type: string
        entityKey:
          type: string
      description: Holds information about failures
    GeoCoordinates:
      type: object
      properties:
        longitude:
          type: number
          description: Longitude coordinate
          format: float
        latitude:
          type: number
          description: Latitude coordinate
          format: float
        altitude:
          type: number
          description: Altitude, if applicable
          format: float
      description: Geo coordinates record for an address
    LegalEntityGateInputRequest:
      type: object
      properties:
        legalNameParts:
          type: array
          items:
            type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/LegalEntityIdentifier'
        legalShortName:
          type: string
          description: Abbreviated name or shorthand
        legalForm:
          type: string
          description: Technical key of the legal form
        states:
          type: array
          items:
            $ref: '#/components/schemas/LegalEntityState'
        classifications:
          type: array
          items:
            $ref: '#/components/schemas/Classification'
        roles:
          type: array
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
        legalAddress:
          $ref: '#/components/schemas/LogisticAddressGateDto'
        externalId:
          type: string
      description: Legal entity with external id
    LegalEntityGateInputResponse:
      type: object
      properties:
        legalNameParts:
          type: array
          items:
            type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/LegalEntityIdentifier'
        legalShortName:
          type: string
          description: Abbreviated name or shorthand
        legalForm:
          type: string
          description: Technical key of the legal form
        states:
          type: array
          items:
            $ref: '#/components/schemas/LegalEntityState'
        classifications:
          type: array
          items:
            $ref: '#/components/schemas/Classification'
        roles:
          type: array
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
        legalAddress:
          $ref: '#/components/schemas/AddressGateInputResponse'
        externalId:
          type: string
      description: Legal entity with external id
    LegalEntityGateOutputRequest:
      type: object
      properties:
        legalNameParts:
          type: array
          items:
            type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/LegalEntityIdentifier'
        legalShortName:
          type: string
          description: Abbreviated name or shorthand
        legalForm:
          type: string
          description: Technical key of the legal form
        states:
          type: array
          items:
            $ref: '#/components/schemas/LegalEntityState'
        classifications:
          type: array
          items:
            $ref: '#/components/schemas/Classification'
        roles:
          type: array
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
        legalAddress:
          $ref: '#/components/schemas/AddressGateOutputChildRequest'
        externalId:
          type: string
        bpn:
          type: string
      description: Legal entity with external id
    LegalEntityGateOutputResponse:
      type: object
      properties:
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/LegalEntityIdentifier'
        legalShortName:
          type: string
          description: Abbreviated name or shorthand
        legalForm:
          type: string
          description: Technical key of the legal form
        states:
          type: array
          items:
            $ref: '#/components/schemas/LegalEntityState'
        classifications:
          type: array
          items:
            $ref: '#/components/schemas/Classification'
        legalNameParts:
          type: array
          items:
            type: string
        roles:
          type: array
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
        legalAddress:
          $ref: '#/components/schemas/AddressGateInputResponse'
        externalId:
          type: string
        bpn:
          type: string
      description: Legal entity with external id
    LegalEntityIdentifier:
      type: object
      properties:
        value:
          type: string
          description: Value of the identifier
        type:
          type: string
          description: Technical key of the type to which this identifier belongs to
        issuingBody:
          type: string
          description: Body which issued the identifier
      description: Identifier record for a legal entity
    LegalEntityState:
      type: object
      properties:
        officialDenotation:
          type: string
          description: Exact, official denotation of the status
        validFrom:
          type: string
          description: Since when the status is/was valid
          format: date-time
        validTo:
          type: string
          description: Until the status was valid, if applicable
          format: date-time
        type:
          type: string
          description: The type of this specified status
          enum:
            - ACTIVE
            - INACTIVE
      description: Status record of a legal entity
    LogisticAddressGateDto:
      type: object
      properties:
        nameParts:
          type: array
          description: |-
            Name of the logistic address of the business partner. This is not according to official
            registers but according to the name the uploading sharing member chooses.
          items:
            type: string
            description: |-
              Name of the logistic address of the business partner. This is not according to official
              registers but according to the name the uploading sharing member chooses.
        states:
          type: array
          items:
            $ref: '#/components/schemas/AddressState'
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/AddressIdentifier'
        physicalPostalAddress:
          $ref: '#/components/schemas/PhysicalPostalAddressGateDto'
        alternativePostalAddress:
          $ref: '#/components/schemas/AlternativePostalAddress'
        roles:
          type: array
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
      description: Address record for a business partner
    PageChangeLogResponseChangelogResponse:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        contentSize:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ChangelogResponse'
        invalidEntries:
          type: integer
          format: int32
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorInfoChangeLogOutputError'
      description: Paginated collection of results
    PageResponseAddressGateInputResponse:
      type: object
      properties:
        totalElements:
          type: integer
          description: Total number of all results in all pages
          format: int64
        totalPages:
          type: integer
          description: Total number pages
          format: int32
        page:
          type: integer
          description: Current page number
          format: int32
        contentSize:
          type: integer
          description: Number of results in the page
          format: int32
        content:
          type: array
          description: Collection of results in the page
          items:
            $ref: '#/components/schemas/AddressGateInputResponse'
      description: Paginated collection of results
    PageResponseLegalEntityGateInputResponse:
      type: object
      properties:
        totalElements:
          type: integer
          description: Total number of all results in all pages
          format: int64
        totalPages:
          type: integer
          description: Total number pages
          format: int32
        page:
          type: integer
          description: Current page number
          format: int32
        contentSize:
          type: integer
          description: Number of results in the page
          format: int32
        content:
          type: array
          description: Collection of results in the page
          items:
            $ref: '#/components/schemas/LegalEntityGateInputResponse'
      description: Paginated collection of results
    PageResponseLegalEntityGateOutputResponse:
      type: object
      properties:
        totalElements:
          type: integer
          description: Total number of all results in all pages
          format: int64
        totalPages:
          type: integer
          description: Total number pages
          format: int32
        page:
          type: integer
          description: Current page number
          format: int32
        contentSize:
          type: integer
          description: Number of results in the page
          format: int32
        content:
          type: array
          description: Collection of results in the page
          items:
            $ref: '#/components/schemas/LegalEntityGateOutputResponse'
      description: Paginated collection of results
    PageResponseSharingState:
      type: object
      properties:
        totalElements:
          type: integer
          description: Total number of all results in all pages
          format: int64
        totalPages:
          type: integer
          description: Total number pages
          format: int32
        page:
          type: integer
          description: Current page number
          format: int32
        contentSize:
          type: integer
          description: Number of results in the page
          format: int32
        content:
          type: array
          description: Collection of results in the page
          items:
            $ref: '#/components/schemas/SharingState'
      description: Paginated collection of results
    PageResponseSiteGateInputResponse:
      type: object
      properties:
        totalElements:
          type: integer
          description: Total number of all results in all pages
          format: int64
        totalPages:
          type: integer
          description: Total number pages
          format: int32
        page:
          type: integer
          description: Current page number
          format: int32
        contentSize:
          type: integer
          description: Number of results in the page
          format: int32
        content:
          type: array
          description: Collection of results in the page
          items:
            $ref: '#/components/schemas/SiteGateInputResponse'
      description: Paginated collection of results
    PageResponseSiteGateOutputResponse:
      type: object
      properties:
        totalElements:
          type: integer
          description: Total number of all results in all pages
          format: int64
        totalPages:
          type: integer
          description: Total number pages
          format: int32
        page:
          type: integer
          description: Current page number
          format: int32
        contentSize:
          type: integer
          description: Number of results in the page
          format: int32
        content:
          type: array
          description: Collection of results in the page
          items:
            $ref: '#/components/schemas/SiteGateOutputResponse'
      description: Paginated collection of results
    PhysicalPostalAddressGateDto:
      type: object
      properties:
        geographicCoordinates:
          $ref: '#/components/schemas/GeoCoordinates'
        country:
          type: string
          description: Describes the country
          enum:
            - UNDEFINED
            - AC
            - AD
            - AE
            - AF
            - AG
            - AI
            - AL
            - AM
            - AN
            - AO
            - AQ
            - AR
            - AS
            - AT
            - AU
            - AW
            - AX
            - AZ
            - BA
            - BB
            - BD
            - BE
            - BF
            - BG
            - BH
            - BI
            - BJ
            - BL
            - BM
            - BN
            - BO
            - BQ
            - BR
            - BS
            - BT
            - BU
            - BV
            - BW
            - BY
            - BZ
            - CA
            - CC
            - CD
            - CF
            - CG
            - CH
            - CI
            - CK
            - CL
            - CM
            - CN
            - CO
            - CP
            - CR
            - CS
            - CU
            - CV
            - CW
            - CX
            - CY
            - CZ
            - DE
            - DG
            - DJ
            - DK
            - DM
            - DO
            - DZ
            - EA
            - EC
            - EE
            - EG
            - EH
            - ER
            - ES
            - ET
            - EU
            - EZ
            - FI
            - FJ
            - FK
            - FM
            - FO
            - FR
            - FX
            - GA
            - GB
            - GD
            - GE
            - GF
            - GG
            - GH
            - GI
            - GL
            - GM
            - GN
            - GP
            - GQ
            - GR
            - GS
            - GT
            - GU
            - GW
            - GY
            - HK
            - HM
            - HN
            - HR
            - HT
            - HU
            - IC
            - ID
            - IE
            - IL
            - IM
            - IN
            - IO
            - IQ
            - IR
            - IS
            - IT
            - JE
            - JM
            - JO
            - JP
            - KE
            - KG
            - KH
            - KI
            - KM
            - KN
            - KP
            - KR
            - KW
            - KY
            - KZ
            - LA
            - LB
            - LC
            - LI
            - LK
            - LR
            - LS
            - LT
            - LU
            - LV
            - LY
            - MA
            - MC
            - MD
            - ME
            - MF
            - MG
            - MH
            - MK
            - ML
            - MM
            - MN
            - MO
            - MP
            - MQ
            - MR
            - MS
            - MT
            - MU
            - MV
            - MW
            - MX
            - MY
            - MZ
            - NA
            - NC
            - NE
            - NF
            - NG
            - NI
            - NL
            - 'NO'
            - NP
            - NR
            - NT
            - NU
            - NZ
            - OM
            - PA
            - PE
            - PF
            - PG
            - PH
            - PK
            - PL
            - PM
            - PN
            - PR
            - PS
            - PT
            - PW
            - PY
            - QA
            - RE
            - RO
            - RS
            - RU
            - RW
            - SA
            - SB
            - SC
            - SD
            - SE
            - SF
            - SG
            - SH
            - SI
            - SJ
            - SK
            - SL
            - SM
            - SN
            - SO
            - SR
            - SS
            - ST
            - SU
            - SV
            - SX
            - SY
            - SZ
            - TA
            - TC
            - TD
            - TF
            - TG
            - TH
            - TJ
            - TK
            - TL
            - TM
            - TN
            - TO
            - TP
            - TR
            - TT
            - TV
            - TW
            - TZ
            - UA
            - UG
            - UK
            - UM
            - US
            - UY
            - UZ
            - VA
            - VC
            - VE
            - VG
            - VI
            - VN
            - VU
            - WF
            - WS
            - XI
            - XU
            - XK
            - YE
            - YT
            - YU
            - ZA
            - ZM
            - ZR
            - ZW
        postalCode:
          type: string
          description: A postal code, also known as postcode, PIN or ZIP Code
        city:
          type: string
          description: 'The city of the address (Synonym: Town, village, municipality)'
        street:
          $ref: '#/components/schemas/StreetGate'
        administrativeAreaLevel1:
          type: string
          description: Identifying code of the Region within the country (e.g. Bayern)
        administrativeAreaLevel2:
          type: string
          description: Further possibility to describe the region/address(e.g. County/Landkreis)
        administrativeAreaLevel3:
          type: string
          description: Further possibility to describe the region/address(e.g. Township/Gemeinde)
        district:
          type: string
          description: Divides the city in several smaller areas
        companyPostalCode:
          type: string
          description: A separate postal code for a company, also known as postcode, PIN or ZIP Code
        industrialZone:
          type: string
          description: The practice of designating an area for industrial development
        building:
          type: string
          description: Describes a specific building within the address
        floor:
          type: string
          description: Describes the floor/level the delivery shall take place
        door:
          type: string
          description: Describes the  door/room/suite on the respective floor the delivery shall take place
      description: Physical Postal Address Part
    SharingState:
      type: object
      properties:
        lsaType:
          type: string
          description: LSA Type
          enum:
            - LEGAL_ENTITY
            - SITE
            - ADDRESS
        externalId:
          type: string
          description: External identifier
        sharingStateType:
          type: string
          description: Type of sharing state
          enum:
            - Pending
            - Success
            - Error
        sharingErrorCode:
          type: string
          description: BusinessPartnerSharingError
          enum:
            - SharingProcessError
            - SharingTimeout
            - BpnNotInPool
        sharingErrorMessage:
          type: string
          description: Sharing error message (for error)
        bpn:
          type: string
          description: BPN (for success)
        sharingProcessStarted:
          type: string
          description: Sharing process started (not updated if null)
          format: date-time
    SiteGateInputRequest:
      type: object
      properties:
        nameParts:
          type: array
          description: Parts that make up the name of that site
          items:
            type: string
            description: Parts that make up the name of that site
        states:
          type: array
          items:
            $ref: '#/components/schemas/SiteState'
        roles:
          type: array
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
        mainAddress:
          $ref: '#/components/schemas/LogisticAddressGateDto'
        externalId:
          type: string
        legalEntityExternalId:
          type: string
      description: Site with legal entity reference
    SiteGateInputResponse:
      type: object
      properties:
        nameParts:
          type: array
          description: Parts that make up the name of that site
          items:
            type: string
            description: Parts that make up the name of that site
        states:
          type: array
          items:
            $ref: '#/components/schemas/SiteState'
        roles:
          type: array
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
        mainAddress:
          $ref: '#/components/schemas/AddressGateInputResponse'
        externalId:
          type: string
        legalEntityExternalId:
          type: string
      description: Site with legal entity reference
    SiteGateOutputRequest:
      type: object
      properties:
        nameParts:
          type: array
          description: Parts that make up the name of that site
          items:
            type: string
            description: Parts that make up the name of that site
        states:
          type: array
          items:
            $ref: '#/components/schemas/SiteState'
        roles:
          type: array
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
        mainAddress:
          $ref: '#/components/schemas/AddressGateOutputChildRequest'
        externalId:
          type: string
        legalEntityExternalId:
          type: string
        bpn:
          type: string
      description: Site with legal entity reference
    SiteGateOutputResponse:
      type: object
      properties:
        nameParts:
          type: array
          description: Parts that make up the name of that site
          items:
            type: string
            description: Parts that make up the name of that site
        states:
          type: array
          items:
            $ref: '#/components/schemas/SiteState'
        roles:
          type: array
          items:
            type: string
            enum:
              - SUPPLIER
              - CUSTOMER
        mainAddress:
          $ref: '#/components/schemas/AddressGateInputResponse'
        externalId:
          type: string
        legalEntityExternalId:
          type: string
        bpn:
          type: string
      description: Site with legal entity reference
    SiteState:
      type: object
      properties:
        description:
          type: string
          description: Description of the status
        validFrom:
          type: string
          description: Since when the status is/was valid
          format: date-time
        validTo:
          type: string
          description: Until the status was valid, if applicable
          format: date-time
        type:
          type: string
          description: The type of this specified status
          enum:
            - ACTIVE
            - INACTIVE
      description: Status record of a site
    StreetGate:
      type: object
      properties:
        namePrefix:
          type: string
          description: Describes the official name prefix  of the Street.
        additionalNamePrefix:
          type: string
          description: Describes the additional name prefix of the Street.
        name:
          type: string
          description: Describes the Name of the Street.
        additionalNameSuffix:
          type: string
          description: Describes the additional name suffix of the Street.
        houseNumber:
          type: string
          description: Describes the House Number
        milestone:
          type: string
          description: The Milestone is relevant for long roads without specific house numbers.
        direction:
          type: string
          description: Describes the direction
        nameSuffix:
          type: string
          description: Describes the name suffix of the Street.
      description: A public road in a city, town, or village, typically with houses and buildings on one or both sides.
    Unit:
      type: object
